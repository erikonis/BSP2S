<clones>
<systeminfo processor="nicad6" system="train" system2="test" granularity="files" threshold="0%" minlines="10" maxlines="2500"/>
<cloneinfo npcs="67606" npairs="1287"/>
<runinfo ncompares="37118322" cputime="3253682"/>
<classinfo nclasses="606"/>

<class classid="1" nclones="3" nlines="121" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s148459095P.java" startline="1" endline="139" pcid="441">
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main{

	static class Union{
		int[] id;
		int[] sz;

		public Union(int size){
			id = new int[size];
			sz = new int[size];
			for (int i = 0; i < size; ++i){
				id[i] = i;
				sz[i] = 1;
			}
		}

		public int find(int i){
			while(id[i] != i){
				i = id[i];
			}
			return i;
		}

		public boolean same(int i, int j){
			return find(i) == find(j);
		}

		public void union(int i, int j){
			int p = find(i);
			int q = find(j);

			if (p == q) return;

			if (sz[p] < sz[q]){
				id[p] = q;
				sz[q] += sz[p];
			}
			else{
				id[q] = p;
				sz[p] += sz[q];
			}
		}
	}

	public static void main(String[] args) throws IOException {
		Scanner in = new Scanner(System.in);
		while (true){
			int N = in.nextInt();
			int Q = in.nextInt();
			if (N == 0 && Q == 0) break;

			int[] id = new int[N];
			for (int i = 1; i < N; ++i){
				int p = in.nextInt() - 1;
				id[i] = p;
			}

			long sum = 0;
			for (int i = 0; i < Q; ++i){
				String opera = in.next();
				int c = in.nextInt() - 1;
				if (opera.equals("Q")){
					while (c != id[c]){
						c = id[c];
					}
					sum += (c + 1);
				}
				else{
					id[c] = c;
				}
			}
			System.out.println(sum);
		}

	}

	static class Scanner {

		private BufferedReader br;
		private StringTokenizer tok;

		public Scanner(InputStream is) throws IOException {
			br = new BufferedReader(new InputStreamReader(is));
			getLine();
		}

		private void getLine() throws IOException {
			while (tok == null || !tok.hasMoreTokens()) {
				tok = new StringTokenizer(br.readLine());
			}
		}

		private boolean hasNext() {
			return tok.hasMoreTokens();
		}

		public String next() throws IOException {
			if (hasNext()) {
				return tok.nextToken();
			} else {
				getLine();
				return tok.nextToken();
			}
		}

		public int nextInt() throws IOException {
			if (hasNext()) {
				return Integer.parseInt(tok.nextToken());
			} else {
				getLine();
				return Integer.parseInt(tok.nextToken());
			}
		}

		public long nextLong() throws IOException {
			if (hasNext()) {
				return Long.parseLong(tok.nextToken());
			} else {
				getLine();
				return Long.parseLong(tok.nextToken());
			}
		}

		public double nextDouble() throws IOException {
			if (hasNext()) {
				return Double.parseDouble(tok.nextToken());
			} else {
				getLine();
				return Double.parseDouble(tok.nextToken());
			}
		}
	}
}

</source>
<source file="../preprocessed_Datasplit/test/0/s951882746P.java" startline="1" endline="139" pcid="64071">
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main{

	static class Union{
		int[] id;
		int[] sz;

		public Union(int size){
			id = new int[size];
			sz = new int[size];
			for (int i = 0; i < size; ++i){
				id[i] = i;
				sz[i] = 1;
			}
		}

		public int find(int i){
			while(id[i] != i){
				i = id[i];
			}
			return i;
		}

		public boolean same(int i, int j){
			return find(i) == find(j);
		}

		public void union(int i, int j){
			int p = find(i);
			int q = find(j);

			if (p == q) return;

			if (sz[p] < sz[q]){
				id[p] = q;
				sz[q] += sz[p];
			}
			else{
				id[q] = p;
				sz[p] += sz[q];
			}
		}
	}

	public static void main(String[] args) throws IOException {
		Scanner in = new Scanner(System.in);
		while (true){
			int N = in.nextInt();
			int Q = in.nextInt();
			if (N == 0 && Q == 0) break;

			int[] id = new int[N];
			for (int i = 1; i < N; ++i){
				int p = in.nextInt() - 1;
				id[i] = p;
			}

			long sum = 0;
			for (int i = 0; i < Q; ++i){
				String opera = in.next();
				int c = in.nextInt() - 1;
				if (opera.equals("Q")){
					while (c != id[c]){
						c = id[c];
					}
					sum += (c + 1);
				}
				else{
					id[c] = c;
				}
			}
			System.out.println(sum);
		}

	}

	static class Scanner {

		private BufferedReader br;
		private StringTokenizer tok;

		public Scanner(InputStream is) throws IOException {
			br = new BufferedReader(new InputStreamReader(is));
			getLine();
		}

		private void getLine() throws IOException {
			while (tok == null || !tok.hasMoreTokens()) {
				tok = new StringTokenizer(br.readLine());
			}
		}

		private boolean hasNext() {
			return tok.hasMoreTokens();
		}

		public String next() throws IOException {
			if (hasNext()) {
				return tok.nextToken();
			} else {
				getLine();
				return tok.nextToken();
			}
		}

		public int nextInt() throws IOException {
			if (hasNext()) {
				return Integer.parseInt(tok.nextToken());
			} else {
				getLine();
				return Integer.parseInt(tok.nextToken());
			}
		}

		public long nextLong() throws IOException {
			if (hasNext()) {
				return Long.parseLong(tok.nextToken());
			} else {
				getLine();
				return Long.parseLong(tok.nextToken());
			}
		}

		public double nextDouble() throws IOException {
			if (hasNext()) {
				return Double.parseDouble(tok.nextToken());
			} else {
				getLine();
				return Double.parseDouble(tok.nextToken());
			}
		}
	}
}

</source>
<source file="../preprocessed_Datasplit/train/0/s258318295P.java" startline="1" endline="139" pcid="3792">
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main{

	static class Union{
		int[] id;
		int[] sz;

		public Union(int size){
			id = new int[size];
			sz = new int[size];
			for (int i = 0; i < size; ++i){
				id[i] = i;
				sz[i] = 1;
			}
		}

		public int find(int i){
			while(id[i] != i){
				i = id[i];
			}
			return i;
		}

		public boolean same(int i, int j){
			return find(i) == find(j);
		}

		public void union(int i, int j){
			int p = find(i);
			int q = find(j);

			if (p == q) return;

			if (sz[p] < sz[q]){
				id[p] = q;
				sz[q] += sz[p];
			}
			else{
				id[q] = p;
				sz[p] += sz[q];
			}
		}
	}

	public static void main(String[] args) throws IOException {
		Scanner in = new Scanner(System.in);
		while (true){
			int N = in.nextInt();
			int Q = in.nextInt();
			if (N == 0 && Q == 0) break;

			int[] id = new int[N];
			for (int i = 1; i < N; ++i){
				int p = in.nextInt() - 1;
				id[i] = p;
			}

			long sum = 0;
			for (int i = 0; i < Q; ++i){
				String opera = in.next();
				int c = in.nextInt() - 1;
				if (opera.equals("Q")){
					while (c != id[c]){
						c = id[c];
					}
					sum += (c + 1);
				}
				else{
					id[c] = c;
				}
			}
			System.out.println(sum);
		}

	}

	static class Scanner {

		private BufferedReader br;
		private StringTokenizer tok;

		public Scanner(InputStream is) throws IOException {
			br = new BufferedReader(new InputStreamReader(is));
			getLine();
		}

		private void getLine() throws IOException {
			while (tok == null || !tok.hasMoreTokens()) {
				tok = new StringTokenizer(br.readLine());
			}
		}

		private boolean hasNext() {
			return tok.hasMoreTokens();
		}

		public String next() throws IOException {
			if (hasNext()) {
				return tok.nextToken();
			} else {
				getLine();
				return tok.nextToken();
			}
		}

		public int nextInt() throws IOException {
			if (hasNext()) {
				return Integer.parseInt(tok.nextToken());
			} else {
				getLine();
				return Integer.parseInt(tok.nextToken());
			}
		}

		public long nextLong() throws IOException {
			if (hasNext()) {
				return Long.parseLong(tok.nextToken());
			} else {
				getLine();
				return Long.parseLong(tok.nextToken());
			}
		}

		public double nextDouble() throws IOException {
			if (hasNext()) {
				return Double.parseDouble(tok.nextToken());
			} else {
				getLine();
				return Double.parseDouble(tok.nextToken());
			}
		}
	}
}

</source>
</class>

<class classid="2" nclones="2" nlines="21" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s167771213P.java" startline="1" endline="24" pcid="1053">
import java.util.*;

class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        Integer a[] = new Integer[N];
        for (int i=0; i<N; i++) {
            a[i] = sc.nextInt();
        }
        Arrays.sort(a, Comparator.reverseOrder());

        int Alice = 0;
        int Bob   = 0;
        for (int i=0; i<N; i+=2) {
            Alice += a[i];
        }
        for (int i=1; i<N; i+=2) {
            Bob += a[i];
        }
        System.out.println(Alice - Bob);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/0/s456003682P.java" startline="1" endline="24" pcid="62382">
import java.util.*;

class Main{
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        int N=sc.nextInt();
        Integer a[]=new Integer[N];
        for(int i=0;i<N;i++){
            a[i]=sc.nextInt();
        }
        Arrays.sort(a,Comparator.reverseOrder());

        int Alice=0;
        int Bob=0;
        for(int i=0;i<N;i+=2){
            Alice+=a[i];
        }
        for(int i=1;i<N;i+=2){
            Bob+=a[i];
        }
        System.out.println(Alice-Bob);
    }
}

</source>
</class>

<class classid="3" nclones="2" nlines="140" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s185507055P.java" startline="1" endline="144" pcid="1605">
import java.io.*;
import java.util.*;
import java.util.Map.Entry;
import java.util.stream.Collectors;

@SuppressWarnings("unused")
public class Main {
	String fileName = "input.txt";
	final boolean isDebug = false;
	FastScanner in = new FastScanner(System.in);
	PrintWriter out = new PrintWriter(System.out);
	final int MOD = (int)1e9+7;
	final long INF = Long.MAX_VALUE / 2;

	void solve() throws Exception{
		int N = in.nextInt(), K = in.nextInt();

		if(K == 0){
			System.out.println((long)N*N);
		}else{
			long ans = 0;
			for(int b = K + 1; b <= N; b++){
				long num = N / b;
				int q = N % b;
				ans += num * (b - K);
				if(q >= K) ans += (q - K + 1);
			}
			System.out.println(ans);
		}
	}

	public static void main(String[] args) throws Exception {
		new Main().m();
	}

	void m() throws Exception {
		if(isDebug) in = new FastScanner(new FileInputStream(fileName));
		solve();
		out.flush();
	}
}

class FastScanner {
	Reader input;

	FastScanner() {this(System.in);}
	FastScanner(InputStream stream) {this.input = new BufferedReader(new InputStreamReader(stream));}

	int nextInt() {return (int) nextLong();}

	long nextLong() {
		try {
			int sign = 1;
			int b = input.read();
			while ((b < '0' || '9' < b) && b != '-' && b != '+') {
				b = input.read();
			}
			if (b == '-') {
				sign = -1;
				b = input.read();
			} else if (b == '+') {
				b = input.read();
			}
			long ret = b - '0';
			while (true) {
				b = input.read();
				if (b < '0' || '9' < b) return ret * sign;
				ret *= 10;
				ret += b - '0';
			}
		} catch (IOException e) {
			e.printStackTrace();
			return -1;
		}
	}

	double nextDouble() {
		try {
			double sign = 1;
			int b = input.read();
			while ((b < '0' || '9' < b) && b != '-' && b != '+') {
				b = input.read();
			}
			if (b == '-') {
				sign = -1;
				b = input.read();
			} else if (b == '+') {
				b = input.read();
			}
			double ret = b - '0';
			while (true) {
				b = input.read();
				if (b < '0' || '9' < b) break;
				ret *= 10;
				ret += b - '0';
			}
			if (b != '.') return sign * ret;
			double div = 1;
			b = input.read();
			while ('0' <= b && b <= '9') {
				ret *= 10;
				ret += b - '0';
				div *= 10;
				b = input.read();
			}
			return sign * ret / div;
		} catch (IOException e) {
			e.printStackTrace();
			return Double.NaN;
		}
	}

	char nextChar() {
		try {
			int b = input.read();
			while (Character.isWhitespace(b)) {
				b = input.read();
			}
			return (char) b;
		} catch (IOException e) {
			e.printStackTrace();
			return 0;
		}
	}

	String nextStr() {
		try {
			StringBuilder sb = new StringBuilder();
			int b = input.read();
			while (Character.isWhitespace(b)) {
				b = input.read();
			}
			while (b != -1 && !Character.isWhitespace(b)) {
				sb.append((char) b);
				b = input.read();
			}
			return sb.toString();
		} catch (IOException e) {
			e.printStackTrace();
			return "";
		}
	}
}

</source>
<source file="../preprocessed_Datasplit/test/0/s012414151P.java" startline="1" endline="144" pcid="60902">
import java.io.*;
import java.util.*;
import java.util.Map.Entry;
import java.util.stream.Collectors;

@SuppressWarnings("unused")
public class Main {
	String fileName = "input.txt";
	final boolean isDebug = false;
	FastScanner in = new FastScanner(System.in);
	PrintWriter out = new PrintWriter(System.out);
	final int MOD = (int)1e9+7;
	final long INF = Long.MAX_VALUE / 2;

	void solve() throws Exception{
		int N = in.nextInt(), K = in.nextInt();

		if(K == 0){
			System.out.println((long)N*N);
		}else{
			long ans = 0;
			for(int b = K + 1; b <= N; b++){
				long num = N / b;
				int q = N % b;
				ans += num * (b - K);
				if(q >= K) ans += (q - K + 1);
			}
			System.out.println(ans);
		}
	}

	public static void main(String[] args) throws Exception {
		new Main().m();
	}

	void m() throws Exception {
		if(isDebug) in = new FastScanner(new FileInputStream(fileName));
		solve();
		out.flush();
	}
}

class FastScanner {
	Reader input;

	FastScanner() {this(System.in);}
	FastScanner(InputStream stream) {this.input = new BufferedReader(new InputStreamReader(stream));}

	int nextInt() {return (int) nextLong();}

	long nextLong() {
		try {
			int sign = 1;
			int b = input.read();
			while ((b < '0' || '9' < b) && b != '-' && b != '+') {
				b = input.read();
			}
			if (b == '-') {
				sign = -1;
				b = input.read();
			} else if (b == '+') {
				b = input.read();
			}
			long ret = b - '0';
			while (true) {
				b = input.read();
				if (b < '0' || '9' < b) return ret * sign;
				ret *= 10;
				ret += b - '0';
			}
		} catch (IOException e) {
			e.printStackTrace();
			return -1;
		}
	}

	double nextDouble() {
		try {
			double sign = 1;
			int b = input.read();
			while ((b < '0' || '9' < b) && b != '-' && b != '+') {
				b = input.read();
			}
			if (b == '-') {
				sign = -1;
				b = input.read();
			} else if (b == '+') {
				b = input.read();
			}
			double ret = b - '0';
			while (true) {
				b = input.read();
				if (b < '0' || '9' < b) break;
				ret *= 10;
				ret += b - '0';
			}
			if (b != '.') return sign * ret;
			double div = 1;
			b = input.read();
			while ('0' <= b && b <= '9') {
				ret *= 10;
				ret += b - '0';
				div *= 10;
				b = input.read();
			}
			return sign * ret / div;
		} catch (IOException e) {
			e.printStackTrace();
			return Double.NaN;
		}
	}

	char nextChar() {
		try {
			int b = input.read();
			while (Character.isWhitespace(b)) {
				b = input.read();
			}
			return (char) b;
		} catch (IOException e) {
			e.printStackTrace();
			return 0;
		}
	}

	String nextStr() {
		try {
			StringBuilder sb = new StringBuilder();
			int b = input.read();
			while (Character.isWhitespace(b)) {
				b = input.read();
			}
			while (b != -1 && !Character.isWhitespace(b)) {
				sb.append((char) b);
				b = input.read();
			}
			return sb.toString();
		} catch (IOException e) {
			e.printStackTrace();
			return "";
		}
	}
}

</source>
</class>

<class classid="4" nclones="2" nlines="53" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s189078226P.java" startline="1" endline="59" pcid="1714">
import java.util.Arrays;
import java.util.Comparator;
import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		Scanner cin = new Scanner(System.in);
		for(;;){
			int N=Integer.parseInt(cin.nextLine());
			if(N==0)break;

			int[][] a = new int[N][2];
			for(int i=0;i<N;i++){
				String[] s =cin.nextLine().split(" ");
				int[] b = new int[s.length-1];
				a[i][0]=Integer.parseInt(s[0]);
				int frame=1;
				for(int j=1;j<s.length;j++){
					b[j-1]=Integer.parseInt(s[j]);
				}
				for(int j=0;j<b.length;){
					if(frame==10){
						a[i][1]+=b[j];
						j++;
						continue;
					}
					a[i][1]+=b[j]+b[j+1];
					if(b[j]==10){
						a[i][1]+=b[j+2];
						j++;
					}
					else{
						if(b[j]+b[j+1]==10){
							a[i][1]+=b[j+2];
						}
						j+=2;

					}
					frame++;
				}
			}
			Arrays.sort(a,new Comparator<int[]>(){
				public int compare(int[] a,int[] b){
					if(a[1]==b[1]){
						return a[0]-b[0];
					}
					return b[1]-a[1];
				}
			});

			for(int i=0;i<N;i++){
				System.out.println(a[i][0]+ " " + a[i][1]);
			}
		}
	}

}

</source>
<source file="../preprocessed_Datasplit/test/0/s366179451P.java" startline="1" endline="59" pcid="62066">
import java.util.Arrays;
import java.util.Comparator;
import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		Scanner cin = new Scanner(System.in);
		for(;;){
			int N=Integer.parseInt(cin.nextLine());
			if(N==0)break;

			int[][] a = new int[N][2];
			for(int i=0;i<N;i++){
				String[] s =cin.nextLine().split(" ");
				int[] b = new int[s.length-1];
				a[i][0]=Integer.parseInt(s[0]);
				int frame=1;
				for(int j=1;j<s.length;j++){
					b[j-1]=Integer.parseInt(s[j]);
				}
				for(int j=0;j<b.length;){
					if(frame==10){
						a[i][1]+=b[j];
						j++;
						continue;
					}
					a[i][1]+=b[j]+b[j+1];
					if(b[j]==10){
						a[i][1]+=b[j+2];
						j++;
					}
					else{
						if(b[j]+b[j+1]==10){
							a[i][1]+=b[j+2];
						}
						j+=2;

					}
					frame++;
				}
			}
			Arrays.sort(a,new Comparator<int[]>(){
				public int compare(int[] a,int[] b){
					if(a[1]==b[1]){
						return a[0]-b[0];
					}
					return b[1]-a[1];
				}
			});

			for(int i=0;i<N;i++){
				System.out.println(a[i][0]+ " " + a[i][1]);
			}
		}
	}

}

</source>
</class>

<class classid="5" nclones="3" nlines="133" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s192571646P.java" startline="1" endline="143" pcid="1817">
import java.util.*;
import java.io.*;

public class Main {
    private static IO io = new IO();
    private static List<ArrayList<int[]>> g = new ArrayList<>();
    private static int cost[] = new int[10001];
    private static int min[] = new int[10001];
    private static int INF = 1145141919;
    private static PriorityQueue<int[]> que = new PriorityQueue<>(10001, new Comparator<int[]>() {
        public int compare (int a[], int b[]) {
            return a[0]-b[0];
        }
    });
    public static void main(String[] args) {
        while (true) {
            int n = io.nextInt();
            int m = io.nextInt();
            if (n==0 && m==0) break;
            g.clear();
            for (int i=0; i<=n; i++) g.add(new ArrayList<>());
            Arrays.fill(min, INF);
            Arrays.fill(cost, INF);
            min[1] = 0;
            cost[1] = 0;
            for (int i = 0; i < m; i++) {
                int ui = io.nextInt();
                int vi = io.nextInt();
                int di = io.nextInt();
                int ci = io.nextInt();
                g.get(ui).add(new int[] {vi, di, ci});
                g.get(vi).add(new int[] {ui, di, ci});
            }
            int ans = 0;
            que.offer(new int[] {0,0,1});
            while (!que.isEmpty()) {
                int poll[] = que.poll();
                int dis = poll[0];
                int cos = poll[1];
                int now = poll[2];
                if (min[now]<dis) continue;
                for (int i = 0; i < g.get(now).size(); i++) {
                    int go = g.get(now).get(i)[0];
                    int god = g.get(now).get(i)[1];
                    int goc = g.get(now).get(i)[2];
                    if (dis+god<min[go]) {
                        cost[go] = cos + goc;
                        min[go] = dis + god;
                        que.offer(new int[] {min[go], 0, go});
                    } else if (dis+god==min[go]) {
                        cost[go] = Math.min(cost[go], cos + goc);
                        que.offer(new int[] {min[go], 0, go});
                    }
                }
            }
            for (int i = 2; i <= n; i++) ans += cost[i];
            System.out.println(ans);
        }
    }

    static class IO extends PrintWriter {
        private final InputStream in;
        private final byte[] buffer = new byte[1024];
        private int ptr = 0;
        private int buflen = 0;

        IO() {
            this(System.in);
        }

        IO(InputStream source) {
            super(System.out);
            this.in = source;
        }

        boolean hasNextByte() {
            if (ptr < buflen) return true;
            else {
                ptr = 0;
                try {
                    buflen = in.read(buffer);
                } catch (IOException e) {
                    e.printStackTrace();
                }
                if (buflen <= 0) return false;
            }
            return true;
        }

        int readByte() {
            if (hasNextByte()) return buffer[ptr++];
            else return -1;
        }

        boolean isPrintableChar(int c) {
            return 33 <= c && c <= 126;
        }

        void skipUnprintable() {
            while (hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++;
        }

        boolean hasNext() {
            skipUnprintable();
            return hasNextByte();
        }

        long nextLong() {
            if (!hasNext()) throw new NoSuchElementException();
            long n = 0;
            boolean minus = false;
            int b = readByte();
            if (b == '-') {
                minus = true;
                b = readByte();
            }
            if (b < '0' || '9' < b) throw new NumberFormatException();
            while (true) {
                if ('0' <= b && b <= '9') {
                    n *= 10;
                    n += b - '0';
                } else if (b == -1 || !isPrintableChar(b)) return minus ? -n : n;
                else throw new NumberFormatException();
                b = readByte();
            }
        }

        int nextInt() {
            long nl = nextLong();
            if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();
            return (int) nl;
        }

        public void close() {
            super.close();
            try {
                in.close();
            } catch (IOException ignored) {
            }
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/0/s698904588P.java" startline="1" endline="144" pcid="63201">
import java.util.*;
import java.io.*;

public class Main {
    private static IO io = new IO();
    private static List<ArrayList<int[]>> g = new ArrayList<>();
    private static int cost[] = new int[10001];
    private static int min[] = new int[10001];
    private static int INF = 1145141919;
    private static PriorityQueue<int[]> que = new PriorityQueue<>(10001, new Comparator<int[]>() {
        public int compare (int a[], int b[]) {
            return a[0]-b[0];
        }
    });
    public static void main(String[] args) {
        while (true) {

            int n = io.nextInt();
            int m = io.nextInt();
            if (n==0 && m==0) break;
            g.clear();
            for (int i=0; i<=n; i++) g.add(new ArrayList<>());
            Arrays.fill(min, INF);
            Arrays.fill(cost, INF);
            min[1] = 0;
            cost[1] = 0;
            for (int i = 0; i < m; i++) {
                int ui = io.nextInt();
                int vi = io.nextInt();
                int di = io.nextInt();
                int ci = io.nextInt();
                g.get(ui).add(new int[] {vi, di, ci});
                g.get(vi).add(new int[] {ui, di, ci});
            }
            int ans = 0;
            que.offer(new int[] {0,0,1});
            while (!que.isEmpty()) {
                int poll[] = que.poll();
                int dis = poll[0];
                int cos = poll[1];
                int now = poll[2];
                if (min[now]<dis) continue;
                for (int i = 0; i < g.get(now).size(); i++) {
                    int go = g.get(now).get(i)[0];
                    int god = g.get(now).get(i)[1];
                    int goc = g.get(now).get(i)[2];
                    if (dis+god<min[go]) {
                        cost[go] = cos + goc;
                        min[go] = dis + god;
                        que.offer(new int[] {min[go], 0, go});
                    } else if (dis+god==min[go]) {
                        cost[go] = Math.min(cost[go], cos + goc);
                        que.offer(new int[] {min[go], 0, go});
                    }
                }
            }
            for (int i = 2; i <= n; i++) ans += cost[i];
            System.out.println(ans);
        }
    }

    static class IO extends PrintWriter {
        private final InputStream in;
        private final byte[] buffer = new byte[1024];
        private int ptr = 0;
        private int buflen = 0;

        IO() {
            this(System.in);
        }

        IO(InputStream source) {
            super(System.out);
            this.in = source;
        }

        boolean hasNextByte() {
            if (ptr < buflen) return true;
            else {
                ptr = 0;
                try {
                    buflen = in.read(buffer);
                } catch (IOException e) {
                    e.printStackTrace();
                }
                if (buflen <= 0) return false;
            }
            return true;
        }

        int readByte() {
            if (hasNextByte()) return buffer[ptr++];
            else return -1;
        }

        boolean isPrintableChar(int c) {
            return 33 <= c && c <= 126;
        }

        void skipUnprintable() {
            while (hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++;
        }

        boolean hasNext() {
            skipUnprintable();
            return hasNextByte();
        }

        long nextLong() {
            if (!hasNext()) throw new NoSuchElementException();
            long n = 0;
            boolean minus = false;
            int b = readByte();
            if (b == '-') {
                minus = true;
                b = readByte();
            }
            if (b < '0' || '9' < b) throw new NumberFormatException();
            while (true) {
                if ('0' <= b && b <= '9') {
                    n *= 10;
                    n += b - '0';
                } else if (b == -1 || !isPrintableChar(b)) return minus ? -n : n;
                else throw new NumberFormatException();
                b = readByte();
            }
        }

        int nextInt() {
            long nl = nextLong();
            if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();
            return (int) nl;
        }

        public void close() {
            super.close();
            try {
                in.close();
            } catch (IOException ignored) {
            }
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/0/s708674639P.java" startline="1" endline="144" pcid="17203">
import java.util.*;
import java.io.*;

public class Main {
    private static IO io = new IO();
    private static List<ArrayList<int[]>> g = new ArrayList<>();
    private static int cost[] = new int[10001];
    private static int min[] = new int[10001];
    private static int INF = 1145141919;
    private static PriorityQueue<int[]> que = new PriorityQueue<>(10001, new Comparator<int[]>() {
        public int compare (int a[], int b[]) {
            return a[0]-b[0];
        }
    });
    public static void main(String[] args) {
        while (true) {

            int n = io.nextInt();
            int m = io.nextInt();
            if (n==0 && m==0) break;
            g.clear();
            for (int i=0; i<=n; i++) g.add(new ArrayList<>());
            Arrays.fill(min, INF);
            Arrays.fill(cost, INF);
            min[1] = 0;
            cost[1] = 0;
            for (int i = 0; i < m; i++) {
                int ui = io.nextInt();
                int vi = io.nextInt();
                int di = io.nextInt();
                int ci = io.nextInt();
                g.get(ui).add(new int[] {vi, di, ci});
                g.get(vi).add(new int[] {ui, di, ci});
            }
            int ans = 0;
            que.offer(new int[] {0,0,1});
            while (!que.isEmpty()) {
                int poll[] = que.poll();
                int dis = poll[0];
                int cos = poll[1];
                int now = poll[2];
                if (min[now]<dis) continue;
                for (int i = 0; i < g.get(now).size(); i++) {
                    int go = g.get(now).get(i)[0];
                    int god = g.get(now).get(i)[1];
                    int goc = g.get(now).get(i)[2];
                    if (dis+god<min[go]) {
                        cost[go] = cos + goc;
                        min[go] = dis + god;
                        que.offer(new int[] {min[go], 0, go});
                    } else if (dis+god==min[go]) {
                        cost[go] = Math.min(cost[go], cos + goc);
                        que.offer(new int[] {min[go], 0, go});
                    }
                }
            }
            for (int i = 2; i <= n; i++) ans += cost[i];
            System.out.println(ans);
        }
    }

    static class IO extends PrintWriter {
        private final InputStream in;
        private final byte[] buffer = new byte[1024];
        private int ptr = 0;
        private int buflen = 0;

        IO() {
            this(System.in);
        }

        IO(InputStream source) {
            super(System.out);
            this.in = source;
        }

        boolean hasNextByte() {
            if (ptr < buflen) return true;
            else {
                ptr = 0;
                try {
                    buflen = in.read(buffer);
                } catch (IOException e) {
                    e.printStackTrace();
                }
                if (buflen <= 0) return false;
            }
            return true;
        }

        int readByte() {
            if (hasNextByte()) return buffer[ptr++];
            else return -1;
        }

        boolean isPrintableChar(int c) {
            return 33 <= c && c <= 126;
        }

        void skipUnprintable() {
            while (hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++;
        }

        boolean hasNext() {
            skipUnprintable();
            return hasNextByte();
        }

        long nextLong() {
            if (!hasNext()) throw new NoSuchElementException();
            long n = 0;
            boolean minus = false;
            int b = readByte();
            if (b == '-') {
                minus = true;
                b = readByte();
            }
            if (b < '0' || '9' < b) throw new NumberFormatException();
            while (true) {
                if ('0' <= b && b <= '9') {
                    n *= 10;
                    n += b - '0';
                } else if (b == -1 || !isPrintableChar(b)) return minus ? -n : n;
                else throw new NumberFormatException();
                b = readByte();
            }
        }

        int nextInt() {
            long nl = nextLong();
            if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();
            return (int) nl;
        }

        public void close() {
            super.close();
            try {
                in.close();
            } catch (IOException ignored) {
            }
        }
    }
}

</source>
</class>

<class classid="6" nclones="2" nlines="242" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s195610269P.java" startline="1" endline="284" pcid="1922">
import java.io.OutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;
import java.util.Deque;
import java.util.ArrayList;
import java.io.UncheckedIOException;
import java.util.List;
import java.io.Closeable;
import java.io.Writer;
import java.io.OutputStreamWriter;
import java.util.ArrayDeque;
import java.io.InputStream;

public class Main {
    public static void main(String[] args) throws Exception {
        Thread thread = new Thread(null, new TaskAdapter(), "", 1 << 29);
        thread.start();
        thread.join();
    }

    static class TaskAdapter implements Runnable {
        @Override
        public void run() {
            InputStream inputStream = System.in;
            OutputStream outputStream = System.out;
            FastInput in = new FastInput(inputStream);
            FastOutput out = new FastOutput(outputStream);
            CThreeCircuits solver = new CThreeCircuits();
            solver.solve(1, in, out);
            out.close();
        }
    }

    static class CThreeCircuits {
        Deque<Node> trace = new ArrayDeque<>();

        public void solve(int testNumber, FastInput in, FastOutput out) {
            int n = in.readInt();
            int m = in.readInt();
            int[] deg = new int[n];
            Node[] nodes = new Node[n];
            for (int i = 0; i < n; i++) {
                nodes[i] = new Node();
            }
            for (int i = 0; i < m; i++) {
                int a = in.readInt() - 1;
                int b = in.readInt() - 1;
                deg[a]++;
                deg[b]++;
                Edge e = new Edge();
                e.a = nodes[a];
                e.b = nodes[b];
                e.a.adj.add(e);
                e.b.adj.add(e);
            }

            String no = "No";
            String yes = "Yes";
            for (int i = 0; i < n; i++) {
                if (deg[i] % 2 == 1) {
                    out.println("No");
                    return;
                }
            }

            List<Node> xy = new ArrayList<>(2);
            for (int i = 0; i < n; i++) {
                if (deg[i] >= 6) {
                    out.println(yes);
                    return;
                }
                if (deg[i] == 4) {
                    xy.add(nodes[i]);
                }
            }

            if (xy.size() >= 3) {
                out.println(yes);
                return;
            }
            if (xy.size() <= 1) {
                out.println(no);
                return;
            }

            dfs(nodes[0]);
            List<Node> list = new ArrayList<>(trace);
            SequenceUtils.reverse(list);

            List<Node> compressed = new ArrayList<>();
            for (Node node : list) {
                if (xy.contains(node)) {
                    compressed.add(node);
                }
            }

            if (compressed.get(0) == compressed.get(1) || compressed.get(1) == compressed.get(2)) {
                out.println(yes);
            } else {
                out.println(no);
            }
        }

        public void dfs(Node root) {
            while (!root.adj.isEmpty()) {
                Edge tail = root.adj.remove(root.adj.size() - 1);
                if (tail.handled) {
                    continue;
                }
                tail.handled = true;
                Node node = tail.other(root);
                dfs(node);
            }
            trace.addLast(root);
        }

    }

    static class SequenceUtils {
        public static <T> void swap(List<T> data, int i, int j) {
            T tmp = data.get(i);
            data.set(i, data.get(j));
            data.set(j, tmp);
        }

        public static <T> void reverse(List<T> data, int l, int r) {
            while (l < r) {
                swap(data, l, r);
                l++;
                r--;
            }
        }

        public static <T> void reverse(List<T> data) {
            reverse(data, 0, data.size() - 1);
        }

    }

    static class Node {
        List<Edge> adj = new ArrayList<>();

    }

    static class FastInput {
        private final InputStream is;
        private byte[] buf = new byte[1 << 13];
        private int bufLen;
        private int bufOffset;
        private int next;

        public FastInput(InputStream is) {
            this.is = is;
        }

        private int read() {
            while (bufLen == bufOffset) {
                bufOffset = 0;
                try {
                    bufLen = is.read(buf);
                } catch (IOException e) {
                    bufLen = -1;
                }
                if (bufLen == -1) {
                    return -1;
                }
            }
            return buf[bufOffset++];
        }

        public void skipBlank() {
            while (next >= 0 && next <= 32) {
                next = read();
            }
        }

        public int readInt() {
            int sign = 1;

            skipBlank();
            if (next == '+' || next == '-') {
                sign = next == '+' ? 1 : -1;
                next = read();
            }

            int val = 0;
            if (sign == 1) {
                while (next >= '0' && next <= '9') {
                    val = val * 10 + next - '0';
                    next = read();
                }
            } else {
                while (next >= '0' && next <= '9') {
                    val = val * 10 - next + '0';
                    next = read();
                }
            }

            return val;
        }

    }

    static class FastOutput implements AutoCloseable, Closeable, Appendable {
        private StringBuilder cache = new StringBuilder(10 << 20);
        private final Writer os;

        public FastOutput append(CharSequence csq) {
            cache.append(csq);
            return this;
        }

        public FastOutput append(CharSequence csq, int start, int end) {
            cache.append(csq, start, end);
            return this;
        }

        public FastOutput(Writer os) {
            this.os = os;
        }

        public FastOutput(OutputStream os) {
            this(new OutputStreamWriter(os));
        }

        public FastOutput append(char c) {
            cache.append(c);
            return this;
        }

        public FastOutput append(String c) {
            cache.append(c);
            return this;
        }

        public FastOutput println(String c) {
            return append(c).println();
        }

        public FastOutput println() {
            cache.append(System.lineSeparator());
            return this;
        }

        public FastOutput flush() {
            try {
                os.append(cache);
                os.flush();
                cache.setLength(0);
            } catch (IOException e) {
                throw new UncheckedIOException(e);
            }
            return this;
        }

        public void close() {
            flush();
            try {
                os.close();
            } catch (IOException e) {
                throw new UncheckedIOException(e);
            }
        }

        public String toString() {
            return cache.toString();
        }

    }

    static class Edge {
        Node a;
        Node b;
        boolean handled;

        Node other(Node x) {
            return a == x ? b : a;
        }

    }
}

</source>
<source file="../preprocessed_Datasplit/test/0/s045421668P.java" startline="1" endline="284" pcid="60994">
import java.io.OutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;
import java.util.Deque;
import java.util.ArrayList;
import java.io.UncheckedIOException;
import java.util.List;
import java.io.Closeable;
import java.io.Writer;
import java.io.OutputStreamWriter;
import java.util.ArrayDeque;
import java.io.InputStream;

public class Main {
    public static void main(String[] args) throws Exception {
        Thread thread = new Thread(null, new TaskAdapter(), "", 1 << 29);
        thread.start();
        thread.join();
    }

    static class TaskAdapter implements Runnable {
        @Override
        public void run() {
            InputStream inputStream = System.in;
            OutputStream outputStream = System.out;
            FastInput in = new FastInput(inputStream);
            FastOutput out = new FastOutput(outputStream);
            CThreeCircuits solver = new CThreeCircuits();
            solver.solve(1, in, out);
            out.close();
        }
    }

    static class CThreeCircuits {
        Deque<Node> trace = new ArrayDeque<>();

        public void solve(int testNumber, FastInput in, FastOutput out) {
            int n = in.readInt();
            int m = in.readInt();
            int[] deg = new int[n];
            Node[] nodes = new Node[n];
            for (int i = 0; i < n; i++) {
                nodes[i] = new Node();
            }
            for (int i = 0; i < m; i++) {
                int a = in.readInt() - 1;
                int b = in.readInt() - 1;
                deg[a]++;
                deg[b]++;
                Edge e = new Edge();
                e.a = nodes[a];
                e.b = nodes[b];
                e.a.adj.add(e);
                e.b.adj.add(e);
            }

            String no = "No";
            String yes = "Yes";
            for (int i = 0; i < n; i++) {
                if (deg[i] % 2 == 1) {
                    out.println("No");
                    return;
                }
            }

            List<Node> xy = new ArrayList<>(2);
            for (int i = 0; i < n; i++) {
                if (deg[i] >= 6) {
                    out.println(yes);
                    return;
                }
                if (deg[i] == 4) {
                    xy.add(nodes[i]);
                }
            }

            if (xy.size() >= 3) {
                out.println(yes);
                return;
            }
            if (xy.size() <= 1) {
                out.println(no);
                return;
            }

            dfs(nodes[0]);
            List<Node> list = new ArrayList<>(trace);
            SequenceUtils.reverse(list);

            List<Node> compressed = new ArrayList<>();
            for (Node node : list) {
                if (xy.contains(node)) {
                    compressed.add(node);
                }
            }

            if (compressed.get(0) == compressed.get(1) || compressed.get(1) == compressed.get(2)) {
                out.println(yes);
            } else {
                out.println(no);
            }
        }

        public void dfs(Node root) {
            while (!root.adj.isEmpty()) {
                Edge tail = root.adj.remove(root.adj.size() - 1);
                if (tail.handled) {
                    continue;
                }
                tail.handled = true;
                Node node = tail.other(root);
                dfs(node);
            }
            trace.addLast(root);
        }

    }

    static class SequenceUtils {
        public static <T> void swap(List<T> data, int i, int j) {
            T tmp = data.get(i);
            data.set(i, data.get(j));
            data.set(j, tmp);
        }

        public static <T> void reverse(List<T> data, int l, int r) {
            while (l < r) {
                swap(data, l, r);
                l++;
                r--;
            }
        }

        public static <T> void reverse(List<T> data) {
            reverse(data, 0, data.size() - 1);
        }

    }

    static class Node {
        List<Edge> adj = new ArrayList<>();

    }

    static class FastInput {
        private final InputStream is;
        private byte[] buf = new byte[1 << 13];
        private int bufLen;
        private int bufOffset;
        private int next;

        public FastInput(InputStream is) {
            this.is = is;
        }

        private int read() {
            while (bufLen == bufOffset) {
                bufOffset = 0;
                try {
                    bufLen = is.read(buf);
                } catch (IOException e) {
                    bufLen = -1;
                }
                if (bufLen == -1) {
                    return -1;
                }
            }
            return buf[bufOffset++];
        }

        public void skipBlank() {
            while (next >= 0 && next <= 32) {
                next = read();
            }
        }

        public int readInt() {
            int sign = 1;

            skipBlank();
            if (next == '+' || next == '-') {
                sign = next == '+' ? 1 : -1;
                next = read();
            }

            int val = 0;
            if (sign == 1) {
                while (next >= '0' && next <= '9') {
                    val = val * 10 + next - '0';
                    next = read();
                }
            } else {
                while (next >= '0' && next <= '9') {
                    val = val * 10 - next + '0';
                    next = read();
                }
            }

            return val;
        }

    }

    static class FastOutput implements AutoCloseable, Closeable, Appendable {
        private StringBuilder cache = new StringBuilder(10 << 20);
        private final Writer os;

        public FastOutput append(CharSequence csq) {
            cache.append(csq);
            return this;
        }

        public FastOutput append(CharSequence csq, int start, int end) {
            cache.append(csq, start, end);
            return this;
        }

        public FastOutput(Writer os) {
            this.os = os;
        }

        public FastOutput(OutputStream os) {
            this(new OutputStreamWriter(os));
        }

        public FastOutput append(char c) {
            cache.append(c);
            return this;
        }

        public FastOutput append(String c) {
            cache.append(c);
            return this;
        }

        public FastOutput println(String c) {
            return append(c).println();
        }

        public FastOutput println() {
            cache.append(System.lineSeparator());
            return this;
        }

        public FastOutput flush() {
            try {
                os.append(cache);
                os.flush();
                cache.setLength(0);
            } catch (IOException e) {
                throw new UncheckedIOException(e);
            }
            return this;
        }

        public void close() {
            flush();
            try {
                os.close();
            } catch (IOException e) {
                throw new UncheckedIOException(e);
            }
        }

        public String toString() {
            return cache.toString();
        }

    }

    static class Edge {
        Node a;
        Node b;
        boolean handled;

        Node other(Node x) {
            return a == x ? b : a;
        }

    }
}

</source>
</class>

<class classid="7" nclones="2" nlines="85" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s199319317P.java" startline="1" endline="104" pcid="2028">
import java.awt.geom.AffineTransform;
import java.awt.geom.Point2D;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String[] tmpArray = br.readLine().split(" ");
        double px1 = Double.parseDouble(tmpArray[0]);
        double py1 = Double.parseDouble(tmpArray[1]);
        double px2 = Double.parseDouble(tmpArray[2]);
        double py2 = Double.parseDouble(tmpArray[3]);

        Point2D p1 = new Point2D.Double(px1, py1);
        Point2D p2 = new Point2D.Double(px2, py2);

        int q = Integer.parseInt(br.readLine());

        for(int i = 0; i < q; i++) {
            tmpArray = br.readLine().split(" ");
            double x = Double.parseDouble(tmpArray[0]);
            double y = Double.parseDouble(tmpArray[1]);

            Point2D p = new Point2D.Double(x, y);

            int result = checkClockwise(p, p1, p2);

            switch(result) {
                case COUNTER_CLOCKWISE:
                    System.out.println("COUNTER_CLOCKWISE");
                    break;

                case CLOCKWISE:
                    System.out.println("CLOCKWISE");
                    break;

                case ONLINE_BACK:
                    System.out.println("ONLINE_BACK");
                    break;

                case ONLINE_FRONT:
                    System.out.println("ONLINE_FRONT");
                    break;

                case ON_SEGMENT:
                    System.out.println("ON_SEGMENT");
                    break;

                default:
                    break;
            }
        }
    }

    static final int COUNTER_CLOCKWISE = 1;
    static final int CLOCKWISE         = 2;
    static final int ONLINE_BACK       = 3;
    static final int ONLINE_FRONT      = 4;
    static final int ON_SEGMENT        = 5;
    static final double EPS            = 0.00000001;

    static int checkClockwise(Point2D p, Point2D p1, Point2D p2) {
        if(p1.getX() > p2.getX() || (p1.getX() == p2.getX() && p1.getY() > p2.getY())) {
            AffineTransform rotate = AffineTransform.getQuadrantRotateInstance(2);
            Point2D tmp = null;
            p  = rotate.transform(p , tmp);
            p1 = rotate.transform(p1, tmp);
            p2 = rotate.transform(p2, tmp);
        }
        double theta = Math.PI / 2;

        if(p1.getX() != p2.getX()) {
            theta = Math.atan((p1.getY() - p2.getY()) / (p1.getX() - p2.getX()));
        }

        AffineTransform affine;
        affine = AffineTransform.getRotateInstance(-theta);
        affine.concatenate(AffineTransform.getTranslateInstance(-p1.getX(), -p1.getY()));
        Point2D pD = new Point2D.Double();
        pD = affine.transform(p, pD);
        Point2D p2D = new Point2D.Double();
        p2D = affine.transform(p2, p2D);

        if(pD.getY() > EPS) {
            return COUNTER_CLOCKWISE;
        }
        else if(pD.getY() < -EPS) {
            return CLOCKWISE;
        }
        else if(pD.getX() < 0) {
            return ONLINE_BACK;
        }
        else if(pD.getX() > p2D.getX()) {
            return ONLINE_FRONT;
        }
        else {
            return ON_SEGMENT;
        }
    }

}

</source>
<source file="../preprocessed_Datasplit/test/0/s778145644P.java" startline="1" endline="111" pcid="63483">
import java.awt.geom.AffineTransform;
import java.awt.geom.Point2D;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main {

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		String[] tmpArray = br.readLine().split(" ");
		double px1 = Double.parseDouble(tmpArray[0]);
		double py1 = Double.parseDouble(tmpArray[1]);
		double px2 = Double.parseDouble(tmpArray[2]);
		double py2 = Double.parseDouble(tmpArray[3]);

		Point2D p1 = new Point2D.Double(px1, py1);
		Point2D p2 = new Point2D.Double(px2, py2);

		int q = Integer.parseInt(br.readLine());

		for(int i = 0; i < q; i++){
			tmpArray = br.readLine().split(" ");
			double x = Double.parseDouble(tmpArray[0]);
			double y = Double.parseDouble(tmpArray[1]);

			Point2D p = new Point2D.Double(x,y);

			int result = checkClockwise(p, p1, p2);

			switch (result) {
			case COUNTER_CLOCKWISE:
				System.out.println("COUNTER_CLOCKWISE");
				break;

			case CLOCKWISE:
				System.out.println("CLOCKWISE");
				break;

			case ONLINE_BACK:
				System.out.println("ONLINE_BACK");
				break;

			case ONLINE_FRONT:
				System.out.println("ONLINE_FRONT");
				break;

			case ON_SEGMENT:
				System.out.println("ON_SEGMENT");
				break;

			default:
				break;
			}
		}

	}

	static final int COUNTER_CLOCKWISE = 1;
	static final int CLOCKWISE = 2;
	static final int ONLINE_BACK = 3;
	static final int ONLINE_FRONT = 4;
	static final int ON_SEGMENT = 5;
	static final double EPS = 0.00000001;

	static int checkClockwise(Point2D p, Point2D p1, Point2D p2){
		if(p1.getX() > p2.getX() || (p1.getX() == p2.getX() && p1.getY() > p2.getY())){
			AffineTransform rotate = AffineTransform.getQuadrantRotateInstance(2);
			Point2D tmp = null;
			p = rotate.transform(p, tmp);
			p1 = rotate.transform(p1, tmp);
			p2 = rotate.transform(p2, tmp);

		}

		double theta = Math.PI/2;

		if(p1.getX() != p2.getX()){
			theta = Math.atan((p1.getY() - p2.getY()) / (p1.getX() - p2.getX()));
		}

		AffineTransform affine;
		affine = AffineTransform.getRotateInstance(-theta);
		affine.concatenate(AffineTransform.getTranslateInstance(-p1.getX(), -p1.getY()));

		Point2D pD = new Point2D.Double();
		pD = affine.transform(p, pD);
		Point2D p2D = new Point2D.Double();
		p2D = affine.transform(p2, p2D);

		if(pD.getY() > EPS){
			return COUNTER_CLOCKWISE;
		}
		else if(pD.getY() < -EPS){
			return CLOCKWISE;
		}
		else if(pD.getX() < 0){
			return ONLINE_BACK;
		}
		else if(pD.getX() > p2D.getX()){
			return ONLINE_FRONT;
		}
		else {
			return ON_SEGMENT;
		}

	}

}

</source>
</class>

<class classid="8" nclones="4" nlines="136" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s224566516P.java" startline="1" endline="156" pcid="2813">
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.util.Arrays;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) throws Exception {
        Scanner sc = new Scanner(System.in);
        double INF = Double.MAX_VALUE / 2;
        while (true) {
            int n = sc.nextInt();
            if (n == 0)
                break;
            Circle[] cs = new Circle[n];
            for (int i = 0; i < n; i++) {
                cs[i] = new Circle(sc.nextInt(), sc.nextInt(), sc.nextInt());
            }
            Point[] ps = new Point[2 * n];
            ps[0] = new Point(cs[0].x, cs[0].y);
            ps[ps.length - 1] = new Point(cs[n - 1].x, cs[n - 1].y);
            int c = 1;
            Line[] ls = new Line[n - 1];
            for (int i = 1; i < n; i++) {
                Point[] cis = cs[i].circleInterSection(cs[i - 1]);
                ps[c++] = cis[0];
                ps[c++] = cis[1];
                ls[i - 1] = new Line(cis[0], cis[1]);
            }
            double[][] cost = new double[2 * n][2 * n];
            for (int i = 0; i < 2 * n; i++) {
                Arrays.fill(cost[i], INF);
            }
            for (int i = 0; i <= 2 * n - 4; i++) {
                for (int j = i + 1; j < 2 * n; j++) {
                    if (j % 2 == 0) {
                        Line l1 = new Line(ps[i], ps[j]);
                        boolean inCircle = true;
                        for (int k = i % 2 == 0 ? i / 2 : i / 2 + 1; k < j / 2 - 1; k++) {
                            Line l2 = ls[k];
                            if (!l2.intersectsLine(l1)) {
                                inCircle = false;
                                break;
                            }
                        }
                        if (inCircle) {
                            cost[i][j] = l1.length();
                        }
                    } else {
                        Line l1 = new Line(ps[i], ps[j]);
                        boolean inCircle = true;
                        for (int k = i % 2 == 0 ? i / 2 : i / 2 + 1; k < j / 2; k++) {
                            Line l2 = ls[k];
                            if (!l2.intersectsLine(l1)) {
                                inCircle = false;
                                break;
                            }
                        }
                        if (inCircle) {
                            cost[i][j] = l1.length();
                        }
                    }
                }
            }
            cost[2 * n - 3][2 * n - 1] = new Line(ps[2 * n - 3], ps[2 * n - 1])
                    .length();
            cost[2 * n - 2][2 * n - 1] = new Line(ps[2 * n - 2], ps[2 * n - 1])
                    .length();
            for (int k = 0; k < 2 * n; k++) {
                for (int i = 0; i < 2 * n; i++) {
                    if (k < i)
                        break;
                    for (int j = i + 1; j < 2 * n; j++) {
                        cost[i][j] = Math.min(cost[i][j], cost[i][k]
                                + cost[k][j]);
                    }
                }
            }
            System.out.printf("%.5f\n", cost[0][2 * n - 1]);
        }

    }
}

@SuppressWarnings("serial")
class Point extends Point2D.Double {
    Point(int x, int y) {
        super(x, y);
    }

    Point(double x, double y) {
        super(x, y);
    }
}

@SuppressWarnings("serial")
class Line extends Line2D.Double {

    Line(Point p1, Point p2) {
        super(p1, p2);
    }

    public double length() {
        return Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));
    }

    public double ip(Line l) {
        Point q1 = new Point(l.x1, l.y1);
        Point q2 = new Point(l.x2, l.y2);
        return (x2 - x1) * (q2.x - q1.x) + (y2 - y1) * (q2.y - q1.y);
    }

    public double ep(Line l) {
        Point q1 = new Point(l.x1, l.y1);
        Point q2 = new Point(l.x2, l.y2);
        return (x2 - x1) * (q2.y - q1.y) - (y2 - y1) * (q2.x - q1.x);
    }
}

class Circle {
    int x;
    int y;
    int r;

    Circle(int x, int y, int r) {
        this.x = x;
        this.y = y;
        this.r = r;
    }

    public Point[] circleInterSection(Circle c2) {
        Circle c1 = this;
        double a = c1.x;
        double b = c1.y;
        double r = c1.r;
        double c = c2.x;
        double d = c2.y;
        double s = c2.r;
        double norm = (c - a) * (c - a) + (d - b) * (d - b);
        double t = 0.5 * (norm + r * r - s * s) / Math.sqrt(norm);
        double th = Math.acos(t / r);
        double th0 = Math.atan2((d - b), (c - a));
        double p1 = a + r * Math.cos(th + th0);
        double q1 = b + r * Math.sin(th + th0);
        double p2 = a + r * Math.cos(-th + th0);
        double q2 = b + r * Math.sin(-th + th0);
        Point[] ps = { new Point(p1, q1), new Point(p2, q2) };
        return ps;
    }

    public String toString() {
        return "x,y,r " + x + " " + y + " " + r + " ";
    }

}

</source>
<source file="../preprocessed_Datasplit/test/0/s050821645P.java" startline="1" endline="153" pcid="61018">
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.util.Arrays;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) throws Exception {
        Scanner sc = new Scanner(System.in);
        double INF = Double.MAX_VALUE / 2;
        while (true) {
            int n = sc.nextInt();
            if (n == 0)
                break;
            Circle[] cs = new Circle[n];
            for (int i = 0; i < n; i++) {
                cs[i] = new Circle(sc.nextInt(), sc.nextInt(), sc.nextInt());
            }
            Point[] ps = new Point[2 * n];
            ps[0] = new Point(cs[0].x, cs[0].y);
            ps[ps.length - 1] = new Point(cs[n - 1].x, cs[n - 1].y);
            int c = 1;
            Line[] ls = new Line[n - 1];
            for (int i = 1; i < n; i++) {
                Point[] cis = cs[i].circleInterSection(cs[i - 1]);
                ps[c++] = cis[0];
                ps[c++] = cis[1];
                ls[i - 1] = new Line(cis[0], cis[1]);
            }
            double[][] cost = new double[2 * n][2 * n];
            for (int i = 0; i < 2 * n; i++) {
                Arrays.fill(cost[i], INF);
            }
            for (int i = 0; i <= 2 * n - 4; i++) {
                for (int j = i + 1; j < 2 * n; j++) {
                    if (j % 2 == 0) {
                        Line l1 = new Line(ps[i], ps[j]);
                        boolean inCircle = true;
                        for (int k = i % 2 == 0 ? i / 2 : i / 2 + 1; k < j / 2 - 1; k++) {
                            Line l2 = ls[k];
                            if (!l2.intersectsLine(l1)) {
                                inCircle = false;
                                break;
                            }
                        }
                        if (inCircle) {
                            cost[i][j] = l1.length();
                        }
                    } else {
                        Line l1 = new Line(ps[i], ps[j]);
                        boolean inCircle = true;
                        for (int k = i % 2 == 0 ? i / 2 : i / 2 + 1; k < j / 2; k++) {
                            Line l2 = ls[k];
                            if (!l2.intersectsLine(l1)) {
                                inCircle = false;
                                break;
                            }
                        }
                        if (inCircle) {
                            cost[i][j] = l1.length();
                        }
                    }
                }
            }
            cost[2 * n - 3][2 * n - 1] = new Line(ps[2 * n - 3], ps[2 * n - 1])
                    .length();
            cost[2 * n - 2][2 * n - 1] = new Line(ps[2 * n - 2], ps[2 * n - 1])
                    .length();
            for (int k = 0; k < 2 * n; k++) {
                for (int i = 0; i < 2 * n; i++) {
                    if (k < i)
                        break;
                    for (int j = i + 1; j < 2 * n; j++) {
                        cost[i][j] = Math.min(cost[i][j], cost[i][k]
                                + cost[k][j]);
                    }
                }
            }
            System.out.printf("%.5f\n", cost[0][2 * n - 1]);
        }
    }
}

@SuppressWarnings("serial")
class Point extends Point2D.Double {
    Point(int x, int y) {
        super(x, y);
    }

    Point(double x, double y) {
        super(x, y);
    }
}

@SuppressWarnings("serial")
class Line extends Line2D.Double {

    Line(Point p1, Point p2) {
        super(p1, p2);
    }

    public double length() {
        return Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));
    }

    public double ip(Line l) {
        Point q1 = new Point(l.x1, l.y1);
        Point q2 = new Point(l.x2, l.y2);
        return (x2 - x1) * (q2.x - q1.x) + (y2 - y1) * (q2.y - q1.y);
    }

    public double ep(Line l) {
        Point q1 = new Point(l.x1, l.y1);
        Point q2 = new Point(l.x2, l.y2);
        return (x2 - x1) * (q2.y - q1.y) - (y2 - y1) * (q2.x - q1.x);
    }
}

class Circle {
    int x;
    int y;
    int r;

    Circle(int x, int y, int r) {
        this.x = x;
        this.y = y;
        this.r = r;
    }

    public Point[] circleInterSection(Circle c2) {
        Circle c1 = this;
        double a = c1.x;
        double b = c1.y;
        double r = c1.r;
        double c = c2.x;
        double d = c2.y;
        double s = c2.r;
        double norm = (c - a) * (c - a) + (d - b) * (d - b);
        double t = 0.5 * (norm + r * r - s * s) / Math.sqrt(norm);
        double th = Math.acos(t / r);
        double th0 = Math.atan2((d - b), (c - a));
        double p1 = a + r * Math.cos(th + th0);
        double q1 = b + r * Math.sin(th + th0);
        double p2 = a + r * Math.cos(-th + th0);
        double q2 = b + r * Math.sin(-th + th0);
        Point[] ps = { new Point(p1, q1), new Point(p2, q2) };
        return ps;
    }
    public String toString() {
        return "x,y,r " + x + " " + y + " " + r + " ";
    }
}

</source>
<source file="../preprocessed_Datasplit/train/0/s639372154P.java" startline="1" endline="153" pcid="15053">
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.util.Arrays;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) throws Exception {
        Scanner sc = new Scanner(System.in);
        double INF = Double.MAX_VALUE / 2;
        while (true) {
            int n = sc.nextInt();
            if (n == 0)
                break;
            Circle[] cs = new Circle[n];
            for (int i = 0; i < n; i++) {
                cs[i] = new Circle(sc.nextInt(), sc.nextInt(), sc.nextInt());
            }
            Point[] ps = new Point[2 * n];
            ps[0] = new Point(cs[0].x, cs[0].y);
            ps[ps.length - 1] = new Point(cs[n - 1].x, cs[n - 1].y);
            int c = 1;
            Line[] ls = new Line[n - 1];
            for (int i = 1; i < n; i++) {
                Point[] cis = cs[i].circleInterSection(cs[i - 1]);
                ps[c++] = cis[0];
                ps[c++] = cis[1];
                ls[i - 1] = new Line(cis[0], cis[1]);
            }
            double[][] cost = new double[2 * n][2 * n];
            for (int i = 0; i < 2 * n; i++) {
                Arrays.fill(cost[i], INF);
            }
            for (int i = 0; i <= 2 * n - 4; i++) {
                for (int j = i + 1; j < 2 * n; j++) {
                    if (j % 2 == 0) {
                        Line l1 = new Line(ps[i], ps[j]);
                        boolean inCircle = true;
                        for (int k = i % 2 == 0 ? i / 2 : i / 2 + 1; k < j / 2 - 1; k++) {
                            Line l2 = ls[k];
                            if (!l2.intersectsLine(l1)) {
                                inCircle = false;
                                break;
                            }
                        }
                        if (inCircle) {
                            cost[i][j] = l1.length();
                        }
                    } else {
                        Line l1 = new Line(ps[i], ps[j]);
                        boolean inCircle = true;
                        for (int k = i % 2 == 0 ? i / 2 : i / 2 + 1; k < j / 2; k++) {
                            Line l2 = ls[k];
                            if (!l2.intersectsLine(l1)) {
                                inCircle = false;
                                break;
                            }
                        }
                        if (inCircle) {
                            cost[i][j] = l1.length();
                        }
                    }
                }
            }
            cost[2 * n - 3][2 * n - 1] = new Line(ps[2 * n - 3], ps[2 * n - 1])
                    .length();
            cost[2 * n - 2][2 * n - 1] = new Line(ps[2 * n - 2], ps[2 * n - 1])
                    .length();
            for (int k = 0; k < 2 * n; k++) {
                for (int i = 0; i < 2 * n; i++) {
                    if (k < i)
                        break;
                    for (int j = i + 1; j < 2 * n; j++) {
                        cost[i][j] = Math.min(cost[i][j], cost[i][k]
                                + cost[k][j]);
                    }
                }
            }
            System.out.printf("%.5f\n", cost[0][2 * n - 1]);
        }
    }
}

@SuppressWarnings("serial")
class Point extends Point2D.Double {
    Point(int x, int y) {
        super(x, y);
    }

    Point(double x, double y) {
        super(x, y);
    }
}

@SuppressWarnings("serial")
class Line extends Line2D.Double {

    Line(Point p1, Point p2) {
        super(p1, p2);
    }

    public double length() {
        return Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));
    }

    public double ip(Line l) {
        Point q1 = new Point(l.x1, l.y1);
        Point q2 = new Point(l.x2, l.y2);
        return (x2 - x1) * (q2.x - q1.x) + (y2 - y1) * (q2.y - q1.y);
    }

    public double ep(Line l) {
        Point q1 = new Point(l.x1, l.y1);
        Point q2 = new Point(l.x2, l.y2);
        return (x2 - x1) * (q2.y - q1.y) - (y2 - y1) * (q2.x - q1.x);
    }
}

class Circle {
    int x;
    int y;
    int r;

    Circle(int x, int y, int r) {
        this.x = x;
        this.y = y;
        this.r = r;
    }

    public Point[] circleInterSection(Circle c2) {
        Circle c1 = this;
        double a = c1.x;
        double b = c1.y;
        double r = c1.r;
        double c = c2.x;
        double d = c2.y;
        double s = c2.r;
        double norm = (c - a) * (c - a) + (d - b) * (d - b);
        double t = 0.5 * (norm + r * r - s * s) / Math.sqrt(norm);
        double th = Math.acos(t / r);
        double th0 = Math.atan2((d - b), (c - a));
        double p1 = a + r * Math.cos(th + th0);
        double q1 = b + r * Math.sin(th + th0);
        double p2 = a + r * Math.cos(-th + th0);
        double q2 = b + r * Math.sin(-th + th0);
        Point[] ps = { new Point(p1, q1), new Point(p2, q2) };
        return ps;
    }
    public String toString() {
        return "x,y,r " + x + " " + y + " " + r + " ";
    }
}

</source>
<source file="../preprocessed_Datasplit/train/0/s799573041P.java" startline="1" endline="153" pcid="19910">
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.util.Arrays;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) throws Exception {
        Scanner sc = new Scanner(System.in);
        double INF = Double.MAX_VALUE / 2;
        while (true) {
            int n = sc.nextInt();
            if (n == 0)
                break;
            Circle[] cs = new Circle[n];
            for (int i = 0; i < n; i++) {
                cs[i] = new Circle(sc.nextInt(), sc.nextInt(), sc.nextInt());
            }
            Point[] ps = new Point[2 * n];
            ps[0] = new Point(cs[0].x, cs[0].y);
            ps[ps.length - 1] = new Point(cs[n - 1].x, cs[n - 1].y);
            int c = 1;
            Line[] ls = new Line[n - 1];
            for (int i = 1; i < n; i++) {
                Point[] cis = cs[i].circleInterSection(cs[i - 1]);
                ps[c++] = cis[0];
                ps[c++] = cis[1];
                ls[i - 1] = new Line(cis[0], cis[1]);
            }
            double[][] cost = new double[2 * n][2 * n];
            for (int i = 0; i < 2 * n; i++) {
                Arrays.fill(cost[i], INF);
            }
            for (int i = 0; i <= 2 * n - 4; i++) {
                for (int j = i + 1; j < 2 * n; j++) {
                    if (j % 2 == 0) {
                        Line l1 = new Line(ps[i], ps[j]);
                        boolean inCircle = true;
                        for (int k = i % 2 == 0 ? i / 2 : i / 2 + 1; k < j / 2 - 1; k++) {
                            Line l2 = ls[k];
                            if (!l2.intersectsLine(l1)) {
                                inCircle = false;
                                break;
                            }
                        }
                        if (inCircle) {
                            cost[i][j] = l1.length();
                        }
                    } else {
                        Line l1 = new Line(ps[i], ps[j]);
                        boolean inCircle = true;
                        for (int k = i % 2 == 0 ? i / 2 : i / 2 + 1; k < j / 2; k++) {
                            Line l2 = ls[k];
                            if (!l2.intersectsLine(l1)) {
                                inCircle = false;
                                break;
                            }
                        }
                        if (inCircle) {
                            cost[i][j] = l1.length();
                        }
                    }
                }
            }
            cost[2 * n - 3][2 * n - 1] = new Line(ps[2 * n - 3], ps[2 * n - 1])
                    .length();
            cost[2 * n - 2][2 * n - 1] = new Line(ps[2 * n - 2], ps[2 * n - 1])
                    .length();
            for (int k = 0; k < 2 * n; k++) {
                for (int i = 0; i < 2 * n; i++) {
                    if (k < i)
                        break;
                    for (int j = i + 1; j < 2 * n; j++) {
                        cost[i][j] = Math.min(cost[i][j], cost[i][k]
                                + cost[k][j]);
                    }
                }
            }
            System.out.printf("%.5f\n", cost[0][2 * n - 1]);
        }
    }
}

@SuppressWarnings("serial")
class Point extends Point2D.Double {
    Point(int x, int y) {
        super(x, y);
    }

    Point(double x, double y) {
        super(x, y);
    }
}

@SuppressWarnings("serial")
class Line extends Line2D.Double {

    Line(Point p1, Point p2) {
        super(p1, p2);
    }

    public double length() {
        return Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));
    }

    public double ip(Line l) {
        Point q1 = new Point(l.x1, l.y1);
        Point q2 = new Point(l.x2, l.y2);
        return (x2 - x1) * (q2.x - q1.x) + (y2 - y1) * (q2.y - q1.y);
    }

    public double ep(Line l) {
        Point q1 = new Point(l.x1, l.y1);
        Point q2 = new Point(l.x2, l.y2);
        return (x2 - x1) * (q2.y - q1.y) - (y2 - y1) * (q2.x - q1.x);
    }
}

class Circle {
    int x;
    int y;
    int r;

    Circle(int x, int y, int r) {
        this.x = x;
        this.y = y;
        this.r = r;
    }

    public Point[] circleInterSection(Circle c2) {
        Circle c1 = this;
        double a = c1.x;
        double b = c1.y;
        double r = c1.r;
        double c = c2.x;
        double d = c2.y;
        double s = c2.r;
        double norm = (c - a) * (c - a) + (d - b) * (d - b);
        double t = 0.5 * (norm + r * r - s * s) / Math.sqrt(norm);
        double th = Math.acos(t / r);
        double th0 = Math.atan2((d - b), (c - a));
        double p1 = a + r * Math.cos(th + th0);
        double q1 = b + r * Math.sin(th + th0);
        double p2 = a + r * Math.cos(-th + th0);
        double q2 = b + r * Math.sin(-th + th0);
        Point[] ps = { new Point(p1, q1), new Point(p2, q2) };
        return ps;
    }
    public String toString() {
        return "x,y,r " + x + " " + y + " " + r + " ";
    }
}

</source>
</class>

<class classid="9" nclones="2" nlines="39" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s228857483P.java" startline="1" endline="45" pcid="2938">
import java.util.Arrays;
import java.util.Scanner;

public class Main {
	Scanner sc = new Scanner(System.in);
	int N, M;
	int INF = Integer.MAX_VALUE / 2;
	int[][] graph, memo;

	void run() {
		N = sc.nextInt();
		M = sc.nextInt();
		graph = new int[N][N];
		memo = new int[N][1 << N];
		for (int i = 0; i < N; i++) {
			Arrays.fill(graph[i], INF);
			Arrays.fill(memo[i], -1);
		}
		for (int i = 0; i < M; i++) {
			int s = sc.nextInt();
			int t = sc.nextInt();
			int cost = sc.nextInt();
			graph[s][t] = cost;
		}
		int res = tsp(0, 1);
		System.out.println(res == INF ? -1 : res);
	}

	int tsp(int v, int mask) {
		if (memo[v][mask] != -1)  return memo[v][mask];
		if (mask == (1 << N) - 1) return graph[v][0];

		int res = INF;
		for (int i = 0; i < N; i++) {
			if ((mask & (1 << i)) != 0) continue;
			res = Math.min(res, graph[v][i] + tsp(i, mask | (1 << i)));
		}
		return memo[v][mask] = res;
	}

	public static void main(String[] args) {
		new Main().run();
	}
}

</source>
<source file="../preprocessed_Datasplit/test/0/s507253512P.java" startline="1" endline="45" pcid="62547">
import java.util.Arrays;
import java.util.Scanner;

public class Main {
	Scanner sc = new Scanner(System.in);
	int N, M;
	int INF = Integer.MAX_VALUE / 2;
	int[][] graph, memo;

	void run() {
		N = sc.nextInt();
		M = sc.nextInt();
		graph = new int[N][N];
		memo = new int[N][1 << N];
		for (int i = 0; i < N; i++) {
			Arrays.fill(graph[i], INF);
			Arrays.fill(memo[i], -1);
		}
		for (int i = 0; i < M; i++) {
			int s = sc.nextInt();
			int t = sc.nextInt();
			int cost = sc.nextInt();
			graph[s][t] = cost;
		}
		int res = tsp(0, 1);
		System.out.println(res == INF ? -1 : res);
	}

	int tsp(int v, int mask) {
		if (memo[v][mask] != -1)  return memo[v][mask];
		if (mask == (1 << N) - 1) return graph[v][0];

		int res = INF;
		for (int i = 0; i < N; i++) {
			if ((mask & (1 << i)) != 0) continue;
			res = Math.min(res, graph[v][i] + tsp(i, mask | (1 << i)));
		}
		return memo[v][mask] = res;
	}

	public static void main(String[] args) {
		new Main().run();
	}
}

</source>
</class>

<class classid="10" nclones="2" nlines="19" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s229096843P.java" startline="1" endline="29" pcid="2946">
import java.util.Scanner;
public class Main{
    int high;
		int low;
		int sa;

    public void solve(){
		Scanner sc=new Scanner(System.in);

		for(int i=0;i<7;i++){

        high=sc.nextInt();
        low=sc.nextInt();
		sa=high-low;

	System.out.println(sa);

    }

    }

    public static void main(String[]args){

        Main obj =new Main();
        obj.solve();

    }
}

</source>
<source file="../preprocessed_Datasplit/test/0/s259696948P.java" startline="1" endline="21" pcid="61700">
import java.util.Scanner;
public class Main{
    int high;
    int low;
    int sa;

    public void solve(){
       Scanner sc = new Scanner(System.in);
	   for(int i=0;i<7;i++){
        high=sc.nextInt();
		low=sc.nextInt();
		sa=high-low;
		System.out.println(sa);
	   }
    }
    public static void main(String[]args){
        Main obj = new Main();
        obj.solve();
    }
}

</source>
</class>

<class classid="11" nclones="2" nlines="161" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s234525574P.java" startline="1" endline="214" pcid="3124">
import java.io.IOException;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.Scanner;

public class Main {

	public static void main(String[] args) throws IOException {

		Scanner scan = new Scanner(System.in);

		HS hs = new HS();

		for (int y = 0; y < 4; y++)
			for (int x = 0; x < 4; x++)
				hs.SetIni(x, y, scan.nextInt());

		System.out.println(hs.solve());

		scan.close();
		System.exit(0);
	}
}

class HS {
	class Bd {
		byte[][] pn = new byte[4][4];
		int oper = 0;
		int diff = 0;

		public long getKey() {
			long key = 0;
			for (int x = 0; x < 4; x++)
				for (int y = 0; y < 4; y++) {
					key *= 10;
					key += pn[x][y];
				}
			return key;
		}

		public int eval() {
			int ret = 0;
			for (int x = 0; x < 4; x++)
				for (int y = 0; y < 4; y++) {
					int p = pn[x][y];
					if (p != 0)
						ret += Math.abs(x - gx[p]) + Math.abs(y - gy[p]);
				}
			diff = ret;
			return ret;
		}

		public void copy(Bd b) {
			for (int x = 0; x < 4; x++)
				for (int y = 0; y < 4; y++)
					pn[x][y] = b.pn[x][y];
			diff = b.diff;
			oper = b.oper;
		}

		private boolean up() {
			for (int x = 0; x < 4; x++)
				for (int y = 0; y < 3; y++)
					if (pn[x][y] == 0) {
						pn[x][y] = pn[x][y + 1];
						pn[x][y + 1] = 0;
						oper++;
						eval();
						return true;
					}
			return false;
		}

		private boolean down() {
			for (int x = 0; x < 4; x++)
				for (int y = 1; y < 4; y++)
					if (pn[x][y] == 0) {
						pn[x][y] = pn[x][y - 1];
						pn[x][y - 1] = 0;
						oper++;
						eval();
						return true;
					}
			return false;
		}

		private boolean right() {
			for (int x = 1; x < 4; x++)
				for (int y = 0; y < 4; y++)
					if (pn[x][y] == 0) {
						pn[x][y] = pn[x - 1][y];
						pn[x - 1][y] = 0;
						oper++;
						eval();
						return true;
					}
			return false;
		}

		private boolean left() {
			for (int x = 0; x < 3; x++)
				for (int y = 0; y < 4; y++)
					if (pn[x][y] == 0) {
						pn[x][y] = pn[x + 1][y];
						pn[x + 1][y] = 0;
						oper++;
						eval();
						return true;
					}
			return false;
		}

		public boolean move(int op) {
			switch (op) {
			case (0):
				return up();
			case (1):
				return down();
			case (2):
				return right();
			case (3):
				return left();
			}
			return false;
		}

		public boolean isSame(Bd b) {
			for (int x = 0; x < 4; x++)
				for (int y = 0; y < 4; y++)
					if (b.pn[x][y] != pn[x][y])
						return false;
			return true;
		}
	}

	private Bd bd = new Bd();
	private int[] gx = { 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2 };
	private int[] gy = { 3, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3 };
	private Map<Long, Integer> hist = new HashMap<>();
	private PriorityQueue<Bd> pqueue = new PriorityQueue<Bd>(3, new Qcomparator());

	class Qcomparator implements Comparator<Bd> {
		@Override
		public int compare(Bd b1, Bd b2) {
			if (b1.diff + b1.oper > b2.diff + b2.oper)
				return 1;
			else if (b1.diff + b1.oper == b2.diff + b2.oper)
				return 0;
			else
				return -1;
		}
	}

	public void SetIni(int x, int y, int a) {
		bd.pn[x][y] = (byte) a;
	}

	public int solve() {
		Bd b = new Bd();
		b.copy(bd);
		b.eval();
		pqueue.add(b);
		hist.put(b.getKey(), 0);
		return search();
	}

	private int search() {
		while (true) {
			Bd b = pqueue.poll();
			if (b == null)
				return -1;

			if (b.diff == 0)
				return b.oper;

			for (int i = 0; i < 4; i++) {
				Bd nb = new Bd();
				nb.copy(b);
				if (nb.move(i))
					addQueue(nb);
			}
		}
	}

	private boolean addQueue(Bd b) {
		long k = b.getKey();
		if (hist.containsKey(k)) {
			int oper = hist.get(k);
			if (oper > b.oper) {
				hist.put(k, b.oper);
				pqueue.add(b);
				return true;
			} else
				return false;
		}
		hist.put(k, b.oper);
		pqueue.add(b);
		return true;
	}

	private void printBd(Bd b) {
		System.out.println("----------------");
		for (int y = 0; y < 3; y++)
			System.out.println("- " + b.pn[0][y] + " " + b.pn[1][y] + " " + b.pn[2][y] + " -");
		System.out.println("------- diff " + b.diff + " oper " + b.oper + " queue " + pqueue.size());
		if (pqueue.size() > 100000)
			System.exit(0);
	}
}

</source>
<source file="../preprocessed_Datasplit/test/0/s872592449P.java" startline="1" endline="214" pcid="63811">
import java.io.IOException;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) throws IOException {

        Scanner scan = new Scanner(System.in);

        HS hs = new HS();

        for (int y = 0; y < 4; y++)
            for (int x = 0; x < 4; x++)
                hs.SetIni(x, y, scan.nextInt());

        System.out.println(hs.solve());

        scan.close();
        System.exit(0);
    }
}

class HS {
    class Bd {
        byte[][] pn = new byte[4][4];
        int oper = 0;
        int diff = 0;

        public long getKey() {
            long key = 0;
            for (int x = 0; x < 4; x++)
                for (int y = 0; y < 4; y++) {
                    key *= 10;
                    key += pn[x][y];
                }
            return key;
        }

        public int eval() {
            int ret = 0;
            for (int x = 0; x < 4; x++)
                for (int y = 0; y < 4; y++) {
                    int p = pn[x][y];
                    if (p != 0)
                        ret += Math.abs(x - gx[p]) + Math.abs(y - gy[p]);
                }
            diff = ret;
            return ret;
        }

        public void copy(Bd b) {
            for (int x = 0; x < 4; x++)
                for (int y = 0; y < 4; y++)
                    pn[x][y] = b.pn[x][y];
            diff = b.diff;
            oper = b.oper;
        }

        private boolean up() {
            for (int x = 0; x < 4; x++)
                for (int y = 0; y < 3; y++)
                    if (pn[x][y] == 0) {
                        pn[x][y] = pn[x][y + 1];
                        pn[x][y + 1] = 0;
                        oper++;
                        eval();
                        return true;
                    }
            return false;
        }

        private boolean down() {
            for (int x = 0; x < 4; x++)
                for (int y = 1; y < 4; y++)
                    if (pn[x][y] == 0) {
                        pn[x][y] = pn[x][y - 1];
                        pn[x][y - 1] = 0;
                        oper++;
                        eval();
                        return true;
                    }
            return false;
        }

        private boolean right() {
            for (int x = 1; x < 4; x++)
                for (int y = 0; y < 4; y++)
                    if (pn[x][y] == 0) {
                        pn[x][y] = pn[x - 1][y];
                        pn[x - 1][y] = 0;
                        oper++;
                        eval();
                        return true;
                    }
            return false;
        }

        private boolean left() {
            for (int x = 0; x < 3; x++)
                for (int y = 0; y < 4; y++)
                    if (pn[x][y] == 0) {
                        pn[x][y] = pn[x + 1][y];
                        pn[x + 1][y] = 0;
                        oper++;
                        eval();
                        return true;
                    }
            return false;
        }

        public boolean move(int op) {
            switch (op) {
            case (0):
                return up();
            case (1):
                return down();
            case (2):
                return right();
            case (3):
                return left();
            }
            return false;
        }

        public boolean isSame(Bd b) {
            for (int x = 0; x < 4; x++)
                for (int y = 0; y < 4; y++)
                    if (b.pn[x][y] != pn[x][y])
                        return false;
            return true;
        }
    }

    private Bd bd = new Bd();
    private int[] gx = { 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2 };
    private int[] gy = { 3, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3 };
    private Map<Long, Integer> hist = new HashMap<>();
    private PriorityQueue<Bd> pqueue = new PriorityQueue<Bd>(3, new Qcomparator());

    class Qcomparator implements Comparator<Bd> {
        @Override
        public int compare(Bd b1, Bd b2) {
            if (b1.diff + b1.oper > b2.diff + b2.oper)
                return 1;
            else if (b1.diff + b1.oper == b2.diff + b2.oper)
                return 0;
            else
                return -1;
        }
    }

    public void SetIni(int x, int y, int a) {
        bd.pn[x][y] = (byte) a;
    }

    public int solve() {
        Bd b = new Bd();
        b.copy(bd);
        b.eval();
        pqueue.add(b);
        hist.put(b.getKey(), 0);
        return search();
    }

    private int search() {
        while (true) {
            Bd b = pqueue.poll();
            if (b == null)
                return -1;

            if (b.diff == 0)
                return b.oper;

            for (int i = 0; i < 4; i++) {
                Bd nb = new Bd();
                nb.copy(b);
                if (nb.move(i))
                    addQueue(nb);
            }
        }
    }

    private boolean addQueue(Bd b) {
        long k = b.getKey();
        if (hist.containsKey(k)) {
            int oper = hist.get(k);
            if (oper > b.oper) {
                hist.put(k, b.oper);
                pqueue.add(b);
                return true;
            } else
                return false;
        }
        hist.put(k, b.oper);
        pqueue.add(b);
        return true;
    }

    private void printBd(Bd b) {
        System.out.println("----------------");
        for (int y = 0; y < 3; y++)
            System.out.println("- " + b.pn[0][y] + " " + b.pn[1][y] + " " + b.pn[2][y] + " -");
        System.out.println("------- diff " + b.diff + " oper " + b.oper + " queue " + pqueue.size());
        if (pqueue.size() > 100000)
            System.exit(0);
    }
}

</source>
</class>

<class classid="12" nclones="2" nlines="26" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s248723278P.java" startline="1" endline="27" pcid="3509">
import java.util.Scanner;
public class Main{
  public static void main(String[] args){
    Scanner sc = new Scanner(System.in);
    int n=sc.nextInt();
    long[] a=new long[n];
   double l=0,sum=0;
    for(int i=0;i<n;i++) {
    	a[i]=sc.nextLong();
    	sum+=a[i];
    }
    for(int i=0;i<n;i++) {
    	if(l<sum/2) {
    		l+=a[i];
    	}
    	if(l==sum/2){
    		System.out.println("0");
    		break;
    	}
    	if(l>sum/2){
    		System.out.println((long)Math.min(Math.abs(2*l-sum), Math.abs(2*(l-a[i])-sum)));
    		break;
    	}
    }
  }
}

</source>
<source file="../preprocessed_Datasplit/test/0/s037591628P.java" startline="1" endline="27" pcid="60979">
import java.util.Scanner;
public class Main{
  public static void main(String[] args){
    Scanner sc = new Scanner(System.in);
    int n=sc.nextInt();
    long[] a=new long[n];
   double l=0,sum=0;
    for(int i=0;i<n;i++) {
    	a[i]=sc.nextLong();
    	sum+=a[i];
    }
    for(int i=0;i<n;i++) {
    	if(l<sum/2) {
    		l+=a[i];
    	}
    	if(l==sum/2){
    		System.out.println("0");
    		break;
    	}
    	if(l>sum/2){
    		System.out.println((long)Math.min(Math.abs(2*l-sum), Math.abs(2*(l-a[i])-sum)));
    		break;
    	}
    }
  }
}

</source>
</class>

<class classid="13" nclones="6" nlines="16" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s262516864P.java" startline="1" endline="20" pcid="3922">
import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);

		int a = sc.nextInt();
		int b = sc.nextInt();
		int c = sc.nextInt();

		if(b - a == c - b){
			System.out.println("YES");
		}else{
			System.out.println("NO");
		}

		sc.close();
	}
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03759_0P.java" startline="1" endline="19" pcid="65832">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int c = sc.nextInt();

        if (b - a == c - b) {
            System.out.println("YES");
        } else {
            System.out.println("NO");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03759_2P.java" startline="1" endline="19" pcid="59891">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int c = sc.nextInt();

        if (b - a == c - b) {
            System.out.println("YES");
        } else {
            System.out.println("NO");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03759_1P.java" startline="1" endline="19" pcid="44868">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int c = sc.nextInt();

        if (b - a == c - b) {
            System.out.println("YES");
        } else {
            System.out.println("NO");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03759_3P.java" startline="1" endline="19" pcid="59893">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int c = sc.nextInt();

        if (b - a == c - b) {
            System.out.println("YES");
        } else {
            System.out.println("NO");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03759_2P.java" startline="1" endline="19" pcid="44870">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int c = sc.nextInt();

        if (b - a == c - b) {
            System.out.println("YES");
        } else {
            System.out.println("NO");
        }

        sc.close();
    }
}

</source>
</class>

<class classid="14" nclones="2" nlines="51" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s276733936P.java" startline="1" endline="55" pcid="4345">
import java.util.*;
public class Main{
    static Scanner kbd = new Scanner(System.in);
    public static void main(String[] args){
	int[] p = new int[10000];
	putN(p);
	while(kbd.hasNext()){
	    int n = kbd.nextInt();
	    if(n!=0){
		int i=0;
		int s=0;
		int l=0;
		int c = 0;
		while(p[i]!=0){
		    if(s < n) {
			s += p[i];
			i++;
		    }
		    else if(s>n){
			s -= p[l];
			l++;
		    }
		    else;

		    if(s==n) {
			c++;
			s += p[i];
			i++;
		    }
		}
		System.out.println(c);
	    }
	}
    }

    static void putN(int[] p){
	int i=0, k;
	for(k=2; k<10000; k++){
	    if(check(k)) {
		p[i] = k;
		i++;
	    }
	}

    }
    static boolean check(int n){
	int a, c=0;
	for(a=1; a<=n; a++){
	    if(n%a==0) c++;
	}
	if(c>2) return false;
	return true;
    }
}

</source>
<source file="../preprocessed_Datasplit/test/0/s352963618P.java" startline="1" endline="55" pcid="62013">
import java.util.*;
public class Main{
    static Scanner kbd = new Scanner(System.in);
    public static void main(String[] args){
	int[] p = new int[10000];
	putN(p);
	while(kbd.hasNext()){
	    int n = kbd.nextInt();
	    if(n!=0){
		int i=0;
		int s=0;
		int l=0;
		int c = 0;
		while(p[i]!=0){
		    if(s < n) {
			s += p[i];
			i++;
		    }
		    else if(s>n){
			s -= p[l];
			l++;
		    }
		    else;

		    if(s==n) {
			c++;
			s += p[i];
			i++;
		    }
		}
		System.out.println(c);
	    }
	}
    }

    static void putN(int[] p){
	int i=0, k;
	for(k=2; k<10000; k++){
	    if(check(k)) {
		p[i] = k;
		i++;
	    }
	}

    }
    static boolean check(int n){
	int a, c=0;
	for(a=1; a<=n; a++){
	    if(n%a==0) c++;
	}
	if(c>2) return false;
	return true;
    }
}

</source>
</class>

<class classid="15" nclones="3" nlines="31" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s277064174P.java" startline="1" endline="48" pcid="4357">
import java.util.Arrays;
import java.util.Scanner;

public class Main
{
	public static void main(String arg[])
	{
		Scanner sc=new Scanner(System.in);
		boolean a[] =new boolean[10001];
		Arrays.fill(a, true);
		a[0]=a[1]=false;
		for(int i=2; i*i<=10000; i++)
		{
			if(!a[i])
				continue;
			for(int j=i*2; j<=10000; j+=i)
				a[j]=false;
		}

		while(sc.hasNext())
		{
			int n=sc.nextInt();
			if(n==0)
				return;
			int sum=0;
			int ans=0;

			for(int i=2; i<=n; i++)
			{
				sum =0;
				if(a[i])
					for(int j=i; j<=n; j++)
					{
						if(a[j])
						{
							sum+=j;
							if(n==sum)
								ans++;
						}
						if(sum>=n)
							break;
					}
			}
			System.out.println(ans);
		}
	}
}

</source>
<source file="../preprocessed_Datasplit/test/0/s866706293P.java" startline="1" endline="46" pcid="63792">
import java.util.Arrays;
import java.util.Scanner;

public class Main
{
	public static void main(String arg[])
	{
		Scanner sc=new Scanner(System.in);
		boolean a[] =new boolean[10001];
		Arrays.fill(a, true);
		a[0]=a[1]=false;
		for(int i=2; i*i<=10000; i++)
		{
			if(!a[i])
				continue;
			for(int j=i*2; j<=10000; j+=i)
				a[j]=false;
		}
		while(sc.hasNext())
		{
			int n=sc.nextInt();
			if(n==0)
				return;
			int sum=0;
			int ans=0;
			for(int i=2; i<=n; i++)
			{
				sum =0;
				if(a[i])
					for(int j=i; j<=n; j++)
					{
						if(a[j])
						{
							sum+=j;
							if(n==sum)
								ans++;
						}
						if(sum>=n)
							break;
					}
			}
			System.out.println(ans);
		}
	}
}

</source>
<source file="../preprocessed_Datasplit/train/0/s586575169P.java" startline="1" endline="46" pcid="13489">
import java.util.Arrays;
import java.util.Scanner;

public class Main
{
	public static void main(String arg[])
	{
		Scanner sc=new Scanner(System.in);
		boolean a[] =new boolean[10001];
		Arrays.fill(a, true);
		a[0]=a[1]=false;
		for(int i=2; i*i<=10000; i++)
		{
			if(!a[i])
				continue;
			for(int j=i*2; j<=10000; j+=i)
				a[j]=false;
		}
		while(sc.hasNext())
		{
			int n=sc.nextInt();
			if(n==0)
				return;
			int sum=0;
			int ans=0;
			for(int i=2; i<=n; i++)
			{
				sum =0;
				if(a[i])
					for(int j=i; j<=n; j++)
					{
						if(a[j])
						{
							sum+=j;
							if(n==sum)
								ans++;
						}
						if(sum>=n)
							break;
					}
			}
			System.out.println(ans);
		}
	}
}

</source>
</class>

<class classid="16" nclones="2" nlines="32" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s289066775P.java" startline="1" endline="37" pcid="4732">
import java.util.Scanner;

public class Main {

	static int c;
	static int[] a;

	static int comp(int k, int x){
		c++;
		return a[k]-x;
	}

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		while(true){
			int n = sc.nextInt();
			if(n==0)break;
			a = new int[n];
			for(int i=0;i<n;i++)a[i]=sc.nextInt();
			int x = sc.nextInt();
			c = 0;
			int l = 0;
			int r = n-1;
			int k = (l+r)/2;
			while(l<=r){
				int com = comp(k, x);
				if(r<=l)break;
				if(com<0)l=k+1;
				else if(com>0)r=k-1;
				else break;
				k=(l+r)/2;
			}
			System.out.println(c);
		}
	}
}

</source>
<source file="../preprocessed_Datasplit/test/0/s199979698P.java" startline="1" endline="37" pcid="61517">
import java.util.Scanner;

public class Main{

	static int c;
	static int[] a;

	static int comp(int k, int x){
		c++;
		return a[k]-x;
	}

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		while(true){
			int n = sc.nextInt();
			if(n==0)break;
			a = new int[n];
			for(int i=0;i<n;i++)a[i]=sc.nextInt();
			int x = sc.nextInt();
			c = 0;
			int l = 0;
			int r = n-1;
			int k = (l+r)/2;
			while(l<=r){
				int com = comp(k, x);
				if(r<=l)break;
				if(com<0)l=k+1;
				else if(com>0)r=k-1;
				else break;
				k=(l+r)/2;
			}
			System.out.println(c);
		}
	}
}

</source>
</class>

<class classid="17" nclones="2" nlines="475" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s297470456P.java" startline="1" endline="541" pcid="5016">
import java.io.*;
import java.util.*;

class P{
	long x, y;
	public P(int x, int y) {
		super();
		this.x = x;
		this.y = y;
	}
}

public class Main {
	static InputStream is;
	static PrintWriter out;
	static String INPUT = "";

	static final long mod = (long) 1e9 + 7;
	static final int dx[] = { -1, 0, 1, 0 }, dy[] = { 0, -1, 0, 1 };
	static final int[] dx8 = { -1, -1, -1, 0, 0, 1, 1, 1 }, dy8 = { -1, 0, 1, -1, 1, -1, 0, 1 };
	static final int inf = Integer.MAX_VALUE / 3;
	static final long linf = Long.MAX_VALUE / 3;
	static final double dinf = Double.MAX_VALUE / 3;
	static final double eps = 1e-10;
	static final double pi = Math.PI;

	static void solve() {
		int n = ni();
		P p[] = new P[n];
		for(int i=0;i<n;i++) {
			p[i] = new P(ni(),ni());
		}
		int check = (int)Math.abs(p[0].x-p[0].y)%2;
		for(int i=0;i<n;i++) {
			if(check != Math.abs(p[i].x - p[i].y)%2) {
				out.println(-1);
				return;
			}
		}

		int m = 0;
		long d[];
		if(check==1) {
			m = 33;
			d = new long[m];
			for(int i=0;i<m;i++) {
				d[i] = 1L<<i;
			}
		}
		else {
			m = 34;
			d = new long[m];
			for(int i=0;i<m-1;i++) {
				d[i+1] = 1L<<i;
				d[0] = 1;
			}
		}

		out.println(m);
		for(int i=0;i<m;i++) {
			out.print(d[m-1-i] + " ");
		}
		out.println();

		for(int i=0;i<n;i++) {
			String s = "";
			long x = p[i].x, y = p[i].y;
			for(int j=m-1;j>=0;j--) {
				if(abs(x)-abs(y)>0) {
					if(x<0) {
						s += "L";
						x += d[j];
					}
					else {
						s += "R";
						x -= d[j];
					}
				}
				else {
					if(y<0) {
						s += "D";
						y += d[j];
					}
					else {
						s += "U";
						y -= d[j];
					}
				}
			}
			out.println(s);
		}

	}

	static int abs(int x) {
		return Math.abs(x);
	}
	static long abs(long x) {
		return Math.abs(x);
	}
	static double abs(double x) {
		return Math.abs(x);
	}

	static int lowerBound(int[] a, int x) {
		int l = -1, r = a.length;
		while (r - l > 1) {
			int c = (l + r) / 2;
			if (a[c] < x) {
				l = c;
			} else {
				r = c;
			}
		}
		return r;
	}

	static int upperBound(int[] a, int x) {
		int l = -1, r = a.length;
		while (r - l > 1) {
			int c = (l + r) / 2;
			if (a[c] <= x) {
				l = c;
			} else {
				r = c;
			}
		}
		return r;
	}

	static int lowerBound(long[] a, long x) {
		int l = -1, r = a.length;
		while (r - l > 1) {
			int c = (l + r) / 2;
			if (a[c] < x) {
				l = c;
			} else {
				r = c;
			}
		}
		return r;
	}

	static int upperBound(long[] a, long x) {
		int l = -1, r = a.length;
		while (r - l > 1) {
			int c = (l + r) / 2;
			if (a[c] <= x) {
				l = c;
			} else {
				r = c;
			}
		}
		return r;
	}

	static int lowerBound(double[] a, double x) {
		int l = -1, r = a.length;
		while (r - l > 1) {
			int c = (l + r) / 2;
			if (a[c] < x) {
				l = c;
			} else {
				r = c;
			}
		}
		return r;
	}

	static int upperBound(double[] a, double x) {
		int l = -1, r = a.length;
		while (r - l > 1) {
			int c = (l + r) / 2;
			if (a[c] <= x) {
				l = c;
			} else {
				r = c;
			}
		}
		return r;
	}

	static <T> int lowerBound(List<T> ls, T x) throws RuntimeException {
		if (ls.size() == 0)
			return -1;
		if (ls.get(0) instanceof Integer) {
			return ~Collections.binarySearch(ls, x, (t1, t2) -> ((Integer) t1).compareTo((Integer) t2) >= 0 ? 1 : -1);
		} else if (ls.get(0) instanceof Long) {
			return ~Collections.binarySearch(ls, x, (t1, t2) -> ((Long) t1).compareTo((Long) t2) >= 0 ? 1 : -1);
		} else if (ls.get(0) instanceof Double) {
			return ~Collections.binarySearch(ls, x, (t1, t2) -> ((Double) t1).compareTo((Double) t2) >= 0 ? 1 : -1);
		} else {
			System.err.println(
					String.format("%s:数値でないリストを二分探索しています。", Thread.currentThread().getStackTrace()[1].getMethodName()));
			throw new RuntimeException();
		}
	}

	static <T> int upperBound(List<T> ls, T x) throws RuntimeException {
		if (ls.size() == 0)
			return -1;
		if (ls.get(0) instanceof Integer) {
			return ~Collections.binarySearch(ls, x, (t1, t2) -> ((Integer) t1).compareTo((Integer) t2) > 0 ? 1 : -1);
		} else if (ls.get(0) instanceof Long) {
			return ~Collections.binarySearch(ls, x, (t1, t2) -> ((Long) t1).compareTo((Long) t2) > 0 ? 1 : -1);
		} else if (ls.get(0) instanceof Double) {
			return ~Collections.binarySearch(ls, x, (t1, t2) -> ((Double) t1).compareTo((Double) t2) > 0 ? 1 : -1);
		} else {
			System.err.println(
					String.format("%s:数値でないリストを二分探索しています。", Thread.currentThread().getStackTrace()[1].getMethodName()));
			throw new RuntimeException();
		}
	}

	static <T> int rupperBound(List<T> ls, T x) throws RuntimeException {
		if (ls.size() == 0)
			return -1;
		if (ls.get(0) instanceof Integer) {
			return ~Collections.binarySearch(ls, x, (t1, t2) -> ((Integer) t1).compareTo((Integer) t2) < 0 ? 1 : -1);
		} else if (ls.get(0) instanceof Long) {
			return ~Collections.binarySearch(ls, x, (t1, t2) -> ((Long) t1).compareTo((Long) t2) < 0 ? 1 : -1);
		} else if (ls.get(0) instanceof Double) {
			return ~Collections.binarySearch(ls, x, (t1, t2) -> ((Double) t1).compareTo((Double) t2) < 0 ? 1 : -1);
		} else {
			System.err.println(
					String.format("%s:数値でないリストを二分探索しています。", Thread.currentThread().getStackTrace()[1].getMethodName()));
			throw new RuntimeException();
		}
	}

	static <T> int rlowerBound(List<T> ls, T x) {
		if (ls.size() == 0)
			return -1;
		if (ls.get(0) instanceof Integer) {
			return ~Collections.binarySearch(ls, x, (t1, t2) -> ((Integer) t1).compareTo((Integer) t2) <= 0 ? 1 : -1);
		} else if (ls.get(0) instanceof Long) {
			return ~Collections.binarySearch(ls, x, (t1, t2) -> ((Long) t1).compareTo((Long) t2) <= 0 ? 1 : -1);
		} else if (ls.get(0) instanceof Double) {
			return ~Collections.binarySearch(ls, x, (t1, t2) -> ((Double) t1).compareTo((Double) t2) <= 0 ? 1 : -1);
		} else {
			System.err.println(
					String.format("%s:数値でないリストを二分探索しています。", Thread.currentThread().getStackTrace()[1].getMethodName()));
			throw new RuntimeException();
		}
	}

	static int[] concat(int x, int arr[]) {
		int ret[] = new int[arr.length + 1];
		System.arraycopy(arr, 0, ret, 1, ret.length - 1);
		ret[0] = x;
		return ret;
	}

	static int[] concat(int arr[], int x) {
		int ret[] = new int[arr.length + 1];
		System.arraycopy(arr, 0, ret, 0, ret.length - 1);
		ret[ret.length - 1] = x;
		return ret;
	}

	static long[] concat(long x, long arr[]) {
		long ret[] = new long[arr.length + 1];
		System.arraycopy(arr, 0, ret, 1, ret.length - 1);
		ret[0] = x;
		return ret;
	}

	static long[] concat(long arr[], long x) {
		long ret[] = new long[arr.length + 1];
		System.arraycopy(arr, 0, ret, 0, ret.length - 1);
		ret[ret.length - 1] = x;
		return ret;
	}

	static long max(long x, long y) {
		return Math.max(x, y);
	}

	static long min(long x, long y) {
		return Math.min(x, y);
	}

	static long max(long x, long y, long z) {
		x = Math.max(x, y);
		x = Math.max(x, z);
		return x;
	}

	static long min(long x, long y, long z) {
		x = Math.min(x, y);
		x = Math.min(x, z);
		return x;
	}

	static double max(double x, double y) {
		return Math.max(x, y);
	}

	static double min(double x, double y) {
		return Math.min(x, y);
	}

	static double max(double x, double y, double z) {
		x = Math.max(x, y);
		x = Math.max(x, z);
		return x;
	}

	static double min(double x, double y, double z) {
		x = Math.min(x, y);
		x = Math.min(x, z);
		return x;
	}

	static void sort(int[] ar) {
		Arrays.sort(ar);
	}

	static void sort(long[] ar) {
		Arrays.sort(ar);
	}

	static void sort(double[] ar) {
		Arrays.sort(ar);
	}

	static void rsort(int[] ar) {
		Arrays.sort(ar);
		int len = ar.length;
		for (int i = 0; i < len / 2; i++) {
			int tmp = ar[i];
			ar[i] = ar[len - 1 - i];
			ar[len - 1 - i] = tmp;
		}
	}

	static void rsort(long[] ar) {
		Arrays.sort(ar);
		int len = ar.length;
		for (int i = 0; i < len / 2; i++) {
			long tmp = ar[i];
			ar[i] = ar[len - 1 - i];
			ar[len - 1 - i] = tmp;
		}
	}

	static void rsort(double[] ar) {
		Arrays.sort(ar);
		int len = ar.length;
		for (int i = 0; i < len / 2; i++) {
			double tmp = ar[i];
			ar[i] = ar[len - 1 - i];
			ar[len - 1 - i] = tmp;
		}
	}

	static void fill(int arr[], int x) {
		Arrays.fill(arr, x);
	}

	static void fill(long arr[], long x) {
		Arrays.fill(arr, x);
	}

	static void fill(double arr[], double x) {
		Arrays.fill(arr, x);
	}

	static void fill(int arr[][], int x) {
		for (int i = 0; i < arr.length; i++)
			Arrays.fill(arr[i], x);
	}

	static void fill(long arr[][], long x) {
		for (int i = 0; i < arr.length; i++)
			Arrays.fill(arr[i], x);
	}

	static void fill(double arr[][], double x) {
		for (int i = 0; i < arr.length; i++)
			Arrays.fill(arr[i], x);
	}

	static long plus(long x, long y) {
		long res = (x + y) % mod;
		return res < 0 ? res + mod : res;
	}

	static long sub(long x, long y) {
		long res = (x - y) % mod;
		return res < 0 ? res + mod : res;
	}

	static long mul(long x, long y) {
		long res = (x * y) % mod;
		return res < 0 ? res + mod : res;
	}

	static long div(long x, long y) {
		long res = x * pow(y, mod - 2) % mod;
		return res < 0 ? res + mod : res;
	}

	static long pow(long x, long y) {
		if (y < 0)
			return 0;
		if (y == 0)
			return 1;
		if (y % 2 == 1)
			return (x * pow(x, y - 1)) % mod;
		long root = pow(x, y / 2);
		return root * root % mod;
	}

	public static void main(String[] args) throws Exception {
		is = INPUT.isEmpty() ? System.in : new ByteArrayInputStream(INPUT.getBytes());
		out = new PrintWriter(System.out);
		solve();
		out.flush();
	}

	private static byte[] inbuf = new byte[1024];
	static int lenbuf = 0, ptrbuf = 0;

	private static int readByte() {
		if (lenbuf == -1)
			throw new InputMismatchException();
		if (ptrbuf >= lenbuf) {
			ptrbuf = 0;
			try {
				lenbuf = is.read(inbuf);
			} catch (IOException e) {
				throw new InputMismatchException();
			}
			if (lenbuf <= 0)
				return -1;
		}
		return inbuf[ptrbuf++];
	}

	private static boolean isSpaceChar(int c) {
		return !(c >= 33 && c <= 126);
	}

	private static int skip() {
		int b;
		while ((b = readByte()) != -1 && isSpaceChar(b))
			;
		return b;
	}

	@SuppressWarnings("unused")
	private static double nd() {
		return Double.parseDouble(ns());
	}

	@SuppressWarnings("unused")
	private static char nc() {
		return (char) skip();
	}

	private static String ns() {
		int b = skip();
		StringBuilder sb = new StringBuilder();
		while (!(isSpaceChar(b))) {
			sb.appendCodePoint(b);
			b = readByte();
		}
		return sb.toString();
	}

	private static char[] ns(int n) {
		char[] buf = new char[n];
		int b = skip(), p = 0;
		while (p < n && !(isSpaceChar(b))) {
			buf[p++] = (char) b;
			b = readByte();
		}
		return n == p ? buf : Arrays.copyOf(buf, p);
	}

	@SuppressWarnings("unused")
	private static char[][] nm(int n, int m) {
		char[][] map = new char[n][];
		for (int i = 0; i < n; i++)
			map[i] = ns(m);
		return map;
	}

	@SuppressWarnings("unused")
	private static int[] na(int n) {
		int[] a = new int[n];
		for (int i = 0; i < n; i++)
			a[i] = ni();
		return a;
	}

	private static int ni() {
		int num = 0, b;
		boolean minus = false;
		while ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'))
			;
		if (b == '-') {
			minus = true;
			b = readByte();
		}

		while (true) {
			if (b >= '0' && b <= '9') {
				num = num * 10 + (b - '0');
			} else {
				return minus ? -num : num;
			}
			b = readByte();
		}
	}

	@SuppressWarnings("unused")
	private static long nl() {
		long num = 0;
		int b;
		boolean minus = false;
		while ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'))
			;
		if (b == '-') {
			minus = true;
			b = readByte();
		}

		while (true) {
			if (b >= '0' && b <= '9') {
				num = num * 10 + (b - '0');
			} else {
				return minus ? -num : num;
			}
			b = readByte();
		}
	}

}

</source>
<source file="../preprocessed_Datasplit/test/0/s898792213P.java" startline="1" endline="541" pcid="63904">
import java.io.*;
import java.util.*;

class P{
	long x, y;
	public P(int x, int y) {
		super();
		this.x = x;
		this.y = y;
	}
}

public class Main {
	static InputStream is;
	static PrintWriter out;
	static String INPUT = "";

	static final long mod = (long) 1e9 + 7;
	static final int dx[] = { -1, 0, 1, 0 }, dy[] = { 0, -1, 0, 1 };
	static final int[] dx8 = { -1, -1, -1, 0, 0, 1, 1, 1 }, dy8 = { -1, 0, 1, -1, 1, -1, 0, 1 };
	static final int inf = Integer.MAX_VALUE / 3;
	static final long linf = Long.MAX_VALUE / 3;
	static final double dinf = Double.MAX_VALUE / 3;
	static final double eps = 1e-10;
	static final double pi = Math.PI;

	static void solve() {
		int n = ni();
		P p[] = new P[n];
		for(int i=0;i<n;i++) {
			p[i] = new P(ni(),ni());
		}
		int check = (int)Math.abs(p[0].x-p[0].y)%2;
		for(int i=0;i<n;i++) {
			if(check != Math.abs(p[i].x - p[i].y)%2) {
				out.println(-1);
				return;
			}
		}

		int m = 0;
		long d[];
		if(check==1) {
			m = 33;
			d = new long[m];
			for(int i=0;i<m;i++) {
				d[i] = 1L<<i;
			}
		}
		else {
			m = 34;
			d = new long[m];
			for(int i=0;i<m-1;i++) {
				d[i+1] = 1L<<i;
				d[0] = 1;
			}
		}

		out.println(m);
		for(int i=0;i<m;i++) {
			out.print(d[m-1-i] + " ");
		}
		out.println();

		for(int i=0;i<n;i++) {
			String s = "";
			long x = p[i].x, y = p[i].y;
			for(int j=m-1;j>=0;j--) {
				if(abs(x)-abs(y)>0) {
					if(x<0) {
						s += "L";
						x += d[j];
					}
					else {
						s += "R";
						x -= d[j];
					}
				}
				else {
					if(y<0) {
						s += "D";
						y += d[j];
					}
					else {
						s += "U";
						y -= d[j];
					}
				}
			}
			out.println(s);
		}

	}

	static int abs(int x) {
		return Math.abs(x);
	}
	static long abs(long x) {
		return Math.abs(x);
	}
	static double abs(double x) {
		return Math.abs(x);
	}

	static int lowerBound(int[] a, int x) {
		int l = -1, r = a.length;
		while (r - l > 1) {
			int c = (l + r) / 2;
			if (a[c] < x) {
				l = c;
			} else {
				r = c;
			}
		}
		return r;
	}

	static int upperBound(int[] a, int x) {
		int l = -1, r = a.length;
		while (r - l > 1) {
			int c = (l + r) / 2;
			if (a[c] <= x) {
				l = c;
			} else {
				r = c;
			}
		}
		return r;
	}

	static int lowerBound(long[] a, long x) {
		int l = -1, r = a.length;
		while (r - l > 1) {
			int c = (l + r) / 2;
			if (a[c] < x) {
				l = c;
			} else {
				r = c;
			}
		}
		return r;
	}

	static int upperBound(long[] a, long x) {
		int l = -1, r = a.length;
		while (r - l > 1) {
			int c = (l + r) / 2;
			if (a[c] <= x) {
				l = c;
			} else {
				r = c;
			}
		}
		return r;
	}

	static int lowerBound(double[] a, double x) {
		int l = -1, r = a.length;
		while (r - l > 1) {
			int c = (l + r) / 2;
			if (a[c] < x) {
				l = c;
			} else {
				r = c;
			}
		}
		return r;
	}

	static int upperBound(double[] a, double x) {
		int l = -1, r = a.length;
		while (r - l > 1) {
			int c = (l + r) / 2;
			if (a[c] <= x) {
				l = c;
			} else {
				r = c;
			}
		}
		return r;
	}

	static <T> int lowerBound(List<T> ls, T x) throws RuntimeException {
		if (ls.size() == 0)
			return -1;
		if (ls.get(0) instanceof Integer) {
			return ~Collections.binarySearch(ls, x, (t1, t2) -> ((Integer) t1).compareTo((Integer) t2) >= 0 ? 1 : -1);
		} else if (ls.get(0) instanceof Long) {
			return ~Collections.binarySearch(ls, x, (t1, t2) -> ((Long) t1).compareTo((Long) t2) >= 0 ? 1 : -1);
		} else if (ls.get(0) instanceof Double) {
			return ~Collections.binarySearch(ls, x, (t1, t2) -> ((Double) t1).compareTo((Double) t2) >= 0 ? 1 : -1);
		} else {
			System.err.println(
					String.format("%s:数値でないリストを二分探索しています。", Thread.currentThread().getStackTrace()[1].getMethodName()));
			throw new RuntimeException();
		}
	}

	static <T> int upperBound(List<T> ls, T x) throws RuntimeException {
		if (ls.size() == 0)
			return -1;
		if (ls.get(0) instanceof Integer) {
			return ~Collections.binarySearch(ls, x, (t1, t2) -> ((Integer) t1).compareTo((Integer) t2) > 0 ? 1 : -1);
		} else if (ls.get(0) instanceof Long) {
			return ~Collections.binarySearch(ls, x, (t1, t2) -> ((Long) t1).compareTo((Long) t2) > 0 ? 1 : -1);
		} else if (ls.get(0) instanceof Double) {
			return ~Collections.binarySearch(ls, x, (t1, t2) -> ((Double) t1).compareTo((Double) t2) > 0 ? 1 : -1);
		} else {
			System.err.println(
					String.format("%s:数値でないリストを二分探索しています。", Thread.currentThread().getStackTrace()[1].getMethodName()));
			throw new RuntimeException();
		}
	}

	static <T> int rupperBound(List<T> ls, T x) throws RuntimeException {
		if (ls.size() == 0)
			return -1;
		if (ls.get(0) instanceof Integer) {
			return ~Collections.binarySearch(ls, x, (t1, t2) -> ((Integer) t1).compareTo((Integer) t2) < 0 ? 1 : -1);
		} else if (ls.get(0) instanceof Long) {
			return ~Collections.binarySearch(ls, x, (t1, t2) -> ((Long) t1).compareTo((Long) t2) < 0 ? 1 : -1);
		} else if (ls.get(0) instanceof Double) {
			return ~Collections.binarySearch(ls, x, (t1, t2) -> ((Double) t1).compareTo((Double) t2) < 0 ? 1 : -1);
		} else {
			System.err.println(
					String.format("%s:数値でないリストを二分探索しています。", Thread.currentThread().getStackTrace()[1].getMethodName()));
			throw new RuntimeException();
		}
	}

	static <T> int rlowerBound(List<T> ls, T x) {
		if (ls.size() == 0)
			return -1;
		if (ls.get(0) instanceof Integer) {
			return ~Collections.binarySearch(ls, x, (t1, t2) -> ((Integer) t1).compareTo((Integer) t2) <= 0 ? 1 : -1);
		} else if (ls.get(0) instanceof Long) {
			return ~Collections.binarySearch(ls, x, (t1, t2) -> ((Long) t1).compareTo((Long) t2) <= 0 ? 1 : -1);
		} else if (ls.get(0) instanceof Double) {
			return ~Collections.binarySearch(ls, x, (t1, t2) -> ((Double) t1).compareTo((Double) t2) <= 0 ? 1 : -1);
		} else {
			System.err.println(
					String.format("%s:数値でないリストを二分探索しています。", Thread.currentThread().getStackTrace()[1].getMethodName()));
			throw new RuntimeException();
		}
	}

	static int[] concat(int x, int arr[]) {
		int ret[] = new int[arr.length + 1];
		System.arraycopy(arr, 0, ret, 1, ret.length - 1);
		ret[0] = x;
		return ret;
	}

	static int[] concat(int arr[], int x) {
		int ret[] = new int[arr.length + 1];
		System.arraycopy(arr, 0, ret, 0, ret.length - 1);
		ret[ret.length - 1] = x;
		return ret;
	}

	static long[] concat(long x, long arr[]) {
		long ret[] = new long[arr.length + 1];
		System.arraycopy(arr, 0, ret, 1, ret.length - 1);
		ret[0] = x;
		return ret;
	}

	static long[] concat(long arr[], long x) {
		long ret[] = new long[arr.length + 1];
		System.arraycopy(arr, 0, ret, 0, ret.length - 1);
		ret[ret.length - 1] = x;
		return ret;
	}

	static long max(long x, long y) {
		return Math.max(x, y);
	}

	static long min(long x, long y) {
		return Math.min(x, y);
	}

	static long max(long x, long y, long z) {
		x = Math.max(x, y);
		x = Math.max(x, z);
		return x;
	}

	static long min(long x, long y, long z) {
		x = Math.min(x, y);
		x = Math.min(x, z);
		return x;
	}

	static double max(double x, double y) {
		return Math.max(x, y);
	}

	static double min(double x, double y) {
		return Math.min(x, y);
	}

	static double max(double x, double y, double z) {
		x = Math.max(x, y);
		x = Math.max(x, z);
		return x;
	}

	static double min(double x, double y, double z) {
		x = Math.min(x, y);
		x = Math.min(x, z);
		return x;
	}

	static void sort(int[] ar) {
		Arrays.sort(ar);
	}

	static void sort(long[] ar) {
		Arrays.sort(ar);
	}

	static void sort(double[] ar) {
		Arrays.sort(ar);
	}

	static void rsort(int[] ar) {
		Arrays.sort(ar);
		int len = ar.length;
		for (int i = 0; i < len / 2; i++) {
			int tmp = ar[i];
			ar[i] = ar[len - 1 - i];
			ar[len - 1 - i] = tmp;
		}
	}

	static void rsort(long[] ar) {
		Arrays.sort(ar);
		int len = ar.length;
		for (int i = 0; i < len / 2; i++) {
			long tmp = ar[i];
			ar[i] = ar[len - 1 - i];
			ar[len - 1 - i] = tmp;
		}
	}

	static void rsort(double[] ar) {
		Arrays.sort(ar);
		int len = ar.length;
		for (int i = 0; i < len / 2; i++) {
			double tmp = ar[i];
			ar[i] = ar[len - 1 - i];
			ar[len - 1 - i] = tmp;
		}
	}

	static void fill(int arr[], int x) {
		Arrays.fill(arr, x);
	}

	static void fill(long arr[], long x) {
		Arrays.fill(arr, x);
	}

	static void fill(double arr[], double x) {
		Arrays.fill(arr, x);
	}

	static void fill(int arr[][], int x) {
		for (int i = 0; i < arr.length; i++)
			Arrays.fill(arr[i], x);
	}

	static void fill(long arr[][], long x) {
		for (int i = 0; i < arr.length; i++)
			Arrays.fill(arr[i], x);
	}

	static void fill(double arr[][], double x) {
		for (int i = 0; i < arr.length; i++)
			Arrays.fill(arr[i], x);
	}

	static long plus(long x, long y) {
		long res = (x + y) % mod;
		return res < 0 ? res + mod : res;
	}

	static long sub(long x, long y) {
		long res = (x - y) % mod;
		return res < 0 ? res + mod : res;
	}

	static long mul(long x, long y) {
		long res = (x * y) % mod;
		return res < 0 ? res + mod : res;
	}

	static long div(long x, long y) {
		long res = x * pow(y, mod - 2) % mod;
		return res < 0 ? res + mod : res;
	}

	static long pow(long x, long y) {
		if (y < 0)
			return 0;
		if (y == 0)
			return 1;
		if (y % 2 == 1)
			return (x * pow(x, y - 1)) % mod;
		long root = pow(x, y / 2);
		return root * root % mod;
	}

	public static void main(String[] args) throws Exception {
		is = INPUT.isEmpty() ? System.in : new ByteArrayInputStream(INPUT.getBytes());
		out = new PrintWriter(System.out);
		solve();
		out.flush();
	}

	private static byte[] inbuf = new byte[1024];
	static int lenbuf = 0, ptrbuf = 0;

	private static int readByte() {
		if (lenbuf == -1)
			throw new InputMismatchException();
		if (ptrbuf >= lenbuf) {
			ptrbuf = 0;
			try {
				lenbuf = is.read(inbuf);
			} catch (IOException e) {
				throw new InputMismatchException();
			}
			if (lenbuf <= 0)
				return -1;
		}
		return inbuf[ptrbuf++];
	}

	private static boolean isSpaceChar(int c) {
		return !(c >= 33 && c <= 126);
	}

	private static int skip() {
		int b;
		while ((b = readByte()) != -1 && isSpaceChar(b))
			;
		return b;
	}

	@SuppressWarnings("unused")
	private static double nd() {
		return Double.parseDouble(ns());
	}

	@SuppressWarnings("unused")
	private static char nc() {
		return (char) skip();
	}

	private static String ns() {
		int b = skip();
		StringBuilder sb = new StringBuilder();
		while (!(isSpaceChar(b))) {
			sb.appendCodePoint(b);
			b = readByte();
		}
		return sb.toString();
	}

	private static char[] ns(int n) {
		char[] buf = new char[n];
		int b = skip(), p = 0;
		while (p < n && !(isSpaceChar(b))) {
			buf[p++] = (char) b;
			b = readByte();
		}
		return n == p ? buf : Arrays.copyOf(buf, p);
	}

	@SuppressWarnings("unused")
	private static char[][] nm(int n, int m) {
		char[][] map = new char[n][];
		for (int i = 0; i < n; i++)
			map[i] = ns(m);
		return map;
	}

	@SuppressWarnings("unused")
	private static int[] na(int n) {
		int[] a = new int[n];
		for (int i = 0; i < n; i++)
			a[i] = ni();
		return a;
	}

	private static int ni() {
		int num = 0, b;
		boolean minus = false;
		while ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'))
			;
		if (b == '-') {
			minus = true;
			b = readByte();
		}

		while (true) {
			if (b >= '0' && b <= '9') {
				num = num * 10 + (b - '0');
			} else {
				return minus ? -num : num;
			}
			b = readByte();
		}
	}

	@SuppressWarnings("unused")
	private static long nl() {
		long num = 0;
		int b;
		boolean minus = false;
		while ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'))
			;
		if (b == '-') {
			minus = true;
			b = readByte();
		}

		while (true) {
			if (b >= '0' && b <= '9') {
				num = num * 10 + (b - '0');
			} else {
				return minus ? -num : num;
			}
			b = readByte();
		}
	}

}

</source>
</class>

<class classid="18" nclones="4" nlines="59" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s310504887P.java" startline="1" endline="71" pcid="5416">
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Scanner;

class Main {

	static int n;
	static double[] x1, y1, x2, y2;
	static double sx, sy, gx, gy;
	static ArrayList<Integer>[] g;

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int q = sc.nextInt();
		while (q-- > 0) {
			long x0, y0, x1, y1, x2, y2, x3, y3;
			x0 = sc.nextLong();
			y0 = sc.nextLong();
			x1 = sc.nextLong();
			y1 = sc.nextLong();
			x2 = sc.nextLong();
			y2 = sc.nextLong();
			x3 = sc.nextLong();
			y3 = sc.nextLong();
			Point p0 = new Point(x0, y0);
			Point p1 = new Point(x1, y1);
			Point p2 = new Point(x2, y2);
			Point p3 = new Point(x3, y3);
			if (linesIntersect(p0, p1, p2, p3)) {
				System.out.println(1);
			} else {
				System.out.println(0);
			}
		}

	}

	static class Point {
		long x, y;
		int id;

		public Point(long x, long y) {
			this.x = x;
			this.y = y;
		}
	}

	static boolean linesIntersect(Point s1, Point d1, Point s2, Point d2) {
		long prd1 = crossProduct(s1, d1, s1, d2) * crossProduct(s1, d1, s1, s2);
		long prd2 = crossProduct(s2, d2, s2, s1) * crossProduct(s2, d2, s2, d1);
		if (prd1 == 0 && prd2 == 0) {
			if (((s2.x - s1.x) * (s2.x - d1.x) <= 0 && (s2.y - s1.y) * (s2.y - d1.y) <= 0)
					|| ((d2.x - s1.x) * (d2.x - d1.x) <= 0 && (d2.y - s1.y) * (d2.y - d1.y) <= 0)
					|| ((s1.x - s2.x) * (s1.x - d2.x) <= 0 && (s1.y - s2.y) * (s1.y - d2.y) <= 0)
					|| ((d1.x - s2.x) * (d1.x - d2.x) <= 0 && (d1.y - s2.y) * (d1.y - d2.y) <= 0)) {
				return true;
			} else
				return false;
		} else
			return prd1 <= 0 && prd2 <= 0;
	}

	static long crossProduct(Point s1, Point d1, Point s2, Point d2) {
		return (d1.x - s1.x) * (d2.y - s2.y) - (d1.y - s1.y) * (d2.x - s2.x);
	}

	static void tr(Object... objects) {
		System.out.println(Arrays.deepToString(objects));
	}
}

</source>
<source file="../preprocessed_Datasplit/test/0/s734381119P.java" startline="1" endline="71" pcid="63333">
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Scanner;

class Main {

	static int n;
	static double[] x1, y1, x2, y2;
	static double sx, sy, gx, gy;
	static ArrayList<Integer>[] g;

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int q = sc.nextInt();
		while (q-- > 0) {
			long x0, y0, x1, y1, x2, y2, x3, y3;
			x0 = sc.nextLong();
			y0 = sc.nextLong();
			x1 = sc.nextLong();
			y1 = sc.nextLong();
			x2 = sc.nextLong();
			y2 = sc.nextLong();
			x3 = sc.nextLong();
			y3 = sc.nextLong();
			Point p0 = new Point(x0, y0);
			Point p1 = new Point(x1, y1);
			Point p2 = new Point(x2, y2);
			Point p3 = new Point(x3, y3);
			if (linesIntersect(p0, p1, p2, p3)) {
				System.out.println(1);
			} else {
				System.out.println(0);
			}
		}

	}

	static class Point {
		long x, y;
		int id;

		public Point(long x, long y) {
			this.x = x;
			this.y = y;
		}
	}

	static boolean linesIntersect(Point s1, Point d1, Point s2, Point d2) {
		long prd1 = crossProduct(s1, d1, s1, d2) * crossProduct(s1, d1, s1, s2);
		long prd2 = crossProduct(s2, d2, s2, s1) * crossProduct(s2, d2, s2, d1);
		if (prd1 == 0 && prd2 == 0) {
			if (((s2.x - s1.x) * (s2.x - d1.x) <= 0 && (s2.y - s1.y) * (s2.y - d1.y) <= 0)
					|| ((d2.x - s1.x) * (d2.x - d1.x) <= 0 && (d2.y - s1.y) * (d2.y - d1.y) <= 0)
					|| ((s1.x - s2.x) * (s1.x - d2.x) <= 0 && (s1.y - s2.y) * (s1.y - d2.y) <= 0)
					|| ((d1.x - s2.x) * (d1.x - d2.x) <= 0 && (d1.y - s2.y) * (d1.y - d2.y) <= 0)) {
				return true;
			} else
				return false;
		} else
			return prd1 <= 0 && prd2 <= 0;
	}

	static long crossProduct(Point s1, Point d1, Point s2, Point d2) {
		return (d1.x - s1.x) * (d2.y - s2.y) - (d1.y - s1.y) * (d2.x - s2.x);
	}

	static void tr(Object... objects) {
		System.out.println(Arrays.deepToString(objects));
	}
}

</source>
<source file="../preprocessed_Datasplit/train/0/s703249395P.java" startline="1" endline="71" pcid="17053">
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Scanner;

class Main {

	static int n;
	static double[] x1, y1, x2, y2;
	static double sx, sy, gx, gy;
	static ArrayList<Integer>[] g;

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int q = sc.nextInt();
		while (q-- > 0) {
			long x0, y0, x1, y1, x2, y2, x3, y3;
			x0 = sc.nextLong();
			y0 = sc.nextLong();
			x1 = sc.nextLong();
			y1 = sc.nextLong();
			x2 = sc.nextLong();
			y2 = sc.nextLong();
			x3 = sc.nextLong();
			y3 = sc.nextLong();
			Point p0 = new Point(x0, y0);
			Point p1 = new Point(x1, y1);
			Point p2 = new Point(x2, y2);
			Point p3 = new Point(x3, y3);
			if (linesIntersect(p0, p1, p2, p3)) {
				System.out.println(1);
			} else {
				System.out.println(0);
			}
		}

	}

	static class Point {
		long x, y;
		int id;

		public Point(long x, long y) {
			this.x = x;
			this.y = y;
		}
	}

	static boolean linesIntersect(Point s1, Point d1, Point s2, Point d2) {
		long prd1 = crossProduct(s1, d1, s1, d2) * crossProduct(s1, d1, s1, s2);
		long prd2 = crossProduct(s2, d2, s2, s1) * crossProduct(s2, d2, s2, d1);
		if (prd1 == 0 && prd2 == 0) {
			if (((s2.x - s1.x) * (s2.x - d1.x) <= 0 && (s2.y - s1.y) * (s2.y - d1.y) <= 0)
					|| ((d2.x - s1.x) * (d2.x - d1.x) <= 0 && (d2.y - s1.y) * (d2.y - d1.y) <= 0)
					|| ((s1.x - s2.x) * (s1.x - d2.x) <= 0 && (s1.y - s2.y) * (s1.y - d2.y) <= 0)
					|| ((d1.x - s2.x) * (d1.x - d2.x) <= 0 && (d1.y - s2.y) * (d1.y - d2.y) <= 0)) {
				return true;
			} else
				return false;
		} else
			return prd1 <= 0 && prd2 <= 0;
	}

	static long crossProduct(Point s1, Point d1, Point s2, Point d2) {
		return (d1.x - s1.x) * (d2.y - s2.y) - (d1.y - s1.y) * (d2.x - s2.x);
	}

	static void tr(Object... objects) {
		System.out.println(Arrays.deepToString(objects));
	}
}

</source>
<source file="../preprocessed_Datasplit/train/0/s058915520P.java" startline="1" endline="71" pcid="27313">
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Scanner;

class Main {

	static int n;
	static double[] x1, y1, x2, y2;
	static double sx, sy, gx, gy;
	static ArrayList<Integer>[] g;

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int q = sc.nextInt();
		while (q-- > 0) {
			long x0, y0, x1, y1, x2, y2, x3, y3;
			x0 = sc.nextLong();
			y0 = sc.nextLong();
			x1 = sc.nextLong();
			y1 = sc.nextLong();
			x2 = sc.nextLong();
			y2 = sc.nextLong();
			x3 = sc.nextLong();
			y3 = sc.nextLong();
			Point p0 = new Point(x0, y0);
			Point p1 = new Point(x1, y1);
			Point p2 = new Point(x2, y2);
			Point p3 = new Point(x3, y3);
			if (linesIntersect(p0, p1, p2, p3)) {
				System.out.println(1);
			} else {
				System.out.println(0);
			}
		}

	}

	static class Point {
		long x, y;
		int id;

		public Point(long x, long y) {
			this.x = x;
			this.y = y;
		}
	}

	static boolean linesIntersect(Point s1, Point d1, Point s2, Point d2) {
		long prd1 = crossProduct(s1, d1, s1, d2) * crossProduct(s1, d1, s1, s2);
		long prd2 = crossProduct(s2, d2, s2, s1) * crossProduct(s2, d2, s2, d1);
		if (prd1 == 0 && prd2 == 0) {
			if (((s2.x - s1.x) * (s2.x - d1.x) <= 0 && (s2.y - s1.y) * (s2.y - d1.y) <= 0)
					|| ((d2.x - s1.x) * (d2.x - d1.x) <= 0 && (d2.y - s1.y) * (d2.y - d1.y) <= 0)
					|| ((s1.x - s2.x) * (s1.x - d2.x) <= 0 && (s1.y - s2.y) * (s1.y - d2.y) <= 0)
					|| ((d1.x - s2.x) * (d1.x - d2.x) <= 0 && (d1.y - s2.y) * (d1.y - d2.y) <= 0)) {
				return true;
			} else
				return false;
		} else
			return prd1 <= 0 && prd2 <= 0;
	}

	static long crossProduct(Point s1, Point d1, Point s2, Point d2) {
		return (d1.x - s1.x) * (d2.y - s2.y) - (d1.y - s1.y) * (d2.x - s2.x);
	}

	static void tr(Object... objects) {
		System.out.println(Arrays.deepToString(objects));
	}
}

</source>
</class>

<class classid="19" nclones="2" nlines="22" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s330442435P.java" startline="1" endline="25" pcid="5976">
import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int[] s = {60,80,100,120,140,160};
		int[] w = {2,5,10,15,20,25};
		int[] p = {600,800,1000,1200,1400,1600,0};
		while(true){
			int n = sc.nextInt();
			if(n==0)break;
			int t = 0;
			for(int i=0;i<n;i++){
				int size = sc.nextInt()+sc.nextInt()+sc.nextInt();
				int we = sc.nextInt();
				int k = 0;
				while(k<6 && !(size<=s[k]&&we<=w[k]))k++;
				t+=p[k];
			}
			System.out.println(t);
		}
	}
}

</source>
<source file="../preprocessed_Datasplit/test/0/s009927387P.java" startline="1" endline="25" pcid="60888">
import java.util.Scanner;

public class Main{

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int[] s = {60,80,100,120,140,160};
		int[] w = {2,5,10,15,20,25};
		int[] p = {600,800,1000,1200,1400,1600,0};
		while(true){
			int n = sc.nextInt();
			if(n==0)break;
			int t = 0;
			for(int i=0;i<n;i++){
				int size = sc.nextInt()+sc.nextInt()+sc.nextInt();
				int we = sc.nextInt();
				int k = 0;
				while(k<6 && !(size<=s[k]&&we<=w[k]))k++;
				t+=p[k];
			}
			System.out.println(t);
		}
	}
}

</source>
</class>

<class classid="20" nclones="2" nlines="22" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s356478895P.java" startline="1" endline="26" pcid="6801">
import java.util.*;

public class Main {

  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int arr[] = new int[N+1];
    int srt[] = new int[N+1];
    for(int i = 1; i<=N; i++){
      arr[i] = sc.nextInt();
      srt[i] = arr[i];
    }
    Arrays.sort(srt);
    for(int i = 1; i<=N; i++){
      if(arr[i] >= srt[N/2+1]){
        System.out.println(srt[N/2]);
      }
      else{
        System.out.println(srt[N/2+1]);
      }
    }
  }

}

</source>
<source file="../preprocessed_Datasplit/test/0/s768585881P.java" startline="1" endline="24" pcid="63453">
import java.util.*;
public class Main {

  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int arr[] = new int[N+1];
    int srt[] = new int[N+1];
    for(int i = 1; i<=N; i++){
      arr[i] = sc.nextInt();
      srt[i] = arr[i];
    }
    Arrays.sort(srt);
    for(int i = 1; i<=N; i++){
      if(arr[i] >= srt[N/2+1]){
        System.out.println(srt[N/2]);
      }
      else{
        System.out.println(srt[N/2+1]);
      }
    }
  }
}

</source>
</class>

<class classid="21" nclones="2" nlines="21" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s367208360P.java" startline="1" endline="21" pcid="7135">
import java.util.Scanner;
public class Main {
	public static void main(String[] args) throws java.io.IOException {
		Scanner scan = new Scanner(System.in);
		int n = scan.nextInt();
		int[] k = new int[n];
		int[] p = new int[n];
		for(int i = 0 ; i<n ; i++){
			k[i] = scan.nextInt();
			p[i] = scan.nextInt();
		}
		for(int i = 0 ; i<n ; i++){
			if(k[i]%p[i] == 0){
				System.out.println(p[i]);
			}else{
				System.out.println(k[i]%p[i]);
			}
		}
	}
}

</source>
<source file="../preprocessed_Datasplit/test/0/s372355840P.java" startline="1" endline="21" pcid="62090">
import java.util.Scanner;
public class Main {
	public static void main(String[] args) throws java.io.IOException {
		Scanner scan = new Scanner(System.in);
		int n = scan.nextInt();
		int[] k = new int[n];
		int[] p = new int[n];
		for(int i = 0 ; i<n ; i++){
			k[i] = scan.nextInt();
			p[i] = scan.nextInt();
		}
		for(int i = 0 ; i<n ; i++){
			if(k[i]%p[i] == 0){
				System.out.println(p[i]);
			}else{
				System.out.println(k[i]%p[i]);
			}
		}
	}
}

</source>
</class>

<class classid="22" nclones="3" nlines="97" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s388764829P.java" startline="1" endline="109" pcid="7768">
import java.io.OutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PrintWriter;
import java.util.Arrays;
import java.util.StringTokenizer;
import java.io.IOException;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.InputStream;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskB solver = new TaskB();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskB {
        static final long MODULO = 998244353;

        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n = in.nextInt();
            String s = in.next();
            int[][] pos = new int[3][n];
            int[] cnt = new int[3];
            for (int i = 0; i < s.length(); ++i) {
                int what = "RGB".indexOf(s.charAt(i));
                pos[what][cnt[what]++] = i;
            }
            int[] val = new int[s.length()];
            int[] minusOneType = new int[s.length()];
            Arrays.fill(minusOneType, -1);
            Arrays.fill(val, -2);
            Arrays.fill(cnt, 0);
            for (int i = 0; i < s.length(); ++i)
                if (val[i] == -2) {
                    val[i] = -1;
                    int what = "RGB".indexOf(s.charAt(i));
                    int p1 = -1;
                    int p2 = -1;
                    for (int j = 0; j < 3; ++j)
                        if (j != what) {
                            while (val[pos[j][cnt[j]]] != -2) ++cnt[j];
                            if (p1 < 0) p1 = pos[j][cnt[j]];
                            else p2 = pos[j][cnt[j]];
                        }
                    val[Math.min(p1, p2)] = 0;
                    minusOneType[Math.min(p1, p2)] = what;
                    val[Math.max(p1, p2)] = 1;
                }
            long res = 1;
            for (int i = 1; i <= n; ++i) {
                res = res * i % MODULO;
            }
            Arrays.fill(cnt, 0);
            for (int i = 0; i < s.length(); ++i) {
                int what = "RGB".indexOf(s.charAt(i));
                if (val[i] == -1) ++cnt[what];
                if (val[i] == 0) {
                    int need = minusOneType[i];
                    res = res * cnt[need]-- % MODULO;
                }
            }
            Arrays.fill(cnt, 0);
            for (int i = s.length() - 1; i >= 0; --i) {
                int what = "RGB".indexOf(s.charAt(i));
                if (val[i] == 1) ++cnt[what];
                if (val[i] == 0) {
                    int need = 3 - what - minusOneType[i];
                    res = res * cnt[need]-- % MODULO;
                }
            }
            out.println(res);
        }

    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

    }
}

</source>
<source file="../preprocessed_Datasplit/test/0/s414697717P.java" startline="1" endline="109" pcid="62235">
import java.io.OutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PrintWriter;
import java.util.Arrays;
import java.util.StringTokenizer;
import java.io.IOException;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.InputStream;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskB solver = new TaskB();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskB {
        static final long MODULO = 998244353;

        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n = in.nextInt();
            String s = in.next();
            int[][] pos = new int[3][n];
            int[] cnt = new int[3];
            for (int i = 0; i < s.length(); ++i) {
                int what = "RGB".indexOf(s.charAt(i));
                pos[what][cnt[what]++] = i;
            }
            int[] val = new int[s.length()];
            int[] minusOneType = new int[s.length()];
            Arrays.fill(minusOneType, -1);
            Arrays.fill(val, -2);
            Arrays.fill(cnt, 0);
            for (int i = 0; i < s.length(); ++i)
                if (val[i] == -2) {
                    val[i] = -1;
                    int what = "RGB".indexOf(s.charAt(i));
                    int p1 = -1;
                    int p2 = -1;
                    for (int j = 0; j < 3; ++j)
                        if (j != what) {
                            while (val[pos[j][cnt[j]]] != -2) ++cnt[j];
                            if (p1 < 0) p1 = pos[j][cnt[j]];
                            else p2 = pos[j][cnt[j]];
                        }
                    val[Math.min(p1, p2)] = 0;
                    minusOneType[Math.min(p1, p2)] = what;
                    val[Math.max(p1, p2)] = 1;
                }
            long res = 1;
            for (int i = 1; i <= n; ++i) {
                res = res * i % MODULO;
            }
            Arrays.fill(cnt, 0);
            for (int i = 0; i < s.length(); ++i) {
                int what = "RGB".indexOf(s.charAt(i));
                if (val[i] == -1) ++cnt[what];
                if (val[i] == 0) {
                    int need = minusOneType[i];
                    res = res * cnt[need]-- % MODULO;
                }
            }
            Arrays.fill(cnt, 0);
            for (int i = s.length() - 1; i >= 0; --i) {
                int what = "RGB".indexOf(s.charAt(i));
                if (val[i] == 1) ++cnt[what];
                if (val[i] == 0) {
                    int need = 3 - what - minusOneType[i];
                    res = res * cnt[need]-- % MODULO;
                }
            }
            out.println(res);
        }

    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

    }
}

</source>
<source file="../preprocessed_Datasplit/train/0/s767521242P.java" startline="1" endline="109" pcid="18933">
import java.io.OutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PrintWriter;
import java.util.Arrays;
import java.util.StringTokenizer;
import java.io.IOException;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.InputStream;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskB solver = new TaskB();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskB {
        static final long MODULO = 998244353;

        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n = in.nextInt();
            String s = in.next();
            int[][] pos = new int[3][n];
            int[] cnt = new int[3];
            for (int i = 0; i < s.length(); ++i) {
                int what = "RGB".indexOf(s.charAt(i));
                pos[what][cnt[what]++] = i;
            }
            int[] val = new int[s.length()];
            int[] minusOneType = new int[s.length()];
            Arrays.fill(minusOneType, -1);
            Arrays.fill(val, -2);
            Arrays.fill(cnt, 0);
            for (int i = 0; i < s.length(); ++i)
                if (val[i] == -2) {
                    val[i] = -1;
                    int what = "RGB".indexOf(s.charAt(i));
                    int p1 = -1;
                    int p2 = -1;
                    for (int j = 0; j < 3; ++j)
                        if (j != what) {
                            while (val[pos[j][cnt[j]]] != -2) ++cnt[j];
                            if (p1 < 0) p1 = pos[j][cnt[j]];
                            else p2 = pos[j][cnt[j]];
                        }
                    val[Math.min(p1, p2)] = 0;
                    minusOneType[Math.min(p1, p2)] = what;
                    val[Math.max(p1, p2)] = 1;
                }
            long res = 1;
            for (int i = 1; i <= n; ++i) {
                res = res * i % MODULO;
            }
            Arrays.fill(cnt, 0);
            for (int i = 0; i < s.length(); ++i) {
                int what = "RGB".indexOf(s.charAt(i));
                if (val[i] == -1) ++cnt[what];
                if (val[i] == 0) {
                    int need = minusOneType[i];
                    res = res * cnt[need]-- % MODULO;
                }
            }
            Arrays.fill(cnt, 0);
            for (int i = s.length() - 1; i >= 0; --i) {
                int what = "RGB".indexOf(s.charAt(i));
                if (val[i] == 1) ++cnt[what];
                if (val[i] == 0) {
                    int need = 3 - what - minusOneType[i];
                    res = res * cnt[need]-- % MODULO;
                }
            }
            out.println(res);
        }

    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

    }
}

</source>
</class>

<class classid="23" nclones="2" nlines="20" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s411025858P.java" startline="1" endline="24" pcid="8436">
import java.util.Arrays;
import java.util.Scanner;
import java.util.stream.IntStream;

public class Main {

	public static void main(String[] args) {
		try (Scanner scanner = new Scanner(System.in)) {
			int n = scanner.nextInt(), m = scanner.nextInt(), q = scanner.nextInt();
			int[][] x = new int[n + 1][n + 1], c = new int[n + 1][n + 1];
			IntStream.range(0, n + 1).forEach(i -> Arrays.fill(x[i], 0));
			IntStream.range(0, m).forEach(i -> x[scanner.nextInt()][scanner.nextInt()]++);
			Arrays.fill(c[0], 0);
			IntStream.rangeClosed(1, n).forEach(i -> c[i][0] = 0);
			IntStream.rangeClosed(1, n)
					.forEach(i -> IntStream.rangeClosed(1, n).forEach(j -> c[i][j] = c[i][j - 1] + x[i][j]));
			IntStream.range(0, q).forEach(i -> {
				int l = scanner.nextInt(), r = scanner.nextInt();
				System.out.println(IntStream.rangeClosed(l, r).map(j -> c[j][r] - c[j][l - 1]).sum());
			});
		}
	}
}

</source>
<source file="../preprocessed_Datasplit/test/0/s065444897P.java" startline="1" endline="24" pcid="61068">
import java.util.Arrays;
import java.util.Scanner;
import java.util.stream.IntStream;

public class Main {

	public static void main(String[] args) {
		try (Scanner scanner = new Scanner(System.in)) {
			int n = scanner.nextInt(), m = scanner.nextInt(), q = scanner.nextInt();
			int[][] x = new int[n + 1][n + 1], c = new int[n + 1][n + 1];
			IntStream.range(0, n + 1).forEach(i -> Arrays.fill(x[i], 0));
			IntStream.range(0, m).forEach(i -> x[scanner.nextInt()][scanner.nextInt()]++);
			Arrays.fill(c[0], 0);
			IntStream.rangeClosed(1, n).forEach(i -> c[i][0] = 0);
			IntStream.rangeClosed(1, n)
					.forEach(i -> IntStream.rangeClosed(1, n).forEach(j -> c[i][j] = c[i][j - 1] + x[i][j]));
			IntStream.range(0, q).forEach(i -> {
				int l = scanner.nextInt(), r = scanner.nextInt();
				System.out.println(IntStream.rangeClosed(l, r).map(j -> c[j][r] - c[j][l - 1]).sum());
			});
		}
	}
}

</source>
</class>

<class classid="24" nclones="2" nlines="53" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s448593795P.java" startline="1" endline="57" pcid="9509">
import java.io.*;
import java.math.*;
import java.util.*;

public class Main {
    private static boolean debug = false;
    private static boolean elapsed = false;

    private static PrintWriter _out = new PrintWriter(System.out);
    private static PrintWriter _err = new PrintWriter(System.err);

    private void solve(Scanner sc) {
        int a = sc.nextInt();
        int b = sc.nextInt();

        if (a == b) {
            _out.println("Draw");
        } else if (a == 1) {
            _out.println("Alice");
        } else if (b == 1) {
            _out.println("Bob");
        } else {
            _out.println((a > b ? "Alice" : "Bob"));
        }
    }
    private static BigInteger C(long n, long r) {
        BigInteger res = BigInteger.ONE;
        for (long i = n; i > n - r; --i) {
            res = res.multiply(BigInteger.valueOf(i));
        }
        for (long i = r; i > 1; --i) {
            res = res.divide(BigInteger.valueOf(i));
        }
        return res;
    }
    private static BigInteger P(long n, long r) {
        BigInteger res = BigInteger.ONE;
        for (long i = n; i > n - r; --i) {
            res = res.multiply(BigInteger.valueOf(i));
        }
        return res;
    }
    public static void main(String[] args) {
        long S = System.currentTimeMillis();

        Scanner sc = new Scanner(System.in);
        new Main().solve(sc);
        _out.flush();

        long G = System.currentTimeMillis();
        if (elapsed) {
            _err.println((G - S) + "ms");
        }
        _err.flush();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/0/s919592382P.java" startline="1" endline="57" pcid="63974">
import java.io.*;
import java.math.*;
import java.util.*;

public class Main {
    private static boolean debug = false;
    private static boolean elapsed = false;

    private static PrintWriter _out = new PrintWriter(System.out);
    private static PrintWriter _err = new PrintWriter(System.err);

    private void solve(Scanner sc) {
        int a = sc.nextInt();
        int b = sc.nextInt();

        if (a == b) {
            _out.println("Draw");
        } else if (a == 1) {
            _out.println("Alice");
        } else if (b == 1) {
            _out.println("Bob");
        } else {
            _out.println((a > b ? "Alice" : "Bob"));
        }
    }
    private static BigInteger C(long n, long r) {
        BigInteger res = BigInteger.ONE;
        for (long i = n; i > n - r; --i) {
            res = res.multiply(BigInteger.valueOf(i));
        }
        for (long i = r; i > 1; --i) {
            res = res.divide(BigInteger.valueOf(i));
        }
        return res;
    }
    private static BigInteger P(long n, long r) {
        BigInteger res = BigInteger.ONE;
        for (long i = n; i > n - r; --i) {
            res = res.multiply(BigInteger.valueOf(i));
        }
        return res;
    }
    public static void main(String[] args) {
        long S = System.currentTimeMillis();

        Scanner sc = new Scanner(System.in);
        new Main().solve(sc);
        _out.flush();

        long G = System.currentTimeMillis();
        if (elapsed) {
            _err.println((G - S) + "ms");
        }
        _err.flush();
    }
}

</source>
</class>

<class classid="25" nclones="2" nlines="40" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s494089730P.java" startline="1" endline="42" pcid="10739">
import java.io.PrintWriter;
import java.util.Scanner;

public class Main {
    private static int[] path;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int a = sc.nextInt();
        int b = sc.nextInt();
        path = new int[1 << n];
        if (Integer.bitCount(a ^ b) % 2 != 0) {
            System.out.println("YES");
        } else {
            System.out.println("NO");
            return;
        }
        path(a, b, 0, (1 << n) - 1);
        PrintWriter pw = new PrintWriter(System.out);
        for (int i = 0; i < path.length; i++) {
            pw.print(path[i] + " ");
        }
        pw.println();
        pw.flush();
    }

    private static void path(int a, int b, int st, int mask) {
        int diffBit = Integer.highestOneBit(mask & (a ^ b));
        mask = mask ^ diffBit;
        int size = Integer.bitCount(mask);
        if (size == 0) {
            path[st] = a;
            path[st + 1] = b;
        } else {
            int otherBit = Integer.highestOneBit(mask);
            path(a, a ^ otherBit, st, mask);
            path(a ^ diffBit ^ otherBit, b, st + (1 << size), mask);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/0/s687838170P.java" startline="1" endline="42" pcid="63171">
import java.io.PrintWriter;
import java.util.Scanner;

public class Main {
    private static int[] path;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int a = sc.nextInt();
        int b = sc.nextInt();
        path = new int[1 << n];
        if (Integer.bitCount(a ^ b) % 2 != 0) {
            System.out.println("YES");
        } else {
            System.out.println("NO");
            return;
        }
        path(a, b, 0, (1 << n) - 1);
        PrintWriter pw = new PrintWriter(System.out);
        for (int i = 0; i < path.length; i++) {
            pw.print(path[i] + " ");
        }
        pw.println();
        pw.flush();
    }

    private static void path(int a, int b, int st, int mask) {
        int diffBit = Integer.highestOneBit(mask & (a ^ b));
        mask = mask ^ diffBit;
        int size = Integer.bitCount(mask);
        if (size == 0) {
            path[st] = a;
            path[st + 1] = b;
        } else {
            int otherBit = Integer.highestOneBit(mask);
            path(a, a ^ otherBit, st, mask);
            path(a ^ diffBit ^ otherBit, b, st + (1 << size), mask);
        }
    }
}

</source>
</class>

<class classid="26" nclones="2" nlines="143" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s497904534P.java" startline="1" endline="173" pcid="10834">
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import java.util.ArrayList;
import java.util.PriorityQueue;
import java.util.Comparator;

class Point implements Comparable<Point>{
    public static int nextId = 0;

    public int id;
    public int x;
    public int y;
    public int type;
    public int distanceFromStart;

    public Point() {
        this(-1, -1, -1);
    }

    public Point(final int x, final int y, final int type) {
        init(x, y, type);
    }

    public int distance(final Point p) {
        return abs(this.x - p.x) + abs(this.y - p.y);
    }

    public void init(final int x, final int y, final int type){
        this.id = nextId++;
        this.x = x;
        this.y = y;
        this.type = type;
        this.distanceFromStart = Integer.MAX_VALUE;
    }

    @Override
    public int compareTo(final Point p) {
        return this.distanceFromStart - p.distanceFromStart;
    }

    private static int abs(final int n) {
        int mask = n >> 31;
        return (n ^ mask) - mask;
    }
}

public class Main {
    public static final BufferedReader br =
            new BufferedReader(new InputStreamReader(System.in));

    public static final Point start = new Point();
    public static final Point goal = new Point();

    public static final PriorityQueue<Point> q = new PriorityQueue<Point>();

    public static final List<List<Point> > pointListByType =
            new ArrayList<List<Point> >();

    static {
        for(int i = 0; i < 5; i++) {
            pointListByType.add(new ArrayList<Point>());
        }
    }

    public static void main(String args[]) throws IOException {
        while(true) {
            final String mapSizeStr = br.readLine();
            if("0 0".equals(mapSizeStr)) break;

            final String[] splittedStr = mapSizeStr.split(" ");
            final int x = Integer.parseInt(splittedStr[0]);
            final int y = Integer.parseInt(splittedStr[1]);

            for(int i = 0; i < 5; i++) {
                pointListByType.get(i).clear();
            }
            Point.nextId = 0;

            for(int r = 0; r < y; r++){
                final String line = br.readLine();
                final char[] caray = line.toCharArray();
                for(int c = 0; c < x; c++) {
                    char pointLiteral = caray[c];
                    switch(pointLiteral) {
                    case '.':
                        break;
                    case 'S':
                        start.init(c, r, -1);
                        start.distanceFromStart = 0;
                        break;
                    case 'G':
                        goal.init(c, r, -1);
                        break;
                    default:
                        final int type = (int)pointLiteral - (int)'1';
                        pointListByType.get(type).add(new Point(c, r, type));
                    }
                }
            }

            int minLenType = -1;
            int minLen = Integer.MAX_VALUE;
            for (int firstType = 0; firstType < 5; firstType++) {
                final int shortestPathLen = searchShortestPath(firstType, minLen);

                if(minLen > shortestPathLen) {
                    minLen = shortestPathLen;
                    minLenType = firstType;
                }

                if(firstType == 4) break;

                for(int i = 0; i < 5; i++) {
                    final List<Point> tempPointList = pointListByType.get(i);
                    final int pointListSize = tempPointList.size();
                    for(int j = 0; j < pointListSize; j++) {
                        tempPointList.get(j).distanceFromStart = Integer.MAX_VALUE;
                    }
                }
                goal.distanceFromStart = Integer.MAX_VALUE;
            }

            if(minLen == Integer.MAX_VALUE) {
                System.out.println("NA");
            } else {
                System.out.println((minLenType + 1) + " " + minLen);
            }
        }
    }

    private static int searchShortestPath(final int firstType, final int minLen) {
        final int lastType = (firstType + 4) % 5;

        q.clear();

        q.add(start);
        start.type = firstType;

        while(!q.isEmpty()) {
            final Point searchingPoint = q.poll();

            if(searchingPoint.distanceFromStart >= minLen) return Integer.MAX_VALUE;
            if(searchingPoint.id == goal.id) return goal.distanceFromStart;

            if(searchingPoint.type == lastType) {
                final int distance = searchingPoint.distance(goal);
                final int searchingPointDistance = searchingPoint.distanceFromStart;
                if(goal.distanceFromStart > searchingPointDistance + distance) {
                    goal.distanceFromStart = searchingPointDistance + distance;
                    q.add(goal);
                }
            } else {
                final List<Point> nextPointList = pointListByType.get((searchingPoint.type + 1) % 5);
                final int nextPointListSize = nextPointList.size();

                for(int i = 0; i < nextPointListSize; i++) {
                    final Point tempNextPoint = nextPointList.get(i);
                    final int distance = searchingPoint.distance(tempNextPoint);
                    final int searchingPointDistance = searchingPoint.distanceFromStart;
                    if(tempNextPoint.distanceFromStart > searchingPointDistance + distance) {
                        tempNextPoint.distanceFromStart = searchingPointDistance + distance;
                        q.add(tempNextPoint);
                    }
                }
            }
        }
        return Integer.MAX_VALUE;
    }
}

</source>
<source file="../preprocessed_Datasplit/test/0/s034088895P.java" startline="1" endline="173" pcid="60970">
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import java.util.ArrayList;
import java.util.PriorityQueue;
import java.util.Comparator;

class Point implements Comparable<Point>{
    public static int nextId = 0;

    public int id;
    public int x;
    public int y;
    public int type;
    public int distanceFromStart;

    public Point() {
        this(-1, -1, -1);
    }

    public Point(final int x, final int y, final int type) {
        init(x, y, type);
    }

    public int distance(final Point p) {
        return abs(this.x - p.x) + abs(this.y - p.y);
    }

    public void init(final int x, final int y, final int type){
        this.id = nextId++;
        this.x = x;
        this.y = y;
        this.type = type;
        this.distanceFromStart = Integer.MAX_VALUE;
    }

    @Override
    public int compareTo(final Point p) {
        return this.distanceFromStart - p.distanceFromStart;
    }

    private static int abs(final int n) {
        int mask = n >> 31;
        return (n ^ mask) - mask;
    }
}

public class Main {
    public static final BufferedReader br =
            new BufferedReader(new InputStreamReader(System.in));

    public static final Point start = new Point();
    public static final Point goal = new Point();

    public static final PriorityQueue<Point> q = new PriorityQueue<Point>();

    public static final List<List<Point> > pointListByType =
            new ArrayList<List<Point> >();

    static {
        for(int i = 0; i < 5; i++) {
            pointListByType.add(new ArrayList<Point>());
        }
    }

    public static void main(String args[]) throws IOException {
        while(true) {
            final String mapSizeStr = br.readLine();
            if("0 0".equals(mapSizeStr)) break;

            final String[] splittedStr = mapSizeStr.split(" ");
            final int x = Integer.parseInt(splittedStr[0]);
            final int y = Integer.parseInt(splittedStr[1]);

            for(int i = 0; i < 5; i++) {
                pointListByType.get(i).clear();
            }
            Point.nextId = 0;

            for(int r = 0; r < y; r++){
                final String line = br.readLine();
                final char[] caray = line.toCharArray();
                for(int c = 0; c < x; c++) {
                    char pointLiteral = caray[c];
                    switch(pointLiteral) {
                    case '.':
                        break;
                    case 'S':
                        start.init(c, r, -1);
                        start.distanceFromStart = 0;
                        break;
                    case 'G':
                        goal.init(c, r, -1);
                        break;
                    default:
                        final int type = (int)pointLiteral - (int)'1';
                        pointListByType.get(type).add(new Point(c, r, type));
                    }
                }
            }

            int minLenType = -1;
            int minLen = Integer.MAX_VALUE;
            for (int firstType = 0; firstType < 5; firstType++) {
                final int shortestPathLen = searchShortestPath(firstType, minLen);

                if(minLen > shortestPathLen) {
                    minLen = shortestPathLen;
                    minLenType = firstType;
                }

                if(firstType == 4) break;

                for(int i = 0; i < 5; i++) {
                    final List<Point> tempPointList = pointListByType.get(i);
                    final int pointListSize = tempPointList.size();
                    for(int j = 0; j < pointListSize; j++) {
                        tempPointList.get(j).distanceFromStart = Integer.MAX_VALUE;
                    }
                }
                goal.distanceFromStart = Integer.MAX_VALUE;
            }

            if(minLen == Integer.MAX_VALUE) {
                System.out.println("NA");
            } else {
                System.out.println((minLenType + 1) + " " + minLen);
            }
        }
    }

    private static int searchShortestPath(final int firstType, final int minLen) {
        final int lastType = (firstType + 4) % 5;

        q.clear();

        q.add(start);
        start.type = firstType;

        while(!q.isEmpty()) {
            final Point searchingPoint = q.poll();

            if(searchingPoint.distanceFromStart >= minLen) return Integer.MAX_VALUE;
            if(searchingPoint.id == goal.id) return goal.distanceFromStart;

            if(searchingPoint.type == lastType) {
                final int distance = searchingPoint.distance(goal);
                final int searchingPointDistance = searchingPoint.distanceFromStart;
                if(goal.distanceFromStart > searchingPointDistance + distance) {
                    goal.distanceFromStart = searchingPointDistance + distance;
                    q.add(goal);
                }
            } else {
                final List<Point> nextPointList = pointListByType.get((searchingPoint.type + 1) % 5);
                final int nextPointListSize = nextPointList.size();

                for(int i = 0; i < nextPointListSize; i++) {
                    final Point tempNextPoint = nextPointList.get(i);
                    final int distance = searchingPoint.distance(tempNextPoint);
                    final int searchingPointDistance = searchingPoint.distanceFromStart;
                    if(tempNextPoint.distanceFromStart > searchingPointDistance + distance) {
                        tempNextPoint.distanceFromStart = searchingPointDistance + distance;
                        q.add(tempNextPoint);
                    }
                }
            }
        }
        return Integer.MAX_VALUE;
    }
}

</source>
</class>

<class classid="27" nclones="2" nlines="19" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s502913181P.java" startline="1" endline="26" pcid="10960">
import java.util.Arrays;
import java.util.Scanner;
public class Main
{
	public static void main(String arg[])
	{
		Scanner in = new Scanner(System.in);
		while(in.hasNext())
		{
			int n= in.nextInt();
			int a[] = new int[n];
			int ans = 0;
			for(int i=0; i<n; i++)
				a[i]=in.nextInt();
			Arrays.sort(a);
			int sum[]= new int [n];
			sum[0]=a[0];
			for(int i=1; i<n; i++)
				sum[i]=a[i]+sum[i-1];
			for(int i=0; i<n ;i++)
			ans+=sum[i];
			System.out.println(ans);
		}
	}
}

</source>
<source file="../preprocessed_Datasplit/test/0/s759993942P.java" startline="1" endline="29" pcid="63431">
import java.util.Arrays;
import java.util.Scanner;

public class Main
{
	public static void main(String arg[])
	{
		Scanner in = new Scanner(System.in);
		while(in.hasNext())
		{
			int n= in.nextInt();
			int a[] = new int[n];
			int ans = 0;
			for(int i=0; i<n; i++)
				a[i]=in.nextInt();
			Arrays.sort(a);
			int sum[]= new int [n];
			sum[0]=a[0];
			for(int i=1; i<n; i++)
				sum[i]=a[i]+sum[i-1];
			for(int i=0; i<n ;i++)
			ans+=sum[i];
			System.out.println(ans);
		}

	}

}

</source>
</class>

<class classid="28" nclones="5" nlines="14" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s509338669P.java" startline="1" endline="18" pcid="11157">
import java.util.Scanner;
public class Main {
    public static void main(String[] args) {

    Scanner sc = new Scanner(System.in);

      int K =sc.nextInt();
      int X =sc.nextInt();

      if(K*500>=X){
      System.out.println("Yes");
      }
      else{
      System.out.println("No");
      }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02811_0P.java" startline="1" endline="16" pcid="65493">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int K = sc.nextInt();
        int X = sc.nextInt();

        if (K * 500 >= X) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02811_2P.java" startline="1" endline="15" pcid="34142">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int K = sc.nextInt();
        int X = sc.nextInt();
        if (K * 500 >= X) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02811_2P.java" startline="1" endline="16" pcid="41712">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int K = sc.nextInt();
        int X = sc.nextInt();

        if (K * 500 >= X) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02811_0P.java" startline="1" endline="15" pcid="34140">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int K = sc.nextInt();
        int X = sc.nextInt();
        if (K * 500 >= X) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
</class>

<class classid="29" nclones="2" nlines="26" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s513737318P.java" startline="1" endline="28" pcid="11307">
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Main main = new Main();
        main.solve();
    }
    public void solve() {
        Scanner scan = new Scanner(new BufferedReader(new InputStreamReader(System.in)));
        int N = scan.nextInt();
        int Z = scan.nextInt();
        int W = scan.nextInt();
        int[] a = new int[N];
        for (int i = 0; i < N; i++) {
            a[i] = scan.nextInt();
        }
        if (N == 1) {
            System.out.println(Math.abs(a[N-1]-W));
            return;
        }
        long answer = Math.max(Math.abs(a[N-1]-W),Math.abs(a[N-1]-a[N-2]));
        System.out.println(answer);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/0/s738552783P.java" startline="1" endline="28" pcid="63353">
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Main main = new Main();
        main.solve();
    }
    public void solve() {
        Scanner scan = new Scanner(new BufferedReader(new InputStreamReader(System.in)));
        int N = scan.nextInt();
        int Z = scan.nextInt();
        int W = scan.nextInt();
        int[] a = new int[N];
        for (int i = 0; i < N; i++) {
            a[i] = scan.nextInt();
        }
        if (N == 1) {
            System.out.println(Math.abs(a[N-1]-W));
            return;
        }
        long answer = Math.max(Math.abs(a[N-1]-W),Math.abs(a[N-1]-a[N-2]));
        System.out.println(answer);
    }
}

</source>
</class>

<class classid="30" nclones="2" nlines="14" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s522928524P.java" startline="1" endline="20" pcid="11624">
import java.util.Arrays;
import java.util.Scanner;

public class Main {

	public static void main(String[] args) {

		Scanner sc = new Scanner(System.in);
		int[]prices = new int[3];
		prices[0] = sc.nextInt();
		prices[1] = sc.nextInt();
		prices[2] = sc.nextInt();
		Arrays.sort(prices);
		System.out.println(prices[0] + prices[1]);

		sc.close();
	}

}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03671_0P.java" startline="1" endline="16" pcid="67493">
import java.util.Arrays;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int[] prices = new int[3];
        prices[0] = sc.nextInt();
        prices[1] = sc.nextInt();
        prices[2] = sc.nextInt();
        Arrays.sort(prices);
        System.out.println(prices[0] + prices[1]);
        sc.close();
    }
}

</source>
</class>

<class classid="31" nclones="3" nlines="14" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s530107246P.java" startline="1" endline="14" pcid="11860">
import java.util.Scanner;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        if (s.charAt(0) == s.charAt(1) || s.charAt(1) == s.charAt(2) || s.charAt(2) == s.charAt(3)) {
            System.out.println("Bad");
        } else {
            System.out.println("Good");
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02993_1P.java" startline="1" endline="15" pcid="67263">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        if (s.charAt(0) == s.charAt(1) || s.charAt(1) == s.charAt(2) || s.charAt(2) == s.charAt(3)) {
            System.out.println("Bad");
        } else {
            System.out.println("Good");
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02993_2P.java" startline="1" endline="15" pcid="57400">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        if (s.charAt(0) == s.charAt(1) || s.charAt(1) == s.charAt(2) || s.charAt(2) == s.charAt(3)) {
            System.out.println("Bad");
        } else {
            System.out.println("Good");
        }
        sc.close();
    }
}

</source>
</class>

<class classid="32" nclones="2" nlines="102" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s565613690P.java" startline="1" endline="115" pcid="12904">
import java.io.*;
import java.math.*;
import java.util.*;

public class Main {
    private static boolean debug = false;
    private static boolean elapsed = false;

    private static PrintWriter _out = new PrintWriter(System.out);
    private static PrintWriter _err = new PrintWriter(System.err);

    private Map<Integer, Node> nodes = new HashMap<>();

    private boolean[][] memo;

    private static class Node {
        int no;
        List<Node> list = new ArrayList<>();
        int color;
        public Node(int no) {
            this.no = no;
        }
    }
    private static class Query {
        int v;
        int d;
        int c;
        public Query(int v, int d, int c) {
            this.v = v;
            this.d = d;
            this.c = c;
        }
    }
    private void solve(Scanner sc) {
        int N = sc.nextInt();
        int M = sc.nextInt();
        for (int i = 0; i < N; ++i) {
            nodes.put(i + 1, new Node(i + 1));
        }
        for (int i = 0; i < M; ++i) {
            int a = sc.nextInt();
            int b = sc.nextInt();
            nodes.get(a).list.add(nodes.get(b));
            nodes.get(b).list.add(nodes.get(a));
        }
        int Q = sc.nextInt();
        List<Query> queryList = new ArrayList<>();
        for (int i = 0; i < Q; ++i) {
            int v = sc.nextInt();
            int d = sc.nextInt();
            int c = sc.nextInt();
            Query query = new Query(v, d, c);
            queryList.add(query);
        }

        Collections.reverse(queryList);

        memo = new boolean[N + 1][11];

        for (Query query : queryList) {
            paint(query.v, query.d, query.c);
        }

        for (int i = 0; i < N; ++i) {
            _out.println(nodes.get(i + 1).color);
        }
    }
    private void paint(int v, int d, int c) {
        if (memo[v][d]) {
            return;
        }
        memo[v][d] = true;
        if (d == 0) {
            nodes.get(v).color = c;
            return;
        }

        Node node = nodes.get(v);
        paint(v, d - 1, c);
        for (Node child : node.list) {
            paint(child.no, d - 1, c);
        }
    }
    private static BigInteger C(long n, long r) {
        BigInteger res = BigInteger.ONE;
        for (long i = n; i > n - r; --i) {
            res = res.multiply(BigInteger.valueOf(i));
        }
        for (long i = r; i > 1; --i) {
            res = res.divide(BigInteger.valueOf(i));
        }
        return res;
    }
    private static BigInteger P(long n, long r) {
        BigInteger res = BigInteger.ONE;
        for (long i = n; i > n - r; --i) {
            res = res.multiply(BigInteger.valueOf(i));
        }
        return res;
    }
    public static void main(String[] args) {
        long S = System.currentTimeMillis();

        Scanner sc = new Scanner(System.in);
        new Main().solve(sc);
        _out.flush();

        long G = System.currentTimeMillis();
        if (elapsed) {
            _err.println((G - S) + "ms");
        }
        _err.flush();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/0/s997922792P.java" startline="1" endline="115" pcid="64231">
import java.io.*;
import java.math.*;
import java.util.*;

public class Main {
    private static boolean debug = false;
    private static boolean elapsed = false;

    private static PrintWriter _out = new PrintWriter(System.out);
    private static PrintWriter _err = new PrintWriter(System.err);

    private Map<Integer, Node> nodes = new HashMap<>();

    private boolean[][] memo;

    private static class Node {
        int no;
        List<Node> list = new ArrayList<>();
        int color;
        public Node(int no) {
            this.no = no;
        }
    }
    private static class Query {
        int v;
        int d;
        int c;
        public Query(int v, int d, int c) {
            this.v = v;
            this.d = d;
            this.c = c;
        }
    }
    private void solve(Scanner sc) {
        int N = sc.nextInt();
        int M = sc.nextInt();
        for (int i = 0; i < N; ++i) {
            nodes.put(i + 1, new Node(i + 1));
        }
        for (int i = 0; i < M; ++i) {
            int a = sc.nextInt();
            int b = sc.nextInt();
            nodes.get(a).list.add(nodes.get(b));
            nodes.get(b).list.add(nodes.get(a));
        }
        int Q = sc.nextInt();
        List<Query> queryList = new ArrayList<>();
        for (int i = 0; i < Q; ++i) {
            int v = sc.nextInt();
            int d = sc.nextInt();
            int c = sc.nextInt();
            Query query = new Query(v, d, c);
            queryList.add(query);
        }

        Collections.reverse(queryList);

        memo = new boolean[N + 1][11];

        for (Query query : queryList) {
            paint(query.v, query.d, query.c);
        }

        for (int i = 0; i < N; ++i) {
            _out.println(nodes.get(i + 1).color);
        }
    }
    private void paint(int v, int d, int c) {
        if (memo[v][d]) {
            return;
        }
        memo[v][d] = true;
        if (d == 0) {
            nodes.get(v).color = c;
            return;
        }

        Node node = nodes.get(v);
        paint(v, d - 1, c);
        for (Node child : node.list) {
            paint(child.no, d - 1, c);
        }
    }
    private static BigInteger C(long n, long r) {
        BigInteger res = BigInteger.ONE;
        for (long i = n; i > n - r; --i) {
            res = res.multiply(BigInteger.valueOf(i));
        }
        for (long i = r; i > 1; --i) {
            res = res.divide(BigInteger.valueOf(i));
        }
        return res;
    }
    private static BigInteger P(long n, long r) {
        BigInteger res = BigInteger.ONE;
        for (long i = n; i > n - r; --i) {
            res = res.multiply(BigInteger.valueOf(i));
        }
        return res;
    }
    public static void main(String[] args) {
        long S = System.currentTimeMillis();

        Scanner sc = new Scanner(System.in);
        new Main().solve(sc);
        _out.flush();

        long G = System.currentTimeMillis();
        if (elapsed) {
            _err.println((G - S) + "ms");
        }
        _err.flush();
    }
}

</source>
</class>

<class classid="33" nclones="2" nlines="165" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s569121349P.java" startline="1" endline="187" pcid="13004">
import java.io.*;
import java.util.*;

public class Main {
  private static int dropBit(int n, int index) {
    int higher = (n >> (index + 1)) << index;
    int lower = (n & ((1 << index) - 1));
    return higher | lower;
  }

  private static int insertBit(int n, int index, int v) {
    int higher = ((n >> index) << (index + 1));
    int lower = (n & ((1 << index) - 1));
    return higher | lower | v;
  }

  private static List<Integer> solveSub(int n, int a, int b) {
    if (n == 1) {
      if (a != b) {
        return Arrays.asList(a, b);
      } else {
        return null;
      }
    }

    for (int i = 0; i < n; i++) {
      int aBit = (a >> i) & 1;
      int bBit = (b >> i) & 1;
      if (aBit != bBit) {
        int aDash = dropBit(a, i);
        int bDash = dropBit(b, i);
        int c = aDash ^ 1;
        List<Integer> path1 = solveSub(n - 1, aDash, c);
        List<Integer> path2 = solveSub(n - 1, c, bDash);
        if (path1 != null && path2 != null) {
          List<Integer> path = new ArrayList<>();
          for (int v : path1) {
            path.add(insertBit(v, i, aBit << i));
          }
          for (int v : path2) {
            path.add(insertBit(v, i, bBit << i));
          }
          return path;
        }
        return null;
      }
    }
    return null;
  }

  private static List<String> solve(int n, int a, int b) {
    List<Integer> path = solveSub(n, a, b);
    if (path == null) {
      return Arrays.asList("NO");
    }
    StringBuffer sb = new StringBuffer();
    sb.append(path.get(0));
    for (int i = 1; i < path.size(); i++) {
      sb.append(" ");
      sb.append(path.get(i));
    }
    return Arrays.asList("YES", sb.toString());
  }

  private static void execute(ContestReader reader, PrintWriter out) {
    int n = reader.nextInt();
    int a = reader.nextInt();
    int b = reader.nextInt();
    for (String line : solve(n, a, b)) {
      out.println(line);
    }
  }

  public static void main(String[] args) {
    ContestReader reader = new ContestReader(System.in);
    PrintWriter out = new PrintWriter(System.out);
    execute(reader, out);
    out.flush();
  }
}

class ContestReader {
  private BufferedReader reader;
  private StringTokenizer tokenizer;

  ContestReader(InputStream in) {
    reader = new BufferedReader(new InputStreamReader(in));
  }

  public String next() {
    while (tokenizer == null || !tokenizer.hasMoreTokens()) {
      try {
        tokenizer = new java.util.StringTokenizer(reader.readLine());
      } catch (Exception e) {
        throw new RuntimeException(e);
      }
    }
    return tokenizer.nextToken();
  }

  public int nextInt() {
    return Integer.parseInt(next());
  }

  public long nextLong() {
    return Long.parseLong(next());
  }

  public double nextDouble() {
    return Double.parseDouble(next());
  }

  public String[] next(int n) {
    String[] array = new String[n];
    for (int i = 0; i < n; i++) {
      array[i] = next();
    }
    return array;
  }

  public int[] nextInt(int n) {
    int[] array = new int[n];
    for (int i = 0; i < n; i++) {
      array[i] = nextInt();
    }
    return array;
  }

  public long[] nextLong(int n) {
    long[] array = new long[n];
    for (int i = 0; i < n; i++) {
      array[i] = nextLong();
    }
    return array;
  }

  public double[] nextDouble(int n) {
    double[] array = new double[n];
    for (int i = 0; i < n; i++) {
      array[i] = nextDouble();
    }
    return array;
  }

  public char[] nextCharArray() {
    return next().toCharArray();
  }

  public int[][] nextInt(int n, int m) {
    int[][] matrix = new int[n][m];
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < m; j++) {
        matrix[i][j] = nextInt();
      }
    }
    return matrix;
  }

  public long[][] nextLong(int n, int m) {
    long[][] matrix = new long[n][m];
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < m; j++) {
        matrix[i][j] = nextLong();
      }
    }
    return matrix;
  }

  public double[][] nextDouble(int n, int m) {
    double[][] matrix = new double[n][m];
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < m; j++) {
        matrix[i][j] = nextDouble();
      }
    }
    return matrix;
  }

  public char[][] nextCharArray(int n) {
    char[][] matrix = new char[n][];
    for (int i = 0; i < n; i++) {
      matrix[i] = next().toCharArray();
    }
    return matrix;
  }
}

</source>
<source file="../preprocessed_Datasplit/test/0/s165832489P.java" startline="1" endline="187" pcid="61399">
import java.io.*;
import java.util.*;

public class Main {
  private static int dropBit(int n, int index) {
    int higher = (n >> (index + 1)) << index;
    int lower = (n & ((1 << index) - 1));
    return higher | lower;
  }

  private static int insertBit(int n, int index, int v) {
    int higher = ((n >> index) << (index + 1));
    int lower = (n & ((1 << index) - 1));
    return higher | lower | v;
  }

  private static List<Integer> solveSub(int n, int a, int b) {
    if (n == 1) {
      if (a != b) {
        return Arrays.asList(a, b);
      } else {
        return null;
      }
    }

    for (int i = 0; i < n; i++) {
      int aBit = (a >> i) & 1;
      int bBit = (b >> i) & 1;
      if (aBit != bBit) {
        int aDash = dropBit(a, i);
        int bDash = dropBit(b, i);
        int c = aDash ^ 1;
        List<Integer> path1 = solveSub(n - 1, aDash, c);
        List<Integer> path2 = solveSub(n - 1, c, bDash);
        if (path1 != null && path2 != null) {
          List<Integer> path = new ArrayList<>();
          for (int v : path1) {
            path.add(insertBit(v, i, aBit << i));
          }
          for (int v : path2) {
            path.add(insertBit(v, i, bBit << i));
          }
          return path;
        }
        return null;
      }
    }
    return null;
  }

  private static List<String> solve(int n, int a, int b) {
    List<Integer> path = solveSub(n, a, b);
    if (path == null) {
      return Arrays.asList("NO");
    }
    StringBuffer sb = new StringBuffer();
    sb.append(path.get(0));
    for (int i = 1; i < path.size(); i++) {
      sb.append(" ");
      sb.append(path.get(i));
    }
    return Arrays.asList("YES", sb.toString());
  }

  private static void execute(ContestReader reader, PrintWriter out) {
    int n = reader.nextInt();
    int a = reader.nextInt();
    int b = reader.nextInt();
    for (String line : solve(n, a, b)) {
      out.println(line);
    }
  }

  public static void main(String[] args) {
    ContestReader reader = new ContestReader(System.in);
    PrintWriter out = new PrintWriter(System.out);
    execute(reader, out);
    out.flush();
  }
}

class ContestReader {
  private BufferedReader reader;
  private StringTokenizer tokenizer;

  ContestReader(InputStream in) {
    reader = new BufferedReader(new InputStreamReader(in));
  }

  public String next() {
    while (tokenizer == null || !tokenizer.hasMoreTokens()) {
      try {
        tokenizer = new java.util.StringTokenizer(reader.readLine());
      } catch (Exception e) {
        throw new RuntimeException(e);
      }
    }
    return tokenizer.nextToken();
  }

  public int nextInt() {
    return Integer.parseInt(next());
  }

  public long nextLong() {
    return Long.parseLong(next());
  }

  public double nextDouble() {
    return Double.parseDouble(next());
  }

  public String[] next(int n) {
    String[] array = new String[n];
    for (int i = 0; i < n; i++) {
      array[i] = next();
    }
    return array;
  }

  public int[] nextInt(int n) {
    int[] array = new int[n];
    for (int i = 0; i < n; i++) {
      array[i] = nextInt();
    }
    return array;
  }

  public long[] nextLong(int n) {
    long[] array = new long[n];
    for (int i = 0; i < n; i++) {
      array[i] = nextLong();
    }
    return array;
  }

  public double[] nextDouble(int n) {
    double[] array = new double[n];
    for (int i = 0; i < n; i++) {
      array[i] = nextDouble();
    }
    return array;
  }

  public char[] nextCharArray() {
    return next().toCharArray();
  }

  public int[][] nextInt(int n, int m) {
    int[][] matrix = new int[n][m];
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < m; j++) {
        matrix[i][j] = nextInt();
      }
    }
    return matrix;
  }

  public long[][] nextLong(int n, int m) {
    long[][] matrix = new long[n][m];
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < m; j++) {
        matrix[i][j] = nextLong();
      }
    }
    return matrix;
  }

  public double[][] nextDouble(int n, int m) {
    double[][] matrix = new double[n][m];
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < m; j++) {
        matrix[i][j] = nextDouble();
      }
    }
    return matrix;
  }

  public char[][] nextCharArray(int n) {
    char[][] matrix = new char[n][];
    for (int i = 0; i < n; i++) {
      matrix[i] = next().toCharArray();
    }
    return matrix;
  }
}

</source>
</class>

<class classid="34" nclones="2" nlines="65" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s577710680P.java" startline="1" endline="64" pcid="13225">
import java.util.*;
public class Main {
	private static Scanner sc;
	public static void main(String[] args) {
		sc = new Scanner(System.in);
		byte a = sc.nextByte();
		for (int l=0; l<a; l++){
			byte gx=sc.nextByte();
			byte gy=sc.nextByte();
			byte No [][] = new byte [gx+1][gy+1];
			byte b = sc.nextByte();
			for (int k=0; k<b; k++){
				byte x1=sc.nextByte();
				byte y1=sc.nextByte();
				byte x2=sc.nextByte();
				byte y2=sc.nextByte();

				if (x1 == x2) {
					No [x1][(Math.max(y1, y2))]+=1;
				}
				else {No[(Math.max(x1,x2))][y1]+=2;}
			}
			int Total[][] = new int [gx+1][gy+1];
			Total[0][0] = 1;
			for (int i=0; i<=gx; i++){
				for (int j=0; j<=gy; j++){
					if (No[i][j] == 0){
						if (i>0 & j>0){
							Total[i][j]=Total[i-1][j]+Total[i][j-1];
						}
						else if (i>0){
							Total[i][j]=Total[i-1][j];
						}
						else if (j>0){
							Total[i][j]=Total[i][j-1];
						}
						else;
					}
					else if(No[i][j] == 1){
						if (i>0){
							Total[i][j]=Total[i-1][j];
							}
						else Total[i][j]=0;
					}
					else if(No[i][j] == 2){
						if (j>0){
						Total[i][j]=Total[i][j-1];
						}
						else Total[i][j]=0;
					}
					else {
						Total[i][j]=0;
					}
				}
			}
			if (Total[gx][gy]==0){
				System.out.println("Miserable Hokusai!");
			}
			else {System.out.println(Total[gx][gy]);
			}
		}
	}
}

</source>
<source file="../preprocessed_Datasplit/test/0/s998246257P.java" startline="1" endline="64" pcid="64233">
import java.util.*;
public class Main {
	private static Scanner sc;
	public static void main(String[] args) {
		sc = new Scanner(System.in);
		byte a = sc.nextByte();
		for (int l=0; l<a; l++){
			byte gx=sc.nextByte();
			byte gy=sc.nextByte();
			byte No [][] = new byte [gx+1][gy+1];
			byte b = sc.nextByte();
			for (int k=0; k<b; k++){
				byte x1=sc.nextByte();
				byte y1=sc.nextByte();
				byte x2=sc.nextByte();
				byte y2=sc.nextByte();

				if (x1 == x2) {
					No [x1][(Math.max(y1, y2))]+=1;
				}
				else {No[(Math.max(x1,x2))][y1]+=2;}
			}
			int Total[][] = new int [gx+1][gy+1];
			Total[0][0] = 1;
			for (int i=0; i<=gx; i++){
				for (int j=0; j<=gy; j++){
					if (No[i][j] == 0){
						if (i>0 & j>0){
							Total[i][j]=Total[i-1][j]+Total[i][j-1];
						}
						else if (i>0){
							Total[i][j]=Total[i-1][j];
						}
						else if (j>0){
							Total[i][j]=Total[i][j-1];
						}
						else;
					}
					else if(No[i][j] == 1){
						if (i>0){
							Total[i][j]=Total[i-1][j];
							}
						else Total[i][j]=0;
					}
					else if(No[i][j] == 2){
						if (j>0){
						Total[i][j]=Total[i][j-1];
						}
						else Total[i][j]=0;
					}
					else {
						Total[i][j]=0;
					}
				}
			}
			if (Total[gx][gy]==0){
				System.out.println("Miserable Hokusai!");
			}
			else {System.out.println(Total[gx][gy]);
			}
		}
	}
}

</source>
</class>

<class classid="35" nclones="6" nlines="16" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s588835222P.java" startline="1" endline="19" pcid="13559">
import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int a=sc.nextInt();
		int b=sc.nextInt();
		int c=sc.nextInt();
		int count=0;
		for(int i=a;i<=b;i++) {
			if(c%i==0) {
				count ++;
			}
		}
		System.out.println(count);
	}
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02398_2P.java" startline="1" endline="19" pcid="67054">
import java.util.Scanner;

public class Main {

  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int a = sc.nextInt();
    int b = sc.nextInt();
    int c = sc.nextInt();
    int count = 0;
    for (int i = a; i <= b; i++) {
      if (c % i == 0) {
        count++;
      }
    }
    System.out.println(count);
  }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02398_4P.java" startline="1" endline="20" pcid="40526">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int c = sc.nextInt();

        int count = 0;
        for (int i = a; i <= b; i++) {
            if (c % i == 0) {
                count++;
            }
        }

        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02398_4P.java" startline="1" endline="18" pcid="32960">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int c = sc.nextInt();
        int count = 0;
        for (int i = a; i <= b; i++) {
            if (c % i == 0) {
                count++;
            }
        }
        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02398_3P.java" startline="1" endline="19" pcid="55606">
import java.util.Scanner;

public class Main {

  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int a = sc.nextInt();
    int b = sc.nextInt();
    int c = sc.nextInt();
    int count = 0;
    for (int i = a; i <= b; i++) {
      if (c % i == 0) {
        count++;
      }
    }
    System.out.println(count);
  }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02398_1P.java" startline="1" endline="19" pcid="55605">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int c = sc.nextInt();
        int count = 0;
        for (int i = a; i <= b; i++) {
            if (c % i == 0) {
                count++;
            }
        }
        System.out.println(count);
    }
}

</source>
</class>

<class classid="36" nclones="2" nlines="40" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s641161060P.java" startline="1" endline="51" pcid="15109">
import java.util.Scanner;
class Main
{
    public static void main(String args[])
    {
	Scanner scan=new Scanner(System.in);
	while(true)
	    {
		int n=scan.nextInt();
		if(n==0)break;
		int s[]=new int[n];
		char x[]=new char[100];
		int f=0;
		String str=scan.next();
		for(int i=0;i<100;i++)
		    {
			x[i]=str.charAt(i);
			if(x[i]=='S')
			    {
				f+=s[i%n]+1;
				s[i%n]=0;
			    }
			else if(x[i]=='M')s[i%n]++;
			else
			    {
				s[i%n]+=f+1;
				f=0;
			    }
		    }
		for(int i=0;i<n;i++)
		    {
			for(int j=n-1;j>i;j--)
			    {
				if(s[j]<s[j-1])
				    {
				int t=s[j];
				s[j]=s[j-1];
				s[j-1]=t;
				    }
			    }
		    }
		for(int i=0;i<n;i++)
		    {
			System.out.print((i!=n)?s[i]+" ":"");
		    }
		System.out.print(f);
		System.out.println();
	    }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/0/s665449186P.java" startline="1" endline="51" pcid="63106">
import java.util.Scanner;
class Main
{
    public static void main(String args[])
    {
	Scanner scan=new Scanner(System.in);
	while(true)
	    {
		int n=scan.nextInt();
		if(n==0)break;
		int s[]=new int[n];
		char x[]=new char[100];
		int f=0;
		String str=scan.next();
		for(int i=0;i<100;i++)
		    {
			x[i]=str.charAt(i);
			if(x[i]=='S')
			    {
				f+=s[i%n]+1;
				s[i%n]=0;
			    }
			else if(x[i]=='M')s[i%n]++;
			else
			    {
				s[i%n]+=f+1;
				f=0;
			    }
		    }
		for(int i=0;i<n;i++)
		    {
			for(int j=n-1;j>i;j--)
			    {
				if(s[j]<s[j-1])
				    {
				int t=s[j];
				s[j]=s[j-1];
				s[j-1]=t;
				    }
			    }
		    }
		for(int i=0;i<n;i++)
		    {
			System.out.print((i!=n)?s[i]+" ":"");
		    }
		System.out.print(f);
		System.out.println();
	    }
    }
}

</source>
</class>

<class classid="37" nclones="2" nlines="66" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s653475569P.java" startline="1" endline="79" pcid="15491">
import java.util.*;
import java.io.*;
import java.lang.*;
class Main{
  public static void main(String args[]){
    int id, l, r,root=0;
    StringBuilder build = new StringBuilder();
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    Node node[] = new Node[n];

    for(int i = 0; i<n; i++){
      node[i] = new Node();
    }

    for(int i = 0; i<n; i++){
      id = sc.nextInt();
      l = sc.nextInt();
      r =  sc.nextInt();
      node[id].left = l;
      node[id].right = r;
      if(l != -1)node[l].parent = id;
      if(r != -1)node[r].parent = id;
    }

    for(int i = 0;i<n; i++){
      if(node[i].parent==-1)root = i;
    }
    setDepth(root,0,node);

    for(int i = 0 ; i < n; i++){
      build.append("node ").append(i).append(": parent = ").append(node[i].parent).append(", sibling = ").append(getSibling(i,node)).append(", degree = ").append(getDegree(i,node)).append(", depth = ").append(node[i].depth).append(", height = ").append(getHeight(i, node));
      if(node[i].parent==-1)build.append(", root\n");
      else if(node[i].right == -1 && node[i].left == -1)build.append(", leaf\n");
      else build.append(", internal node\n");
    }

    System.out.print(build);

  }

  static int getHeight(int u, Node node[]){
    int h1 = 0;
    int h2 = 0;
    if(node[u].right != -1)h1 = getHeight(node[u].right, node) +1;
    if(node[u].left != -1)h2 = getHeight(node[u].left, node) +1;

    return Math.max(h1,h2);
  }

  static void setDepth(int u,int d,Node node_d[]){
    if( u == -1)return;
    node_d[u].depth = d;
    setDepth(node_d[u].right,node_d[u].depth+1, node_d);
    setDepth(node_d[u].left, node_d[u].depth+1, node_d);
  }

  static int getSibling(int u, Node node[]){
    if(node[u].parent == -1)return (-1);
    if(node[node[u].parent].left != u && node[node[u].parent].left!=-1)return node[node[u].parent].left;
    if(node[node[u].parent].right != u && node[node[u].parent].right!=-1)return node[node[u].parent].right;
    return (-1);
  }

  static int getDegree(int u, Node node[]){
    int count=0;
    if(node[u].left != -1)count++;
    if(node[u].right != -1)count++;
    return count;
  }
}

class Node{
  int parent = -1;
  int left = -1;
  int right = -1;
  int depth = 0;
}

</source>
<source file="../preprocessed_Datasplit/test/0/s555688246P.java" startline="1" endline="79" pcid="62711">
import java.util.*;
import java.io.*;
import java.lang.*;
class Main{
  public static void main(String args[]){
    int id, l, r,root=0;
    StringBuilder build = new StringBuilder();
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    Node node[] = new Node[n];

    for(int i = 0; i<n; i++){
      node[i] = new Node();
    }

    for(int i = 0; i<n; i++){
      id = sc.nextInt();
      l = sc.nextInt();
      r =  sc.nextInt();
      node[id].left = l;
      node[id].right = r;
      if(l != -1)node[l].parent = id;
      if(r != -1)node[r].parent = id;
    }

    for(int i = 0;i<n; i++){
      if(node[i].parent==-1)root = i;
    }
    setDepth(root,0,node);

    for(int i = 0 ; i < n; i++){
      build.append("node ").append(i).append(": parent = ").append(node[i].parent).append(", sibling = ").append(getSibling(i,node)).append(", degree = ").append(getDegree(i,node)).append(", depth = ").append(node[i].depth).append(", height = ").append(getHeight(i, node));
      if(node[i].parent==-1)build.append(", root\n");
      else if(node[i].right == -1 && node[i].left == -1)build.append(", leaf\n");
      else build.append(", internal node\n");
    }

    System.out.print(build);

  }

  static int getHeight(int u, Node node[]){
    int h1 = 0;
    int h2 = 0;
    if(node[u].right != -1)h1 = getHeight(node[u].right, node) +1;
    if(node[u].left != -1)h2 = getHeight(node[u].left, node) +1;

    return Math.max(h1,h2);
  }

  static void setDepth(int u,int d,Node node_d[]){
    if( u == -1)return;
    node_d[u].depth = d;
    setDepth(node_d[u].right,node_d[u].depth+1, node_d);
    setDepth(node_d[u].left, node_d[u].depth+1, node_d);
  }

  static int getSibling(int u, Node node[]){
    if(node[u].parent == -1)return (-1);
    if(node[node[u].parent].left != u && node[node[u].parent].left!=-1)return node[node[u].parent].left;
    if(node[node[u].parent].right != u && node[node[u].parent].right!=-1)return node[node[u].parent].right;
    return (-1);
  }

  static int getDegree(int u, Node node[]){
    int count=0;
    if(node[u].left != -1)count++;
    if(node[u].right != -1)count++;
    return count;
  }
}

class Node{
  int parent = -1;
  int left = -1;
  int right = -1;
  int depth = 0;
}

</source>
</class>

<class classid="38" nclones="2" nlines="56" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s667781206P.java" startline="1" endline="69" pcid="15937">
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;

public class Main {

  int H,W;
  int sy,sx;
  int cnt;
  boolean[][] map;
  int[] dy = {-1,0,1,0}, dx = {0,1,0,-1};
  public static void main(String[] args) {
    new Main().run();
  }
  public void run() {

    try(BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
        PrintWriter out = new PrintWriter(System.out) ) {

      String[] lines;
      while(true) {
        lines = in.readLine().split(" ");
        W = Integer.parseInt(lines[0]);
        H = Integer.parseInt(lines[1]);

        if( W==0 && H==0) break;

        map = new boolean[H][W];

        String line;
        for(int y=0; y<H; y++) {
          char ch;
          line = in.readLine();
          for(int x=0; x<W; x++) {
            ch = line.charAt(x);
            map[y][x] = ch == '#' ? false : true;
            if(ch == '@') {
              sy = y; sx = x;
            }
          }
        }

        cnt = 0;
        dfs(sy,sx);
        out.println(cnt);
      }

      out.flush();
    }
    catch(IOException e) {
      System.err.println(e);
    }
  }

  private void dfs(int y, int x) {
    map[y][x] = false;
    cnt++;

    for(int i=0; i<4; i++) {
      int ny = y + dy[i], nx = x + dx[i];
      if(0 <= ny && ny < H && 0 <= nx && nx < W && map[ny][nx]) {
        dfs(ny,nx);
      }
    }
    return;
  }
}

</source>
<source file="../preprocessed_Datasplit/test/0/s788167550P.java" startline="1" endline="69" pcid="63519">
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;

public class Main {

  int H,W;
  int sy,sx;
  int cnt;
  boolean[][] map;
  int[] dy = {-1,0,1,0}, dx = {0,1,0,-1};
  public static void main(String[] args) {
    new Main().run();
  }
  public void run() {

    try(BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
        PrintWriter out = new PrintWriter(System.out) ) {

      String[] lines;
      while(true) {
        lines = in.readLine().split(" ");
        W = Integer.parseInt(lines[0]);
        H = Integer.parseInt(lines[1]);

        if( W==0 && H==0) break;

        map = new boolean[H][W];

        String line;
        for(int y=0; y<H; y++) {
          char ch;
          line = in.readLine();
          for(int x=0; x<W; x++) {
            ch = line.charAt(x);
            map[y][x] = ch == '#' ? false : true;
            if(ch == '@') {
              sy = y; sx = x;
            }
          }
        }

        cnt = 0;
        dfs(sy,sx);
        out.println(cnt);
      }

      out.flush();
    }
    catch(IOException e) {
      System.err.println(e);
    }
  }

  private void dfs(int y, int x) {
    map[y][x] = false;
    cnt++;

    for(int i=0; i<4; i++) {
      int ny = y + dy[i], nx = x + dx[i];
      if(0 <= ny && ny < H && 0 <= nx && nx < W && map[ny][nx]) {
        dfs(ny,nx);
      }
    }
    return;
  }
}

</source>
</class>

<class classid="39" nclones="2" nlines="23" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s677108130P.java" startline="1" endline="26" pcid="16239">
import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		Scanner stdIn = new Scanner(System.in);
		int n = stdIn.nextInt();
		int[] a = new int[n];
		int min = Integer.MAX_VALUE;
		for(int i=0;i<n;i++){
			a[i] = stdIn.nextInt();
			if(min>a[i]) min = a[i];
		}
		for(int i=1;i<=min;i++){
			boolean flag = true;
			for(int j=0;j<n;j++){
				if(a[j]%i!=0){
					flag = false;
					break;
				}
			}
			if(flag) System.out.println(i);
		}
	}
}

</source>
<source file="../preprocessed_Datasplit/test/0/s356499693P.java" startline="1" endline="26" pcid="62026">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner stdIn = new Scanner(System.in);
        int n = stdIn.nextInt();
        int[] a = new int[n];
        int min = Integer.MAX_VALUE;
        for(int i=0;i<n;i++){
            a[i] = stdIn.nextInt();
            if(min>a[i]) min = a[i];
        }
        for(int i=1;i<=min;i++){
            boolean flag = true;
            for(int j=0;j<n;j++){
                if(a[j]%i!=0){
                    flag = false;
                    break;
                }
            }
            if(flag) System.out.println(i);
        }
    }
}

</source>
</class>

<class classid="40" nclones="2" nlines="25" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s685662628P.java" startline="1" endline="26" pcid="16485">
import java.util.Scanner;
public class Main {
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		int L=sc.nextInt();
		int A=sc.nextInt();
		int B=sc.nextInt();
		int C=sc.nextInt();
		int D=sc.nextInt();
		int kokugoday=A/C;
		int sansuday=B/D;
		if(A%C!=0){
			kokugoday++;
		}
		if(B%D!=0){
			sansuday++;
		}
		if(kokugoday<sansuday){
			System.out.println(L-sansuday);
		}
		else{
			System.out.println(L-kokugoday);
		}
	}
}

</source>
<source file="../preprocessed_Datasplit/test/0/s170645507P.java" startline="1" endline="26" pcid="61415">
import java.util.Scanner;
public class Main {
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		int L=sc.nextInt();
		int A=sc.nextInt();
		int B=sc.nextInt();
		int C=sc.nextInt();
		int D=sc.nextInt();
		int kokugoday=A/C;
		int sansuday=B/D;
		if(A%C!=0){
			kokugoday++;
		}
		if(B%D!=0){
			sansuday++;
		}
		if(kokugoday<sansuday){
			System.out.println(L-sansuday);
		}
		else{
			System.out.println(L-kokugoday);
		}
	}
}

</source>
</class>

<class classid="41" nclones="2" nlines="165" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s691517963P.java" startline="1" endline="209" pcid="16703">
import java.io.IOException;
import java.io.InputStream;
import java.io.PrintStream;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.NoSuchElementException;
import java.util.PriorityQueue;
import java.util.Queue;
public class Main {
    private static final PrintStream ps     = System.out;
    private static final InputStream IS     = System.in;
    private static final byte[]      BUFFER = new byte[1024];
    private static int               ptr    = 0;
    private static int               buflen = 0;

    public static void main(String[] args) {

        int n = ni();
        @SuppressWarnings("unchecked")
        List<Edge>[] edges = new List[n];
        for (int i = 0; i < edges.length; i++) {
            edges[i] = new ArrayList<Edge>();
        }
        for (int i = 0; i < n; i++) {
            int u = ni();
            int m = ni();
            for (int j = 0; j < m; j++) {
                edges[i].add(new Edge(u, ni(), ni()));
            }
        }
        int[] d = dijkstra(n, edges, 0);

        for (int i = 0; i < n; i++) {
            System.out.println(i + " " + d[i]);
        }
    }
    static int[] dijkstra(int n, List<Edge>[] edges, int s) {
        int[] distance = new int[n];

        Arrays.fill(distance, Integer.MAX_VALUE);
        distance[s] = 0;

        Queue<Edge> q = new PriorityQueue<Edge>();
        q.add(new Edge(s, s, 0));

        while (!q.isEmpty()) {
            Edge e = q.poll();
            if (distance[e.target] < e.cost) {
                continue;
            }

            for (Edge v : edges[e.target]) {
                if (distance[v.target] > distance[e.target] + v.cost) {
                    distance[v.target] = distance[e.target] + v.cost;
                    q.add(new Edge(e.target, v.target, distance[v.target]));
                }
            }
        }

        return distance;
    }

    static class Edge implements Comparable<Edge> {
        public int source = 0;
        public int target = 0;
        public int cost = 0;

        public Edge(int source, int target, int cost) {
            this.source = source;
            this.target = target;
            this.cost = cost;
        }

        @Override
        public int compareTo(Edge o) {
            return this.cost - o.cost;
        }

        @Override
        public String toString() {
            return "source = " + source + ", target = " + target + ", cost = " + cost;
        }
    }

    private static boolean hasNextByte() {
        if (ptr < buflen)
            return true;
        else {
            ptr = 0;
            try {
                buflen = IS.read(BUFFER);
            } catch (IOException e) {
                e.printStackTrace();
            }
            if (buflen <= 0)
                return false;
        }
        return true;
    }

    private static int readByte() {
        if (hasNextByte())
            return BUFFER[ptr++];
        else
            return -1;
    }

    private static boolean isPrintableChar(int c) {
        return 33 <= c && c <= 126;
    }

    public static boolean hasNext() {
        while (hasNextByte() && !isPrintableChar(BUFFER[ptr]))
            ptr++;
        return hasNextByte();
    }

    public static String n() {
        if (!hasNext())
            throw new NoSuchElementException();
        StringBuilder sb = new StringBuilder();
        int b = readByte();
        while (isPrintableChar(b)) {
            sb.appendCodePoint(b);
            b = readByte();
        }
        return sb.toString();
    }

    public static long nl() {
        if (!hasNext())
            throw new NoSuchElementException();
        long n = 0;
        boolean minus = false;
        int b = readByte();
        if (b == '-') {
            minus = true;
            b = readByte();
        }
        if (b < '0' || '9' < b)
            throw new NumberFormatException();
        while (true) {
            if ('0' <= b && b <= '9') {
                n *= 10;
                n += b - '0';
            } else if (b == -1 || !isPrintableChar(b))
                return minus ? -n : n;
            else
                throw new NumberFormatException();
            b = readByte();
        }
    }

    public static int ni() {
        long nl = nl();
        if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE)
            throw new NumberFormatException();
        return (int) nl;
    }

    public static double nextDouble() {
        return Double.parseDouble(n());
    }

    private static int[] nia(int n) {
        int[] a = new int[n];
        for (int i = 0; i < n; i++)
            a[i] = ni();
        return a;
    }

    private static long[] nla(int n) {
        long[] a = new long[n];
        for (int i = 0; i < n; i++)
            a[i] = nl();
        return a;
    }

    private static String[] na(int n) {
        String[] a = new String[n];
        for (int i = 0; i < n; i++)
            a[i] = n();
        return a;
    }

    private static int[][] nia2(int n, int m) {
        int[][] a = new int[n][m];
        for (int i = 0; i < n; i++)
            a[i] = nia(m);
        return a;
    }

    private static long[][] nla2(int n, int m) {
        long[][] a = new long[n][m];
        for (int i = 0; i < n; i++)
            a[i] = nla(m);
        return a;
    }

    private static char[][] nca2(int n) {
        char[][] a = new char[n][];
        for (int i = 0; i < n; i++)
            a[i] = n().toCharArray();
        return a;

    }
}

</source>
<source file="../preprocessed_Datasplit/test/0/s049532884P.java" startline="1" endline="209" pcid="61016">
import java.io.IOException;
import java.io.InputStream;
import java.io.PrintStream;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.NoSuchElementException;
import java.util.PriorityQueue;
import java.util.Queue;
public class Main {
    private static final PrintStream ps     = System.out;
    private static final InputStream IS     = System.in;
    private static final byte[]      BUFFER = new byte[1024];
    private static int               ptr    = 0;
    private static int               buflen = 0;

    public static void main(String[] args) {

        int n = ni();
        @SuppressWarnings("unchecked")
        List<Edge>[] edges = new List[n];
        for (int i = 0; i < edges.length; i++) {
            edges[i] = new ArrayList<Edge>();
        }
        for (int i = 0; i < n; i++) {
            int u = ni();
            int m = ni();
            for (int j = 0; j < m; j++) {
                edges[i].add(new Edge(u, ni(), ni()));
            }
        }
        int[] d = dijkstra(n, edges, 0);

        for (int i = 0; i < n; i++) {
            System.out.println(i + " " + d[i]);
        }
    }
    static int[] dijkstra(int n, List<Edge>[] edges, int s) {
        int[] distance = new int[n];

        Arrays.fill(distance, Integer.MAX_VALUE);
        distance[s] = 0;

        Queue<Edge> q = new PriorityQueue<Edge>();
        q.add(new Edge(s, s, 0));

        while (!q.isEmpty()) {
            Edge e = q.poll();
            if (distance[e.target] < e.cost) {
                continue;
            }

            for (Edge v : edges[e.target]) {
                if (distance[v.target] > distance[e.target] + v.cost) {
                    distance[v.target] = distance[e.target] + v.cost;
                    q.add(new Edge(e.target, v.target, distance[v.target]));
                }
            }
        }

        return distance;
    }

    static class Edge implements Comparable<Edge> {
        public int source = 0;
        public int target = 0;
        public int cost = 0;

        public Edge(int source, int target, int cost) {
            this.source = source;
            this.target = target;
            this.cost = cost;
        }

        @Override
        public int compareTo(Edge o) {
            return this.cost - o.cost;
        }

        @Override
        public String toString() {
            return "source = " + source + ", target = " + target + ", cost = " + cost;
        }
    }

    private static boolean hasNextByte() {
        if (ptr < buflen)
            return true;
        else {
            ptr = 0;
            try {
                buflen = IS.read(BUFFER);
            } catch (IOException e) {
                e.printStackTrace();
            }
            if (buflen <= 0)
                return false;
        }
        return true;
    }

    private static int readByte() {
        if (hasNextByte())
            return BUFFER[ptr++];
        else
            return -1;
    }

    private static boolean isPrintableChar(int c) {
        return 33 <= c && c <= 126;
    }

    public static boolean hasNext() {
        while (hasNextByte() && !isPrintableChar(BUFFER[ptr]))
            ptr++;
        return hasNextByte();
    }

    public static String n() {
        if (!hasNext())
            throw new NoSuchElementException();
        StringBuilder sb = new StringBuilder();
        int b = readByte();
        while (isPrintableChar(b)) {
            sb.appendCodePoint(b);
            b = readByte();
        }
        return sb.toString();
    }

    public static long nl() {
        if (!hasNext())
            throw new NoSuchElementException();
        long n = 0;
        boolean minus = false;
        int b = readByte();
        if (b == '-') {
            minus = true;
            b = readByte();
        }
        if (b < '0' || '9' < b)
            throw new NumberFormatException();
        while (true) {
            if ('0' <= b && b <= '9') {
                n *= 10;
                n += b - '0';
            } else if (b == -1 || !isPrintableChar(b))
                return minus ? -n : n;
            else
                throw new NumberFormatException();
            b = readByte();
        }
    }

    public static int ni() {
        long nl = nl();
        if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE)
            throw new NumberFormatException();
        return (int) nl;
    }

    public static double nextDouble() {
        return Double.parseDouble(n());
    }

    private static int[] nia(int n) {
        int[] a = new int[n];
        for (int i = 0; i < n; i++)
            a[i] = ni();
        return a;
    }

    private static long[] nla(int n) {
        long[] a = new long[n];
        for (int i = 0; i < n; i++)
            a[i] = nl();
        return a;
    }

    private static String[] na(int n) {
        String[] a = new String[n];
        for (int i = 0; i < n; i++)
            a[i] = n();
        return a;
    }

    private static int[][] nia2(int n, int m) {
        int[][] a = new int[n][m];
        for (int i = 0; i < n; i++)
            a[i] = nia(m);
        return a;
    }

    private static long[][] nla2(int n, int m) {
        long[][] a = new long[n][m];
        for (int i = 0; i < n; i++)
            a[i] = nla(m);
        return a;
    }

    private static char[][] nca2(int n) {
        char[][] a = new char[n][];
        for (int i = 0; i < n; i++)
            a[i] = n().toCharArray();
        return a;

    }
}

</source>
</class>

<class classid="42" nclones="8" nlines="16" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s715594277P.java" startline="1" endline="21" pcid="17395">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
    	Scanner sc = new Scanner(System.in);
    	int A = sc.nextInt();
    	int B = sc.nextInt();
    	int C = sc.nextInt();

    	if( A == B && B == C ) {
    		System.out.println("Yes");
    	}
    	else {
    		System.out.println("No");
    	}

    	sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03079_0P.java" startline="1" endline="19" pcid="65595">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();

        if (A == B && B == C) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03079_2P.java" startline="1" endline="18" pcid="57705">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();

        if (A == B && B == C) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03079_4P.java" startline="1" endline="19" pcid="42657">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();

        if (A == B && B == C) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03079_1P.java" startline="1" endline="18" pcid="57704">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();

        if (A == B && B == C) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03079_2P.java" startline="1" endline="19" pcid="42654">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();

        if (A == B && B == C) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03079_3P.java" startline="1" endline="19" pcid="42656">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();

        if (A == B && B == C) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03079_1P.java" startline="1" endline="19" pcid="42655">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();

        if (A == B && B == C) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }

        sc.close();
    }
}

</source>
</class>

<class classid="43" nclones="2" nlines="36" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s724292859P.java" startline="1" endline="43" pcid="17676">
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);

		int n = sc.nextInt();
		ArrayList<List<Integer>> A = new ArrayList<>();
		for (int i = 0; i < n; i++) {
			ArrayList<Integer> B = new ArrayList<>();
			A.add(B);
		}
		int q = sc.nextInt();

		for (int i = 0; i < q; i++) {
			int x = sc.nextInt();
			if (x == 0) {
				int y = sc.nextInt();
				int z = sc.nextInt();
				A.get(y).add(z);

			} else if (x == 1) {
				int y = sc.nextInt();
				if (A.get(y).size() != 0) {
					System.out.println(A.get(y).get(A.get(y).size() - 1));
				}

			} else if (x == 2) {
				int y = sc.nextInt();
				if (A.get(y).size() != 0) {
					A.get(y).remove(A.get(y).size() - 1);
				}
			}
		}
		sc.close();

	}

}

</source>
<source file="../preprocessed_Datasplit/test/0/s143124304P.java" startline="1" endline="38" pcid="61324">
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		ArrayList<List<Integer>> A = new ArrayList<>();
		for (int i = 0; i < n; i++) {
			ArrayList<Integer> B = new ArrayList<>();
			A.add(B);
		}
		int q = sc.nextInt();
		for (int i = 0; i < q; i++) {
			int x = sc.nextInt();
			if (x == 0) {
				int y = sc.nextInt();
				int z = sc.nextInt();
				A.get(y).add(z);
			} else if (x == 1) {
				int y = sc.nextInt();
				if (A.get(y).size() != 0) {
					System.out.println(A.get(y).get(A.get(y).size() - 1));
				}
			} else if (x == 2) {
				int y = sc.nextInt();
				if (A.get(y).size() != 0) {
					A.get(y).remove(A.get(y).size() - 1);
				}
			}
		}
		sc.close();

	}

}

</source>
</class>

<class classid="44" nclones="2" nlines="49" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s742846647P.java" startline="1" endline="63" pcid="18206">
import java.util.Scanner;

public class Main {

	public static class BIT {
		int[] dat;

		public BIT(int n){
			dat = new int[n + 1];
		}

		public void add(int k, int a){
			for(int i = k + 1; i < dat.length; i += i & -i){
				dat[i] += a;
			}
		}

		public int sum(int s, int t){
			if(s > 0) return sum(0, t) - sum(0, s);

			int ret = 0;
			for(int i = t; i > 0; i -= i & -i) {
				ret += dat[i];
			}
			return ret;
		}

		public int get(int k){
			int p = Integer.highestOneBit(dat.length - 1);
			for(int q = p; q > 0; q >>= 1, p |= q){
				if( p >= dat.length || k < dat[p]) p ^= q;
				else k -= dat[p];
			}
			return p;
		}
	}

	public static void main(String[] args){
		Scanner sc = new Scanner(System.in);

		while(true){
			final int n = sc.nextInt();
			final int k = sc.nextInt();

			if(n == 0 && k == 0){
				break;
			}

			BIT bit = new BIT(n);
			for(int i = 0; i < n; i++){
				bit.add(i, sc.nextInt());
			}

			int max = Integer.MIN_VALUE;
			for(int start = 0; start < n - k + 1; start++){
				max = Math.max(max, bit.sum(start, start + k));
			}

		System.out.println(max);
		}
	}
}

</source>
<source file="../preprocessed_Datasplit/test/0/s856221251P.java" startline="1" endline="63" pcid="63746">
import java.util.Scanner;

public class Main {

		public static class BIT{
				int[] dat;

				public BIT(int n){
						dat = new int[n + 1];
				}

				public void add(int k, int a){
						for(int i = k + 1; i < dat.length; i += i & -i){
								dat[i] += a;
						}
				}

				public int sum(int s, int t){
						if(s > 0) return sum(0, t) - sum(0, s);

						int ret = 0;
						for(int i = t; i > 0; i -= i & -i) {
								ret += dat[i];
						}
						return ret;
				}

				public int get(int k){
						int p = Integer.highestOneBit(dat.length - 1);
						for(int q = p; q > 0; q >>= 1, p |= q){
								if( p >= dat.length || k < dat[p]) p ^= q;
								else k -= dat[p];
						}
						return p;
				}
		}

		public static void main(String[] args){
				Scanner sc = new Scanner(System.in);

				while(true){
						final int n = sc.nextInt();
						final int k = sc.nextInt();

						if(n == 0 && k == 0){
								break;
						}

						BIT bit = new BIT(n);
						for(int i = 0; i < n; i++){
								bit.add(i, sc.nextInt());
						}

						int max = Integer.MIN_VALUE;
						for(int start = 0; start < n - k + 1; start++){
								max = Math.max(max, bit.sum(start, start + k));
						}

						System.out.println(max);
				}
		}
}

</source>
</class>

<class classid="45" nclones="2" nlines="39" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s744183787P.java" startline="1" endline="42" pcid="18239">
import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		try(Scanner sc = new Scanner(System.in)){
			while(sc.hasNext()) {
				int m=sc.nextInt();
				int n=sc.nextInt();
				if(m+n==0) break;
				int[] w=new int[n+1];
				int max=0;
				int sum=0;
				for(int i=0; i<n; i++) {
					w[i]=sc.nextInt();
					max=Math.max(w[i], max);
					sum+=w[i];
				}
				int mini=0;
				for(int i=max; i<=sum; i++) {
					int h=1;
					int[] book=new int[n+1];
					int end=0;
					for(int j=0; j<n; j++) {
						if(book[h]+w[j]>i) {
							h++;
							if(h>m) {
								end=1;
								break;
							}
						}
						book[h]+=w[j];
					}
					mini=i;
					if(end==0) break;
				}
				System.out.println(mini);

			}
		}
	}
}

</source>
<source file="../preprocessed_Datasplit/test/0/s272561156P.java" startline="1" endline="42" pcid="61748">
import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		try(Scanner sc = new Scanner(System.in)){
			while(sc.hasNext()) {
				int m=sc.nextInt();
				int n=sc.nextInt();
				if(m+n==0) break;
				int[] w=new int[n+1];
				int max=0;
				int sum=0;
				for(int i=0; i<n; i++) {
					w[i]=sc.nextInt();
					max=Math.max(w[i], max);
					sum+=w[i];
				}
				int mini=0;
				for(int i=max; i<=sum; i++) {
					int h=1;
					int[] book=new int[n+1];
					int end=0;
					for(int j=0; j<n; j++) {
						if(book[h]+w[j]>i) {
							h++;
							if(h>m) {
								end=1;
								break;
							}
						}
						book[h]+=w[j];
					}
					mini=i;
					if(end==0) break;
				}
				System.out.println(mini);

			}
		}
	}
}

</source>
</class>

<class classid="46" nclones="2" nlines="40" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s769338576P.java" startline="1" endline="46" pcid="18989">
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.math.MathContext;
import java.text.BreakIterator;
import java.util.Arrays;
import java.util.StringTokenizer;

public class Main {

	static int n, m;
	static char[][] a;
	static boolean[][] ok;
	static int[] dx = new int[] { -1, 0, 1, 0, -1, -1, 1, 1 };
	static int[] dy = new int[] { 0, 1, 0, -1, -1, 1, -1, 1 };
	static int A, B, C;

	public static void main(String[] args) throws IOException {

		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		PrintWriter pw = new PrintWriter(System.out);
		StringTokenizer st = new StringTokenizer(br.readLine());
		int n = Integer.parseInt(st.nextToken());
		int m = Integer.parseInt(st.nextToken());
		if (n % 2 == 1) {
			for (int i = 1; i <= m; i++) {
				pw.println(i + " " + (n - i + 1));
			}
		} else {
			int odd = (m + 1) / 2;
			for (int i = 1; i <= odd ; i++) {
				pw.println(i + " " + (n - i + 1));
			}
			for (int i = odd+1; i <= m; i++) {
				pw.println(i + " " + (n - i));
			}
		}

		pw.flush();
	}

}

</source>
<source file="../preprocessed_Datasplit/test/0/s330022854P.java" startline="1" endline="46" pcid="61935">
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.math.MathContext;
import java.text.BreakIterator;
import java.util.Arrays;
import java.util.StringTokenizer;

public class Main{

	static int n, m;
	static char[][] a;
	static boolean[][] ok;
	static int[] dx = new int[] { -1, 0, 1, 0, -1, -1, 1, 1 };
	static int[] dy = new int[] { 0, 1, 0, -1, -1, 1, -1, 1 };
	static int A, B, C;

	public static void main(String[] args) throws IOException {

		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		PrintWriter pw = new PrintWriter(System.out);
		StringTokenizer st = new StringTokenizer(br.readLine());
		int n = Integer.parseInt(st.nextToken());
		int m = Integer.parseInt(st.nextToken());
		if (n % 2 == 1) {
			for (int i = 1; i <= m; i++) {
				pw.println(i + " " + (n - i + 1));
			}
		} else {
			int odd = (m + 1) / 2;
			for (int i = 1; i <= odd ; i++) {
				pw.println(i + " " + (n - i + 1));
			}
			for (int i = odd+1; i <= m; i++) {
				pw.println(i + " " + (n - i));
			}
		}

		pw.flush();
	}

}

</source>
</class>

<class classid="47" nclones="2" nlines="99" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s782975474P.java" startline="1" endline="104" pcid="19402">
import java.util.Arrays;
import java.util.HashMap;
import java.util.Scanner;

class Team implements Comparable<Team>{
	int id;
	int syo;
	int slove;
	int penalty;
	Team(int a,int b,int c,int d){
		id=a;
		syo=b;
		slove=c;
		penalty=d;
	}
	@Override
	public int compareTo(Team o) {
		if(o.slove < this.slove){
			return -1;
		}
		else if(o.slove > this.slove){
			return 1;
		}
		else{
			if(o.penalty > this.penalty){
				return -1;
			}
			else if(o.penalty < this.penalty){
				return 1;
			}
			else{
				if(o.id > this.id){
					return -1;
				}
				else if(o.id < this.id){
					return 1;
				}
			}
		}
		return 0;
	}
}

public class Main {
	public static void main(String[] args) {
		new Main().run();
	}
	void run(){
		Scanner sc=new Scanner(System.in);
		while(true){
			int n=sc.nextInt();
			if(n==0) break;
			Team t[]=new Team[n];
			for(int i=0; i<n; i++){
				t[i]=new Team(sc.nextInt(),sc.nextInt(),sc.nextInt(),sc.nextInt());
			}
			Arrays.sort(t);

			int senbatsu[]=new int[n];
			HashMap<Integer, Integer> h=new HashMap<Integer, Integer>();
			int count=0;
			for(int i=0; i<n; i++){
				if(count<10){
					if(!h.containsKey(t[i].syo)){
						h.put(t[i].syo, 1);
						senbatsu[count]=t[i].id;
						count++;
					}
					else if(h.get(t[i].syo) < 3){
						int temp=h.get(t[i].syo);
						h.put(t[i].syo, temp+1);
						senbatsu[count]=t[i].id;
						count++;
					}
				}
				else if(count<20){
					if(!h.containsKey(t[i].syo)){
						h.put(t[i].syo, 1);
						senbatsu[count]=t[i].id;
						count++;
					}
					else if(h.get(t[i].syo) < 2){
						int temp=h.get(t[i].syo);
						h.put(t[i].syo, temp+1);
						senbatsu[count]=t[i].id;
						count++;
					}
				}
				else if(count<26){
					if(!h.containsKey(t[i].syo)){
						h.put(t[i].syo, 1);
						senbatsu[count]=t[i].id;
						count++;
					}
				}
			}
			for(int i=0; i<count; i++){
				System.out.println(senbatsu[i]);
			}
		}
	}

}

</source>
<source file="../preprocessed_Datasplit/test/0/s548942549P.java" startline="1" endline="104" pcid="62694">
import java.util.Arrays;
import java.util.HashMap;
import java.util.Scanner;

class Team implements Comparable<Team>{
	int id;
	int syo;
	int slove;
	int penalty;
	Team(int a,int b,int c,int d){
		id=a;
		syo=b;
		slove=c;
		penalty=d;
	}
	@Override
	public int compareTo(Team o) {
		if(o.slove < this.slove){
			return -1;
		}
		else if(o.slove > this.slove){
			return 1;
		}
		else{
			if(o.penalty > this.penalty){
				return -1;
			}
			else if(o.penalty < this.penalty){
				return 1;
			}
			else{
				if(o.id > this.id){
					return -1;
				}
				else if(o.id < this.id){
					return 1;
				}
			}
		}
		return 0;
	}
}

public class Main {
	public static void main(String[] args) {
		new Main().run();
	}
	void run(){
		Scanner sc=new Scanner(System.in);
		while(true){
			int n=sc.nextInt();
			if(n==0) break;
			Team t[]=new Team[n];
			for(int i=0; i<n; i++){
				t[i]=new Team(sc.nextInt(),sc.nextInt(),sc.nextInt(),sc.nextInt());
			}
			Arrays.sort(t);

			int senbatsu[]=new int[n];
			HashMap<Integer, Integer> h=new HashMap<Integer, Integer>();
			int count=0;
			for(int i=0; i<n; i++){
				if(count<10){
					if(!h.containsKey(t[i].syo)){
						h.put(t[i].syo, 1);
						senbatsu[count]=t[i].id;
						count++;
					}
					else if(h.get(t[i].syo) < 3){
						int temp=h.get(t[i].syo);
						h.put(t[i].syo, temp+1);
						senbatsu[count]=t[i].id;
						count++;
					}
				}
				else if(count<20){
					if(!h.containsKey(t[i].syo)){
						h.put(t[i].syo, 1);
						senbatsu[count]=t[i].id;
						count++;
					}
					else if(h.get(t[i].syo) < 2){
						int temp=h.get(t[i].syo);
						h.put(t[i].syo, temp+1);
						senbatsu[count]=t[i].id;
						count++;
					}
				}
				else if(count<26){
					if(!h.containsKey(t[i].syo)){
						h.put(t[i].syo, 1);
						senbatsu[count]=t[i].id;
						count++;
					}
				}
			}
			for(int i=0; i<count; i++){
				System.out.println(senbatsu[i]);
			}
		}
	}

}

</source>
</class>

<class classid="48" nclones="2" nlines="20" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s803034229P.java" startline="1" endline="24" pcid="20006">
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class Main {
	public static void main(String[] args){
		Map<String,Integer> sales = new HashMap<>();
		Scanner sc = new Scanner(System.in);

		int a = sc.nextInt();

		for(int i = 0; i < a;i++){
			int x= sc.nextInt();
			String key = sc.next();
			if(x ==0){
				sales.put(key,sc.nextInt());
			}else{
				System.out.println(sales.get(key));

			}
		}
	}
}

</source>
<source file="../preprocessed_Datasplit/test/0/s888664655P.java" startline="1" endline="24" pcid="63863">
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class Main {
	public static void main(String[] args){
		Map<String,Integer> sales = new HashMap<>();
		Scanner sc = new Scanner(System.in);

		int a = sc.nextInt();

		for(int i = 0; i < a;i++){
			int x= sc.nextInt();
			String key = sc.next();
			if(x ==0){
				sales.put(key,sc.nextInt());
			}else{
				System.out.println(sales.get(key));

			}
		}
	}
}

</source>
</class>

<class classid="49" nclones="2" nlines="26" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s836953497P.java" startline="1" endline="32" pcid="20591">
import java.io.IOException;
import java.io.BufferedReader;
import java.io.InputStreamReader;

class Main{
    public static void main(String[] args) throws IOException{
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

        int n = Integer.parseInt(br.readLine());
        String[] input = br.readLine().split(" ");

        int max = 0;
        boolean onCheck = false;
        int cl = 1;

        for(String x : input){
            if(x.equals("1")){
                cl++;
                onCheck = true;
            }else if(onCheck){
                max = Math.max(cl,max);
                cl = 1;
                onCheck = false;
            }
        }

        max = Math.max(cl,max);

        System.out.println(max);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/0/s150255228P.java" startline="1" endline="32" pcid="61348">
import java.io.IOException;
import java.io.BufferedReader;
import java.io.InputStreamReader;

class Main{
    public static void main(String[] args) throws IOException{
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

        int n = Integer.parseInt(br.readLine());
        String[] input = br.readLine().split(" ");

        int max = 0;
        boolean onCheck = false;
        int cl = 1;

        for(String x : input){
            if(x.equals("1")){
                cl++;
                onCheck = true;
            }else if(onCheck){
                max = Math.max(cl,max);
                cl = 1;
                onCheck = false;
            }
        }

        max = Math.max(cl,max);

        System.out.println(max);
    }
}

</source>
</class>

<class classid="50" nclones="2" nlines="111" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s977055145P.java" startline="1" endline="132" pcid="20698">
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;

public class Main {
	static final int N = 4;
	static final int N2 = 16;
	static final int LIMIT = 100;

	static final int[] dx = {0, -1, 0, 1};
	static final int[] dy = {1, 0, -1, 0};
	static final char[] dir = {'r','u','l','d'};
	static int[][] MDT = new int[N2][N2];

	static Puzzle state;
	static int limit;
	static int[] path = new int[LIMIT];
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		for(int i = 0; i < N2 ;i++){
			for(int j = 0; j < N2 ; j++){
				MDT[i][j] = Math.abs(i/N - j/N) + Math.abs(i%N - j%N);
			}
		}

		Puzzle in = new Puzzle();

		for(int i = 0; i < N ; i++){
			String[] tmpArray = br.readLine().split(" ");

			for(int j = 0; j < N; j++){
				in.f[i*N + j] = Integer.parseInt(tmpArray[j]);
				if(in.f[i*N + j] == 0 ){
					in.f[i*N + j] = N2;
					in.space = i*N + j;
				}
			}
		}
		String ans = ID(in);
		System.out.println(ans.length());
	}

	static int getAllMD(Puzzle pz){
		int sum = 0;
		for(int i = 0; i < N2 ;i++){
			if(pz.f[i] == N2) continue;
			sum += MDT[i][pz.f[i] - 1];
		}
		return sum;
	}

	static boolean isSolved() {
		for(int i = 0; i < N2; i++){
			if(state.f[i] != i + 1){
				return false;
			}
		}
		return true;
	}

	static boolean dfs(int depth, int prev){
		if(state.MD == 0){
			return true;
		}

		if( depth + state.MD > limit){
			return false;
		}

		int sx = state.space/N;
		int sy = state.space%N;
		Puzzle tmp;

		for(int r = 0; r < 4; r++){
			int tx = sx + dx[r];
			int ty = sy + dy[r];
			if(tx < 0 || ty < 0 || tx >= N || ty >= N){
				continue;
			}
			if(Math.max(prev, r) - Math.min(prev, r) == 2){
				continue;
			}
			tmp = new Puzzle();
			tmp.MD = state.MD;
			tmp.space = state.space;
			tmp.f = Arrays.copyOf(state.f, N2);
			state.MD -= MDT[tx*N + ty][state.f[tx*N + ty] - 1];
			state.MD += MDT[sx*N + sy][state.f[tx*N + ty] - 1];
			int tmpf = state.f[tx*N + ty];
			state.f[tx*N + ty] = state.f[sx*N + sy];
			state.f[sx*N + sy] = tmpf;
			state.space = tx*N + ty;
			if(dfs(depth + 1, r)) {
				path[depth] = r;
				return true;
			}
			state.MD = tmp.MD;
			state.space = tmp.space;
			state.f = Arrays.copyOf(tmp.f, N2);
		}

		return false;

	}

	static String ID(Puzzle in){
		in.MD = getAllMD(in);

		for(limit = in.MD ; limit <= LIMIT ; limit++){
			state = in;
			if(dfs(0,-100)){
				String ans = "";
				for(int i = 0; i < limit ; i++){
					ans += dir[path[i]];
				}
				return ans;
			}
		}

		return "unsolvable";
	}

}

class Puzzle {
	int[] f = new int[Main.N2];
	int space;
	int MD;
}

</source>
<source file="../preprocessed_Datasplit/test/0/s263937011P.java" startline="1" endline="132" pcid="61716">
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;

public class Main {
	static final int N = 4;
	static final int N2 = 16;
	static final int LIMIT = 100;

	static final int[] dx = {0, -1, 0, 1};
	static final int[] dy = {1, 0, -1, 0};
	static final char[] dir = {'r','u','l','d'};
	static int[][] MDT = new int[N2][N2];

	static Puzzle state;
	static int limit;
	static int[] path = new int[LIMIT];
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		for(int i = 0; i < N2 ;i++){
			for(int j = 0; j < N2 ; j++){
				MDT[i][j] = Math.abs(i/N - j/N) + Math.abs(i%N - j%N);
			}
		}

		Puzzle in = new Puzzle();

		for(int i = 0; i < N ; i++){
			String[] tmpArray = br.readLine().split(" ");

			for(int j = 0; j < N; j++){
				in.f[i*N + j] = Integer.parseInt(tmpArray[j]);
				if(in.f[i*N + j] == 0 ){
					in.f[i*N + j] = N2;
					in.space = i*N + j;
				}
			}
		}
		String ans = ID(in);
		System.out.println(ans.length());
	}

	static int getAllMD(Puzzle pz){
		int sum = 0;
		for(int i = 0; i < N2 ;i++){
			if(pz.f[i] == N2) continue;
			sum += MDT[i][pz.f[i] - 1];
		}
		return sum;
	}

	static boolean isSolved() {
		for(int i = 0; i < N2; i++){
			if(state.f[i] != i + 1){
				return false;
			}
		}
		return true;
	}

	static boolean dfs(int depth, int prev){
		if(state.MD == 0){
			return true;
		}

		if( depth + state.MD > limit){
			return false;
		}

		int sx = state.space/N;
		int sy = state.space%N;
		Puzzle tmp;

		for(int r = 0; r < 4; r++){
			int tx = sx + dx[r];
			int ty = sy + dy[r];
			if(tx < 0 || ty < 0 || tx >= N || ty >= N){
				continue;
			}
			if(Math.max(prev, r) - Math.min(prev, r) == 2){
				continue;
			}
			tmp = new Puzzle();
			tmp.MD = state.MD;
			tmp.space = state.space;
			tmp.f = Arrays.copyOf(state.f, N2);
			state.MD -= MDT[tx*N + ty][state.f[tx*N + ty] - 1];
			state.MD += MDT[sx*N + sy][state.f[tx*N + ty] - 1];
			int tmpf = state.f[tx*N + ty];
			state.f[tx*N + ty] = state.f[sx*N + sy];
			state.f[sx*N + sy] = tmpf;
			state.space = tx*N + ty;
			if(dfs(depth + 1, r)) {
				path[depth] = r;
				return true;
			}
			state.MD = tmp.MD;
			state.space = tmp.space;
			state.f = Arrays.copyOf(tmp.f, N2);
		}

		return false;

	}

	static String ID(Puzzle in){
		in.MD = getAllMD(in);

		for(limit = in.MD ; limit <= LIMIT ; limit++){
			state = in;
			if(dfs(0,-100)){
				String ans = "";
				for(int i = 0; i < limit ; i++){
					ans += dir[path[i]];
				}
				return ans;
			}
		}

		return "unsolvable";
	}

}

class Puzzle {
	int[] f = new int[Main.N2];
	int space;
	int MD;
}

</source>
</class>

<class classid="51" nclones="2" nlines="81" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s112957949P.java" startline="1" endline="96" pcid="22505">
import java.util.*;
import java.lang.*;
import java.math.*;
import java.io.*;
import static java.lang.Math.*;
import static java.util.Arrays.*;
import static java.util.Collections.*;

public class Main{
	Scanner sc=new Scanner(System.in);

	int INF=1<<28;
	double EPS=1e-12;

	int n;
	int[] pow;
	String[] names;
	HashSet<String>[] sets;

	@SuppressWarnings("unchecked")
	void run(){
		for(;;){
			n=sc.nextInt();
			if(n==0){
				break;
			}
			names=new String[n];
			pow=new int[n];
			sets=new HashSet[n];
			for(int j=0; j<n; j++){
				names[j]=sc.next();
				pow[j]=sc.nextInt();
				sets[j]=new HashSet<String>();
				int m=sc.nextInt();
				for(int i=0; i<m; i++){
					sets[j].add(sc.next());
				}
			}
			solve();
		}
	}

	long[] g;
	int ans;

	void solve(){
		HashMap<String, Integer> map=new HashMap<String, Integer>();
		for(int i=0; i<n; i++){
			map.put(names[i], i);
		}
		g=new long[n];
		for(int i=0; i<n; i++){
			for(String s : sets[i]){
				int j=map.get(s);
				g[i]|=1L<<j;
			}
		}
		ans=0;
		mis(1, 1, pow[0]);
		println(ans+"");
	}

	void mis(int k, long choosed, int sum){
		if(k==n){
			ans=max(ans, sum);
			return;
		}
		if((choosed&g[k])==0){
			mis(k+1, choosed|(1L<<k), sum+pow[k]);
			long rem=0;
			for(int i=k+1; i<n; i++)
				if((choosed&g[i])==0)
					rem|=g[i];
			if((rem>>>k&1)==0)
				return;
		}
		mis(k+1, choosed, sum);
	}

	void debug(Object... os){
		System.err.println(Arrays.deepToString(os));
	}

	void print(String s){
		System.out.print(s);
	}

	void println(String s){
		System.out.println(s);
	}

	public static void main(String[] args){
		new Main().run();
	}
}

</source>
<source file="../preprocessed_Datasplit/test/0/s285786399P.java" startline="1" endline="96" pcid="61781">
import java.util.*;
import java.lang.*;
import java.math.*;
import java.io.*;
import static java.lang.Math.*;
import static java.util.Arrays.*;
import static java.util.Collections.*;

public class Main{
	Scanner sc=new Scanner(System.in);

	int INF=1<<28;
	double EPS=1e-12;

	int n;
	int[] pow;
	String[] names;
	HashSet<String>[] sets;

	@SuppressWarnings("unchecked")
	void run(){
		for(;;){
			n=sc.nextInt();
			if(n==0){
				break;
			}
			names=new String[n];
			pow=new int[n];
			sets=new HashSet[n];
			for(int j=0; j<n; j++){
				names[j]=sc.next();
				pow[j]=sc.nextInt();
				sets[j]=new HashSet<String>();
				int m=sc.nextInt();
				for(int i=0; i<m; i++){
					sets[j].add(sc.next());
				}
			}
			solve();
		}
	}

	long[] g;
	int ans;

	void solve(){
		HashMap<String, Integer> map=new HashMap<String, Integer>();
		for(int i=0; i<n; i++){
			map.put(names[i], i);
		}
		g=new long[n];
		for(int i=0; i<n; i++){
			for(String s : sets[i]){
				int j=map.get(s);
				g[i]|=1L<<j;
			}
		}
		ans=0;
		mis(1, 1, pow[0]);
		println(ans+"");
	}

	void mis(int k, long choosed, int sum){
		if(k==n){
			ans=max(ans, sum);
			return;
		}
		if((choosed&g[k])==0){
			mis(k+1, choosed|(1L<<k), sum+pow[k]);
			long rem=0;
			for(int i=k+1; i<n; i++)
				if((choosed&g[i])==0)
					rem|=g[i];
			if((rem>>>k&1)==0)
				return;
		}
		mis(k+1, choosed, sum);
	}

	void debug(Object... os){
		System.err.println(Arrays.deepToString(os));
	}

	void print(String s){
		System.out.print(s);
	}

	void println(String s){
		System.out.println(s);
	}

	public static void main(String[] args){
		new Main().run();
	}
}

</source>
</class>

<class classid="52" nclones="2" nlines="126" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s125047483P.java" startline="1" endline="138" pcid="22878">
import java.util.Arrays;
import java.util.Comparator;
import java.util.Scanner;
public class Main {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		for(;sc.hasNext();){
			String s = sc.next();
			String t = sc.next();
			SuffixArray sa = new SuffixArray(s);
			int left=-1,right=t.length()+1;
			while(left<right-1){
				int len= (left+right)/2;
				boolean f = false;
				for(int i=0;i<t.length();i++){
					if(i+len>t.length())break;
					String sub = t.substring(i,i+len);
					if(sa.contain(sub)){
						f=true;
						break;
					}
				}
				if(f){
					left=len;
				}
				else{
					right=len;
				}

			}
			System.out.println(left);
		}

	}

	static class SuffixArray {
		int n,k=1;
		Integer[] sa,rank,tmp;
		String s;

		SuffixArray(String _s) {
			s=_s;
			n = s.length();
			String[] S = new String[n+1];
			S[n]="";
			for(int i=n-1;i>=0;i--){
				S[i] = s.charAt(i)+S[i+1];
			}
			rank=new Integer[n+1];
			sa=new Integer[n+1];
			tmp=new Integer[n+1];
			for(int i=0;i<n;i++){
				sa[i]=i;
				rank[i]=(int) s.charAt(i);
			}
			sa[n]=n;
			rank[n]=-1;

			for(k=1;k<=n;k<<=1){
				Arrays.sort(sa,new Comparator<Integer>(){
					@Override
					public int compare(Integer o1, Integer o2) {
						int r1=rank[o1];
						int r2=rank[o2];
						if(r1!=r2)return (r1-r2);
						int r11=o1+k <= n ? rank[o1+k] : -1;
						int r22=o2+k <= n ? rank[o2+k] : -1;
						return (r11-r22);
					}
				});
				tmp[sa[0]]=0;
				for(int i=1;i<=n;i++){
					tmp[sa[i]]=tmp[sa[i-1]]+ (compare(sa[i-1],sa[i])!=0?1:0);
				}
				for(int i=0;i<=n;i++){
					rank[i]=tmp[i];
				}
			}
		}
		boolean contain(String t){
			return contain(s,sa,t);
		}
		private boolean contain(String s,Integer[] sa,String t){
			int a=0,b=s.length();
			while(b-a>1){
				int c = (a+b)/2;
				int com = compare(s,sa[c], Math.min(sa[c]+t.length(), s.length()),t);
				if(com<0){
					a=c;
				}
				else{
					b=c;
				}
			}
			return compare(s,sa[b], Math.min(sa[b]+t.length(), s.length()),t)==0;
		}
		private int compare(String s,int i1,int i2,String t){

			for(int i=i1;i<i2;i++){
				if(i-i1>=t.length()){
					return 1;
				}
				if(s.charAt(i)!=t.charAt(i-i1)){
					return s.charAt(i)-t.charAt(i-i1);
				}
			}
			return (i2-i1)-t.length();
		}

		private int compare(String s,int i1,int i2,String t,int j1,int j2){
			int slen=i2-i1;
			int tlen=j2-j1;
			for(int i=0;i<slen;i++){
				if(i>=tlen){
					return 1;
				}
				if(s.charAt(i+i1)!=t.charAt(i+j1)){
					return s.charAt(i+i1)-t.charAt(i+j1);
				}
			}
			return slen-tlen;
		}

		private int compare(Integer o1, Integer o2) {
			int r1=rank[o1];
			int r2=rank[o2];
			if(r1!=r2)return (r1-r2);
			int r11=o1+k <= n ? rank[o1+k] : -1;
			int r22=o2+k <= n ? rank[o2+k] : -1;

			return (r11-r22);
		}

	}

}

</source>
<source file="../preprocessed_Datasplit/test/0/s521951523P.java" startline="1" endline="141" pcid="62597">
import java.util.Arrays;
import java.util.Comparator;
import java.util.Scanner;
public class Main {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		for(;sc.hasNext();){
			String s = sc.next();
			String t = sc.next();
			SuffixArray sa = new SuffixArray(s);
			int left=-1,right=t.length()+1;
			while(left<right-1){
				int len= (left+right)/2;

				boolean f = false;
				for(int i=0;i<t.length();i++){
					if(i+len>t.length())break;
					String sub = t.substring(i,i+len);
					if(sa.contain(sub)){
						f=true;
						break;
					}
				}
				if(f){
					left=len;
				}
				else{
					right=len;
				}

			}
			System.out.println(left);
		}

	}

	static class SuffixArray {
		int n,k=1;
		Integer[] sa,rank,tmp;
		String s;

		SuffixArray(String _s) {
			s=_s;
			n = s.length();
			String[] S = new String[n+1];
			S[n]="";
			for(int i=n-1;i>=0;i--){
				S[i] = s.charAt(i)+S[i+1];
			}
			rank=new Integer[n+1];
			sa=new Integer[n+1];
			tmp=new Integer[n+1];
			for(int i=0;i<n;i++){
				sa[i]=i;
				rank[i]=(int) s.charAt(i);
			}
			sa[n]=n;
			rank[n]=-1;

			for(k=1;k<=n;k<<=1){
				Arrays.sort(sa,new Comparator<Integer>(){
					@Override
					public int compare(Integer o1, Integer o2) {
						int r1=rank[o1];
						int r2=rank[o2];
						if(r1!=r2)return (r1-r2);
						int r11=o1+k <= n ? rank[o1+k] : -1;
						int r22=o2+k <= n ? rank[o2+k] : -1;

						return (r11-r22);
					}
				});
				tmp[sa[0]]=0;
				for(int i=1;i<=n;i++){
					tmp[sa[i]]=tmp[sa[i-1]]+ (compare(sa[i-1],sa[i])!=0?1:0);
				}
				for(int i=0;i<=n;i++){
					rank[i]=tmp[i];
				}
			}
		}
		boolean contain(String t){
			return contain(s,sa,t);
		}
		private boolean contain(String s,Integer[] sa,String t){
			int a=0,b=s.length();
			while(b-a>1){
				int c = (a+b)/2;

				int com = compare(s,sa[c], Math.min(sa[c]+t.length(), s.length()),t);
				if(com<0){
					a=c;
				}
				else{
					b=c;
				}
			}
			return compare(s,sa[b], Math.min(sa[b]+t.length(), s.length()),t)==0;
		}
		private int compare(String s,int i1,int i2,String t){

			for(int i=i1;i<i2;i++){
				if(i-i1>=t.length()){
					return 1;
				}
				if(s.charAt(i)!=t.charAt(i-i1)){
					return s.charAt(i)-t.charAt(i-i1);
				}
			}
			return (i2-i1)-t.length();
		}

		private int compare(String s,int i1,int i2,String t,int j1,int j2){
			int slen=i2-i1;
			int tlen=j2-j1;
			for(int i=0;i<slen;i++){
				if(i>=tlen){
					return 1;
				}
				if(s.charAt(i+i1)!=t.charAt(i+j1)){
					return s.charAt(i+i1)-t.charAt(i+j1);
				}
			}
			return slen-tlen;
		}

		private int compare(Integer o1, Integer o2) {
			int r1=rank[o1];
			int r2=rank[o2];
			if(r1!=r2)return (r1-r2);
			int r11=o1+k <= n ? rank[o1+k] : -1;
			int r22=o2+k <= n ? rank[o2+k] : -1;

			return (r11-r22);
		}

	}

}

</source>
</class>

<class classid="53" nclones="2" nlines="83" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s134378982P.java" startline="1" endline="90" pcid="23153">
import java.util.*;
public class Main {
	Scanner in = new Scanner(System.in);
	public static void main(String[] args) {
		new Main();
	}

	public Main(){
		new A().doIt();
	}

	class A{
		int n,m;
		int[] result;
		int zero,one;
		boolean calc(int target){
			int index = 0,num = 1;
			int c = ((target>>0)%2);
			for(int i=1;i<n;i++){
				if(c == (target>>i)%2)num++;
				else{
					if(result[m-index-1]!=num)return false;
					index++;
					num = 1;
					c = (target>>i)%2;
				}
			}
			if(result[m-index-1]!=num)return false;
			int z = 0;
			int o = 0;
			for(int i=0;i<n;i++){
				if((target>>i)%2==0)z++;
				else o++;
			}
			if(zero==z&&one==o)return true;
			return false;
		}

		int solve(ArrayList<Integer> kouho,char[] to){
			int result = Integer.MAX_VALUE/2;
			ArrayList<String> list = new ArrayList<String>();
			for(int i=0;i<kouho.size();i++){
				String a = "";
				for(int s=n-1;s>=0;s--)a+=((kouho.get(i)>>s)%2);
				list.add(a);
			}

			for(int i=0;i<list.size();i++){
				int cnt = 0;
				boolean[] sw = new boolean[n];
				String target = list.get(i);
				for(int s=0;s<n;s++)if(target.charAt(s)=='1'){
					for(int j=0;j<n;j++){
						if(to[j]==target.charAt(s)&&!sw[j]){
							sw[j] = true;
							cnt += Math.abs(j-s);
							break;
						}
					}
				}
				result = Math.min(cnt, result);
			}

			return result;
		}

		void doIt(){
			n = in.nextInt();
			m = in.nextInt();
			zero = 0;one = 0;
			char[] input = new char[n];
			for(int i=0;i<n;i++)input[i] = in.next().charAt(0);
			String input2 = "";
			for(int i=0;i<n;i++)input2+=input[i];
			result = new int[m];
			for(int i=0;i<m;i++)result[i] = in.nextInt();
			for(int i=0;i<n;i++){
				if(input[i]=='0')zero++;
				else one++;
			}
			ArrayList<Integer> kouho = new ArrayList<Integer>();
			for(int i=0;i<(1<<n);i++){
				if(calc(i))kouho.add(i);
			}
			System.out.println(solve(kouho,input));
		}
	}

}

</source>
<source file="../preprocessed_Datasplit/test/0/s760553625P.java" startline="1" endline="90" pcid="63433">
import java.util.*;
public class Main {
	Scanner in = new Scanner(System.in);
	public static void main(String[] args) {
		new Main();
	}

	public Main(){
		new A().doIt();
	}

	class A{
		int n,m;
		int[] result;
		int zero,one;
		boolean calc(int target){
			int index = 0,num = 1;
			int c = ((target>>0)%2);
			for(int i=1;i<n;i++){
				if(c == (target>>i)%2)num++;
				else{
					if(result[m-index-1]!=num)return false;
					index++;
					num = 1;
					c = (target>>i)%2;
				}
			}
			if(result[m-index-1]!=num)return false;
			int z = 0;
			int o = 0;
			for(int i=0;i<n;i++){
				if((target>>i)%2==0)z++;
				else o++;
			}
			if(zero==z&&one==o)return true;
			return false;
		}

		int solve(ArrayList<Integer> kouho,char[] to){
			int result = Integer.MAX_VALUE/2;
			ArrayList<String> list = new ArrayList<String>();
			for(int i=0;i<kouho.size();i++){
				String a = "";
				for(int s=n-1;s>=0;s--)a+=((kouho.get(i)>>s)%2);
				list.add(a);
			}

			for(int i=0;i<list.size();i++){
				int cnt = 0;
				boolean[] sw = new boolean[n];
				String target = list.get(i);
				for(int s=0;s<n;s++)if(target.charAt(s)=='1'){
					for(int j=0;j<n;j++){
						if(to[j]==target.charAt(s)&&!sw[j]){
							sw[j] = true;
							cnt += Math.abs(j-s);
							break;
						}
					}
				}
				result = Math.min(cnt, result);
			}

			return result;
		}

		void doIt(){
			n = in.nextInt();
			m = in.nextInt();
			zero = 0;one = 0;
			char[] input = new char[n];
			for(int i=0;i<n;i++)input[i] = in.next().charAt(0);
			String input2 = "";
			for(int i=0;i<n;i++)input2+=input[i];
			result = new int[m];
			for(int i=0;i<m;i++)result[i] = in.nextInt();
			for(int i=0;i<n;i++){
				if(input[i]=='0')zero++;
				else one++;
			}
			ArrayList<Integer> kouho = new ArrayList<Integer>();
			for(int i=0;i<(1<<n);i++){
				if(calc(i))kouho.add(i);
			}
			System.out.println(solve(kouho,input));
		}
	}

}

</source>
</class>

<class classid="54" nclones="2" nlines="145" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s477615844P.java" startline="1" endline="189" pcid="23260">
import java.io.IOException;
import java.util.NoSuchElementException;

import java.io.InputStream;

import java.io.PrintWriter;

import java.util.Arrays;

@SuppressWarnings("unchecked")
public class Main {
    static int N;
    static long MAX_A;

    static long[] a;
    static long[] s;

    static long[] BIT;

    static void bitAdd(long x) {
        long idx = x + N + 1;

        for (; idx < N * 2 + 2; idx += idx & -idx) BIT[(int) idx]++;
    }

    static long bitQuery(long x) {
        long idx = x + N + 1;
        long ret = 0;

        for (; 0 < idx; idx -= idx & -idx) ret += BIT[(int) idx];

        return ret;
    }

    static long f(long mid) {
        long ret = 0;
        long prev = 0;

        Arrays.fill(s, 0);

        for (int i = 0; i < N; i++) {
            if (mid <= a[i]) prev++;
            else prev--;

            s[i] = prev;
        }

        Arrays.fill(BIT, 0);

        bitAdd(0);

        for (int i = 0; i < N; i++) {
            ret += bitQuery(s[i]);

            bitAdd(s[i]);
        }

        return ret;
    }

    static long bisectionMethod() {
        long p = (long)Math.ceil(((double) N * (N + 1) / 2) / 2);

        long l = 0;
        long r = MAX_A + 1;
        long ret = 0;

        while (l <= r) {
            long mid = (l + r) / 2;
            long num = f(mid);

            if (p <= num) {
                ret = mid;
                l = mid + 1;
            } else
                r = mid - 1;
        }

        return ret;
    }

    public static void main(String[] args) throws IOException {
        PrintWriter out = new PrintWriter(System.out);

        N = nextInt();

        a = new long[N];
        s = new long[N];
        BIT = new long[N * 2 + 2];

        for (int i = 0; i < N; i++) {
            a[i] = nextInt();
            MAX_A = Math.max(MAX_A, a[i]);
        }

        out.println(bisectionMethod());

        out.flush();
    }

    static final InputStream in = System.in;
    static final byte[] buffer = new byte[1024];
    static int ptr = 0;
    static int buflen = 0;

    static boolean hasNextByte() {
        if (ptr < buflen) {
            return true;
        } else {
            ptr = 0;
            try {
                buflen = in.read(buffer);
            } catch (IOException e) {
                e.printStackTrace();
            }
            if (buflen <= 0) {
                return false;
            }
        }
        return true;
    }

    static int readByte() {
        if (hasNextByte())
            return buffer[ptr++];
        else
            return -1;
    }

    static boolean isPrintableChar(int c) {
        return 33 <= c && c <= 126;
    }

    static boolean hasNext() {
        while (hasNextByte() && !isPrintableChar(buffer[ptr]))
            ptr++;
        return hasNextByte();
    }

    static String next() {
        if (!hasNext())
            throw new NoSuchElementException();
        StringBuilder sb = new StringBuilder();
        int b = readByte();
        while (isPrintableChar(b)) {
            sb.appendCodePoint(b);
            b = readByte();
        }
        return sb.toString();
    }

    static long nextLong() {
        if (!hasNext())
            throw new NoSuchElementException();
        long n = 0;
        boolean minus = false;
        int b = readByte();
        if (b == '-') {
            minus = true;
            b = readByte();
        }
        if (b < '0' || '9' < b) {
            throw new NumberFormatException();
        }
        while (true) {
            if ('0' <= b && b <= '9') {
                n *= 10;
                n += b - '0';
            } else if (b == -1 || !isPrintableChar(b)) {
                return minus ? -n : n;
            } else {
                throw new NumberFormatException();
            }
            b = readByte();
        }
    }

    static int nextInt() {
        long nl = nextLong();
        if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE)
            throw new NumberFormatException();
        return (int) nl;
    }

    static double nextDouble() {
        return Double.parseDouble(next());
    }
}

</source>
<source file="../preprocessed_Datasplit/test/0/s923583382P.java" startline="1" endline="189" pcid="63983">
import java.io.IOException;
import java.util.NoSuchElementException;

import java.io.InputStream;

import java.io.PrintWriter;

import java.util.Arrays;

@SuppressWarnings("unchecked")
public class Main {
    static int N;
    static long MAX_A;

    static long[] a;
    static long[] s;

    static long[] BIT;

    static void bitAdd(long x) {
        long idx = x + N + 1;

        for (; idx < N * 2 + 2; idx += idx & -idx) BIT[(int) idx]++;
    }

    static long bitQuery(long x) {
        long idx = x + N + 1;
        long ret = 0;

        for (; 0 < idx; idx -= idx & -idx) ret += BIT[(int) idx];

        return ret;
    }

    static long f(long mid) {
        long ret = 0;
        long prev = 0;

        Arrays.fill(s, 0);

        for (int i = 0; i < N; i++) {
            if (mid <= a[i]) prev++;
            else prev--;

            s[i] = prev;
        }

        Arrays.fill(BIT, 0);

        bitAdd(0);

        for (int i = 0; i < N; i++) {
            ret += bitQuery(s[i]);

            bitAdd(s[i]);
        }

        return ret;
    }

    static long bisectionMethod() {
        long p = (long)Math.ceil(((double) N * (N + 1) / 2) / 2);

        long l = 0;
        long r = MAX_A + 1;
        long ret = 0;

        while (l <= r) {
            long mid = (l + r) / 2;
            long num = f(mid);

            if (p <= num) {
                ret = mid;
                l = mid + 1;
            } else
                r = mid - 1;
        }

        return ret;
    }

    public static void main(String[] args) throws IOException {
        PrintWriter out = new PrintWriter(System.out);

        N = nextInt();

        a = new long[N];
        s = new long[N];
        BIT = new long[N * 2 + 2];

        for (int i = 0; i < N; i++) {
            a[i] = nextInt();
            MAX_A = Math.max(MAX_A, a[i]);
        }

        out.println(bisectionMethod());

        out.flush();
    }

    static final InputStream in = System.in;
    static final byte[] buffer = new byte[1024];
    static int ptr = 0;
    static int buflen = 0;

    static boolean hasNextByte() {
        if (ptr < buflen) {
            return true;
        } else {
            ptr = 0;
            try {
                buflen = in.read(buffer);
            } catch (IOException e) {
                e.printStackTrace();
            }
            if (buflen <= 0) {
                return false;
            }
        }
        return true;
    }

    static int readByte() {
        if (hasNextByte())
            return buffer[ptr++];
        else
            return -1;
    }

    static boolean isPrintableChar(int c) {
        return 33 <= c && c <= 126;
    }

    static boolean hasNext() {
        while (hasNextByte() && !isPrintableChar(buffer[ptr]))
            ptr++;
        return hasNextByte();
    }

    static String next() {
        if (!hasNext())
            throw new NoSuchElementException();
        StringBuilder sb = new StringBuilder();
        int b = readByte();
        while (isPrintableChar(b)) {
            sb.appendCodePoint(b);
            b = readByte();
        }
        return sb.toString();
    }

    static long nextLong() {
        if (!hasNext())
            throw new NoSuchElementException();
        long n = 0;
        boolean minus = false;
        int b = readByte();
        if (b == '-') {
            minus = true;
            b = readByte();
        }
        if (b < '0' || '9' < b) {
            throw new NumberFormatException();
        }
        while (true) {
            if ('0' <= b && b <= '9') {
                n *= 10;
                n += b - '0';
            } else if (b == -1 || !isPrintableChar(b)) {
                return minus ? -n : n;
            } else {
                throw new NumberFormatException();
            }
            b = readByte();
        }
    }

    static int nextInt() {
        long nl = nextLong();
        if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE)
            throw new NumberFormatException();
        return (int) nl;
    }

    static double nextDouble() {
        return Double.parseDouble(next());
    }
}

</source>
</class>

<class classid="55" nclones="2" nlines="24" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s848354165P.java" startline="1" endline="25" pcid="23622">
import java.util.*;
import java.text.*;

class Main {
    public static void main(String[]args)throws Exception {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        for(int i = 1; i <= n; i++) {
            int x = i;
            if((x % 3) == 0) {
                System.out.print(" " + i);
            } else {
                while(x != 0) {
                    if((x % 10) == 3) {
                        System.out.print(" " + i);
                        x = 0;
                    }
                    x = x / 10;
                }
            }
        }
        System.out.println();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/0/s275725695P.java" startline="1" endline="25" pcid="61757">
import java.util.*;
import java.text.*;

class Main {
    public static void main(String[]args)throws Exception {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        for(int i = 1; i <= n; i++) {
            int x = i;
            if((x % 3) == 0) {
                System.out.print(" " + i);
            } else {
                while(x != 0) {
                    if((x % 10) == 3) {
                        System.out.print(" " + i);
                        x = 0;
                    }
                    x = x / 10;
                }
            }
        }
        System.out.println();
    }
}

</source>
</class>

<class classid="56" nclones="2" nlines="15" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s862774890P.java" startline="1" endline="20" pcid="24074">
import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);

		int a = sc.nextInt();
		int b = sc.nextInt();
		int c = sc.nextInt();

		if(a+b+c >= 22) {
			System.out.println("bust");
		}else {
			System.out.println("win");
		}
	}

}

</source>
<source file="../preprocessed_Datasplit/test/0/s817243344P.java" startline="1" endline="18" pcid="63615">
import java.util.Scanner;

public class Main {

	public static void main(String[] args){
		Scanner sc = new Scanner(System.in);
		int a = sc.nextInt();
		int b = sc.nextInt();
		int c = sc.nextInt();

		if(a+b+c >=22){
			System.out.println("bust");
		}else{
			System.out.println("win");
		}
	}
}

</source>
</class>

<class classid="57" nclones="2" nlines="158" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s862939736P.java" startline="1" endline="179" pcid="24080">
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.util.NoSuchElementException;
import java.util.TreeMap;

public class Main {

  private static class Task {
    int MOD = (int) (1e9 + 7);

    TreeMap<Long, TreeMap<Long, Long>> dp = new TreeMap<>();

    long func(long S, long X) {
      if (S == 0) return 1;
      TreeMap<Long, Long> d = dp.get(S);
      if (d == null) dp.put(S, d = new TreeMap<>());
      else {
        Long ans = d.get(X);
        if (ans != null) return ans;
      }
      long ans = func(S / 2, X / 2) % MOD;
      ans = (ans + func((S - 1) / 2, (X - 1) / 2)) % MOD;
      if (S >= 2) ans = (ans + func((S - 2) / 2, X / 2)) % MOD;
      d.put(X, ans);
      return ans;
    }

    void solve(FastScanner in, PrintWriter out) throws Exception {

      long N = in.nextLong();
      out.println(func(N, N));
    }
  }

  public static void main(String[] args) throws Exception {
    OutputStream outputStream = System.out;
    FastScanner in = new FastScanner();
    PrintWriter out = new PrintWriter(outputStream);
    Task solver = new Task();
    solver.solve(in, out);
    out.close();
  }
  private static class FastScanner {
    private final InputStream in = System.in;
    private final byte[] buffer = new byte[1024];
    private int ptr = 0;
    private int bufferLength = 0;

    private boolean hasNextByte() {
      if (ptr < bufferLength) {
        return true;
      } else {
        ptr = 0;
        try {
          bufferLength = in.read(buffer);
        } catch (IOException e) {
          e.printStackTrace();
        }
        if (bufferLength <= 0) {
          return false;
        }
      }
      return true;
    }

    private int readByte() {
      if (hasNextByte()) return buffer[ptr++];
      else return -1;
    }

    private static boolean isPrintableChar(int c) {
      return 33 <= c && c <= 126;
    }

    private void skipUnprintable() {
      while (hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++;
    }

    boolean hasNext() {
      skipUnprintable();
      return hasNextByte();
    }

    public String next() {
      if (!hasNext()) throw new NoSuchElementException();
      StringBuilder sb = new StringBuilder();
      int b = readByte();
      while (isPrintableChar(b)) {
        sb.appendCodePoint(b);
        b = readByte();
      }
      return sb.toString();
    }

    long nextLong() {
      if (!hasNext()) throw new NoSuchElementException();
      long n = 0;
      boolean minus = false;
      int b = readByte();
      if (b == '-') {
        minus = true;
        b = readByte();
      }
      if (b < '0' || '9' < b) {
        throw new NumberFormatException();
      }
      while (true) {
        if ('0' <= b && b <= '9') {
          n *= 10;
          n += b - '0';
        } else if (b == -1 || !isPrintableChar(b)) {
          return minus ? -n : n;
        } else {
          throw new NumberFormatException();
        }
        b = readByte();
      }
    }

    double nextDouble() {
      return Double.parseDouble(next());
    }

    double[] nextDoubleArray(int n) {
      double[] array = new double[n];
      for (int i = 0; i < n; i++) {
        array[i] = nextDouble();
      }
      return array;
    }

    double[][] nextDoubleMap(int n, int m) {
      double[][] map = new double[n][];
      for (int i = 0; i < n; i++) {
        map[i] = nextDoubleArray(m);
      }
      return map;
    }

    public int nextInt() {
      return (int) nextLong();
    }

    public int[] nextIntArray(int n) {
      int[] array = new int[n];
      for (int i = 0; i < n; i++) array[i] = nextInt();
      return array;
    }

    public long[] nextLongArray(int n) {
      long[] array = new long[n];
      for (int i = 0; i < n; i++) array[i] = nextLong();
      return array;
    }

    public String[] nextStringArray(int n) {
      String[] array = new String[n];
      for (int i = 0; i < n; i++) array[i] = next();
      return array;
    }

    public char[][] nextCharMap(int n) {
      char[][] array = new char[n][];
      for (int i = 0; i < n; i++) array[i] = next().toCharArray();
      return array;
    }

    public int[][] nextIntMap(int n, int m) {
      int[][] map = new int[n][];
      for (int i = 0; i < n; i++) {
        map[i] = nextIntArray(m);
      }
      return map;
    }
  }
}

</source>
<source file="../preprocessed_Datasplit/test/0/s395339830P.java" startline="1" endline="179" pcid="62172">
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.util.NoSuchElementException;
import java.util.TreeMap;

public class Main {

  private static class Task {
    int MOD = (int) (1e9 + 7);

    TreeMap<Long, TreeMap<Long, Long>> dp = new TreeMap<>();

    long func(long S, long X) {
      if (S == 0) return 1;
      TreeMap<Long, Long> d = dp.get(S);
      if (d == null) dp.put(S, d = new TreeMap<>());
      else {
        Long ans = d.get(X);
        if (ans != null) return ans;
      }
      long ans = func(S / 2, X / 2) % MOD;
      ans = (ans + func((S - 1) / 2, (X - 1) / 2)) % MOD;
      if (S >= 2) ans = (ans + func((S - 2) / 2, X / 2)) % MOD;
      d.put(X, ans);
      return ans;
    }

    void solve(FastScanner in, PrintWriter out) throws Exception {

      long N = in.nextLong();
      out.println(func(N, N));
    }
  }

  public static void main(String[] args) throws Exception {
    OutputStream outputStream = System.out;
    FastScanner in = new FastScanner();
    PrintWriter out = new PrintWriter(outputStream);
    Task solver = new Task();
    solver.solve(in, out);
    out.close();
  }
  private static class FastScanner {
    private final InputStream in = System.in;
    private final byte[] buffer = new byte[1024];
    private int ptr = 0;
    private int bufferLength = 0;

    private boolean hasNextByte() {
      if (ptr < bufferLength) {
        return true;
      } else {
        ptr = 0;
        try {
          bufferLength = in.read(buffer);
        } catch (IOException e) {
          e.printStackTrace();
        }
        if (bufferLength <= 0) {
          return false;
        }
      }
      return true;
    }

    private int readByte() {
      if (hasNextByte()) return buffer[ptr++];
      else return -1;
    }

    private static boolean isPrintableChar(int c) {
      return 33 <= c && c <= 126;
    }

    private void skipUnprintable() {
      while (hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++;
    }

    boolean hasNext() {
      skipUnprintable();
      return hasNextByte();
    }

    public String next() {
      if (!hasNext()) throw new NoSuchElementException();
      StringBuilder sb = new StringBuilder();
      int b = readByte();
      while (isPrintableChar(b)) {
        sb.appendCodePoint(b);
        b = readByte();
      }
      return sb.toString();
    }

    long nextLong() {
      if (!hasNext()) throw new NoSuchElementException();
      long n = 0;
      boolean minus = false;
      int b = readByte();
      if (b == '-') {
        minus = true;
        b = readByte();
      }
      if (b < '0' || '9' < b) {
        throw new NumberFormatException();
      }
      while (true) {
        if ('0' <= b && b <= '9') {
          n *= 10;
          n += b - '0';
        } else if (b == -1 || !isPrintableChar(b)) {
          return minus ? -n : n;
        } else {
          throw new NumberFormatException();
        }
        b = readByte();
      }
    }

    double nextDouble() {
      return Double.parseDouble(next());
    }

    double[] nextDoubleArray(int n) {
      double[] array = new double[n];
      for (int i = 0; i < n; i++) {
        array[i] = nextDouble();
      }
      return array;
    }

    double[][] nextDoubleMap(int n, int m) {
      double[][] map = new double[n][];
      for (int i = 0; i < n; i++) {
        map[i] = nextDoubleArray(m);
      }
      return map;
    }

    public int nextInt() {
      return (int) nextLong();
    }

    public int[] nextIntArray(int n) {
      int[] array = new int[n];
      for (int i = 0; i < n; i++) array[i] = nextInt();
      return array;
    }

    public long[] nextLongArray(int n) {
      long[] array = new long[n];
      for (int i = 0; i < n; i++) array[i] = nextLong();
      return array;
    }

    public String[] nextStringArray(int n) {
      String[] array = new String[n];
      for (int i = 0; i < n; i++) array[i] = next();
      return array;
    }

    public char[][] nextCharMap(int n) {
      char[][] array = new char[n][];
      for (int i = 0; i < n; i++) array[i] = next().toCharArray();
      return array;
    }

    public int[][] nextIntMap(int n, int m) {
      int[][] map = new int[n][];
      for (int i = 0; i < n; i++) {
        map[i] = nextIntArray(m);
      }
      return map;
    }
  }
}

</source>
</class>

<class classid="58" nclones="2" nlines="29" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s892475806P.java" startline="1" endline="31" pcid="24963">
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		List<Integer> list = new ArrayList<>();
		for (int i = 0; i < n; i++) {
			list.add(sc.nextInt());
		}
		int q = sc.nextInt();
		for (int i = 0; i < q; i++) {
			switch (sc.nextInt()) {
				case 0:
					int b  = sc.nextInt();
					int e = sc.nextInt();
					System.out.println(Collections.min(list.subList(b, e)));
					break;
				case 1:
					b  = sc.nextInt();
					e = sc.nextInt();
					System.out.println(Collections.max(list.subList(b, e)));
					break;
			}
		}
	}
}

</source>
<source file="../preprocessed_Datasplit/test/0/s187784404P.java" startline="1" endline="31" pcid="61478">
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		List<Integer> list = new ArrayList<>();
		for (int i = 0; i < n; i++) {
			list.add(sc.nextInt());
		}
		int q = sc.nextInt();
		for (int i = 0; i < q; i++) {
			switch (sc.nextInt()) {
				case 0:
					int b  = sc.nextInt();
					int e = sc.nextInt();
					System.out.println(Collections.min(list.subList(b, e)));
					break;
				case 1:
					b  = sc.nextInt();
					e = sc.nextInt();
					System.out.println(Collections.max(list.subList(b, e)));
					break;
			}
		}
	}
}

</source>
</class>

<class classid="59" nclones="2" nlines="31" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s896704308P.java" startline="1" endline="56" pcid="25105">
import java.util.*;
import java.lang.*;
import java.io.*;

class Main
{

    private static int n;

    private static int rec(int sum,int pre,int cnt)
    {

	if(sum > n)
	    return 0;

	if(sum == n)
	    return 1;

	if(cnt >= 3)
	    {

		int dif = n-sum;

		    int res = (int)Math.sqrt(dif);
		    if(res >= pre){
			if(res*res == dif)return 1;
		    }
		return 0;

	    }

	int counter = 0;
	for(int i=pre;sum+Math.pow(i,2)<=n;i++)
	    {
		counter += rec(sum+i*i,i,cnt+1);
	    }
	return counter;
    }

      public static void main(String args[])throws IOException
    {
	BufferedReader in = new BufferedReader(new InputStreamReader(System.in));

	while(true)
	    {

		n = Integer.parseInt(in.readLine());
		if(n == 0)
		    break;

		System.out.println(rec(0,1,0));
	    }
    }

}

</source>
<source file="../preprocessed_Datasplit/test/0/s474294531P.java" startline="1" endline="53" pcid="62442">
import java.util.*;
import java.lang.*;
import java.io.*;

class Main
{

    private static int n;

    private static int rec(int sum,int pre,int cnt)
    {

	if(sum > n)
	    return 0;

	if(sum == n)
	    return 1;

	if(cnt >= 3)
	    {
		int dif = n-sum;

		    int res = (int)Math.sqrt(dif);
		    if(res >= pre)
			{
			    if(res*res == dif)return 1;
			}
		    return 0;
	    }

	int counter = 0;
	for(int i=pre;sum+Math.pow(i,2)<=n;i++)
	    {
		counter += rec(sum+i*i,i,cnt+1);
	    }
	return counter;
    }

      public static void main(String args[])throws IOException
    {
	BufferedReader in = new BufferedReader(new InputStreamReader(System.in));

	while(true)
	    {
		n = Integer.parseInt(in.readLine());
		if(n == 0)
		    break;
		System.out.println(rec(0,1,0));
	    }
    }

}

</source>
</class>

<class classid="60" nclones="2" nlines="10" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s945990009P.java" startline="1" endline="14" pcid="26094">
import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int X = sc.nextInt();
		int A = sc.nextInt();
		int B = sc.nextInt();

		System.out.println((X-A) % B);

	}
}

</source>
<source file="../preprocessed_Datasplit/test/0/s957275050P.java" startline="1" endline="17" pcid="64096">
import java.util.Scanner;

public class Main {

	public static void main(String[] args) {

		Scanner sc = new Scanner(System.in);

		int X = sc.nextInt();
		int A = sc.nextInt();
		int B = sc.nextInt();

			System.out.println((X-A)%B);

		}
	}

</source>
</class>

<class classid="61" nclones="2" nlines="45" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s953865763P.java" startline="1" endline="55" pcid="26329">
import java.util.*;

import javax.xml.crypto.Data;

import java.math.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] listA = new int[n];
        for(int i = 0; i < n; i++) {
            listA[i] = sc.nextInt() * 3600 + sc.nextInt() * 60;
        }
        int m = sc.nextInt();
        int[] listB = new int[m];
        for(int i = 0; i < m; i++) {
            listB[i] = sc.nextInt() * 3600 + sc.nextInt() * 60;
        }
        int[] list = new int[n + m];
        for(int i = 0; i < n; i++) {
            list[i] = listA[i];
        }
        for(int i = 0; i < m; i++) {
            list[i + n] = listB[i];
        }

        Arrays.sort(list);
        int pre = list[0];
        show(pre);
        for(int i = 1; i < n+m; i++) {
            if(list[i] == pre) continue;
            System.out.print(" ");
            show(list[i]);
            pre = list[i];
        }
        System.out.println();

    }

    static void show(int a) {
        int h = a / 3600;
        System.out.print(h + ":");

        a -= h * 3600;
        a /= 60;
        if(a < 10) {
            System.out.print("0");
        }
        System.out.print(a);
    }

}

</source>
<source file="../preprocessed_Datasplit/test/0/s008973744P.java" startline="1" endline="55" pcid="60883">
import java.util.*;

import javax.xml.crypto.Data;

import java.math.*;

public class Main {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		int[] listA = new int[n];
		for(int i = 0; i < n; i++) {
			listA[i] = sc.nextInt() * 3600 + sc.nextInt() * 60;
		}
		int m = sc.nextInt();
		int[] listB = new int[m];
		for(int i = 0; i < m; i++) {
			listB[i] = sc.nextInt() * 3600 + sc.nextInt() * 60;
		}
		int[] list = new int[n + m];
		for(int i = 0; i < n; i++) {
			list[i] = listA[i];
		}
		for(int i = 0; i < m; i++) {
			list[i + n] = listB[i];
		}

		Arrays.sort(list);
		int pre = list[0];
		show(pre);
		for(int i = 1; i < n+m; i++) {
			if(list[i] == pre) continue;
			System.out.print(" ");
			show(list[i]);
			pre = list[i];
		}
		System.out.println();

	}

	static void show(int a) {
		int h = a / 3600;
		System.out.print(h + ":");

		a -= h * 3600;
		a /= 60;
		if(a < 10) {
			System.out.print("0");
		}
		System.out.print(a);
	}

}

</source>
</class>

<class classid="62" nclones="2" nlines="83" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s957996237P.java" startline="1" endline="102" pcid="26450">
import java.util.*;
import java.io.*;
import java.math.*;

import static java.lang.Math.*;
import static java.util.Arrays.*;
import static java.util.Collections.*;

public class Main{
    static long mod=1000000007;
    public  static void main(String[] args)   throws Exception, IOException{
        Reader sc = new Reader(System.in);
        PrintWriter out=new PrintWriter(System.out);

        int n=sc.nextInt(),a=0;
        long ans=0,e[]=new long[n];
        for( int i=0; i<n; i++ ){
            e[i] = sc.nextLong();
        }
        while(true){
            sort(e);
            int x=-1;
                if(e[n-1]<n) break;
            long c=e[n-1]/n;
            ans+=c;
            for( int i=0; i<n-1; i++ ){
                e[i] += c;
            }
            e[n-1] -= c * n;
        }
        out.println(ans);
        out.flush();
    }

    static void db(Object... os){
        System.err.println(Arrays.deepToString(os));
    }

    static boolean validpos(int x,int y,int r, int c){
        return x<r && 0<=x && y<c && 0<=y;
    }

    static boolean bit(long x,int k){
        return  ( 0 < ( (x>>k) & 1 )  )  ? true:false;
    }
}

class Pair implements Comparable<Pair>{
    int x,y,id;
    Pair(int x, int y,int id) {
        this.x=x;
        this.y=y;
        this.id=id;
    }
    public int compareTo(Pair p){
        return p.x -     x;
    }
}

class P implements Comparable<P>{
    int diff,id1,id2;
    P(int diff, int id1,int id2) {
        this.diff=diff;
        this.id1=id1;
        this.id2=id2;
    }

    public int compareTo(P p){
        return diff - p.diff;
    }
}

class Reader
{
    private BufferedReader x;
    private StringTokenizer st;

    public Reader(InputStream in)
    {
        x = new BufferedReader(new InputStreamReader(in));
        st = null;
    }
    public String nextString() throws IOException
    {
        while( st==null || !st.hasMoreTokens() )
            st = new StringTokenizer(x.readLine());
        return st.nextToken();
    }
    public int nextInt() throws IOException
    {
        return Integer.parseInt(nextString());
    }
    public long nextLong() throws IOException
    {
        return Long.parseLong(nextString());
    }
    public double nextDouble() throws IOException
    {
        return Double.parseDouble(nextString());
    }
}

</source>
<source file="../preprocessed_Datasplit/test/0/s639169281P.java" startline="1" endline="102" pcid="63017">
import java.util.*;
import java.io.*;
import java.math.*;

import static java.lang.Math.*;
import static java.util.Arrays.*;
import static java.util.Collections.*;

public class Main{
    static long mod=1000000007;
    public  static void main(String[] args)   throws Exception, IOException{
        Reader sc = new Reader(System.in);
        PrintWriter out=new PrintWriter(System.out);

        int n=sc.nextInt(),a=0;
        long ans=0,e[]=new long[n];
        for( int i=0; i<n; i++ ){
            e[i] = sc.nextLong();
        }
        while(true){
            sort(e);
            int x=-1;
                if(e[n-1]<n) break;
            long c=e[n-1]/n;
            ans+=c;
            for( int i=0; i<n-1; i++ ){
                e[i] += c;
            }
            e[n-1] -= c * n;
        }
        out.println(ans);
        out.flush();
    }

    static void db(Object... os){
        System.err.println(Arrays.deepToString(os));
    }

    static boolean validpos(int x,int y,int r, int c){
        return x<r && 0<=x && y<c && 0<=y;
    }

    static boolean bit(long x,int k){
        return  ( 0 < ( (x>>k) & 1 )  )  ? true:false;
    }
}

class Pair implements Comparable<Pair>{
    int x,y,id;
    Pair(int x, int y,int id) {
        this.x=x;
        this.y=y;
        this.id=id;
    }
    public int compareTo(Pair p){
        return p.x -     x;
    }
}

class P implements Comparable<P>{
    int diff,id1,id2;
    P(int diff, int id1,int id2) {
        this.diff=diff;
        this.id1=id1;
        this.id2=id2;
    }

    public int compareTo(P p){
        return diff - p.diff;
    }
}

class Reader
{
    private BufferedReader x;
    private StringTokenizer st;

    public Reader(InputStream in)
    {
        x = new BufferedReader(new InputStreamReader(in));
        st = null;
    }
    public String nextString() throws IOException
    {
        while( st==null || !st.hasMoreTokens() )
            st = new StringTokenizer(x.readLine());
        return st.nextToken();
    }
    public int nextInt() throws IOException
    {
        return Integer.parseInt(nextString());
    }
    public long nextLong() throws IOException
    {
        return Long.parseLong(nextString());
    }
    public double nextDouble() throws IOException
    {
        return Double.parseDouble(nextString());
    }
}

</source>
</class>

<class classid="63" nclones="2" nlines="31" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s959716567P.java" startline="1" endline="25" pcid="26499">
import java.util.Scanner;
	import java.util.*;

	public class Main{

		public static void main(String[] args) {

			Scanner sc=new Scanner(System.in);

		while(true){int n=sc.nextInt();if(n==0){break;}
		int N[]=new int[n+1];

		for(int i=0;i<n+1;i++){N[i]=sc.nextInt();}

		bi:for(int i=0;i<n+1;i++){
			List<Integer>tousa=new ArrayList<Integer>();
		for(int p=0;p<n+1;p++){
			tousa.add(N[p]);}
		tousa.remove(i);
			for(int p=0;p<n-2;p++){
				if(tousa.get(p)-tousa.get(p+1)!=tousa.get(p+1)-tousa.get(p+2)){continue bi;}
			}System.out.println(N[i]);break;

		}}}}

</source>
<source file="../preprocessed_Datasplit/test/0/s863917875P.java" startline="1" endline="25" pcid="63776">
import java.util.Scanner;
	import java.util.*;

	public class Main{

		public static void main(String[] args) {

			Scanner sc=new Scanner(System.in);

		while(true){int n=sc.nextInt();if(n==0){break;}
		int N[]=new int[n+1];

		for(int i=0;i<n+1;i++){N[i]=sc.nextInt();}

		bi:for(int i=0;i<n+1;i++){
			List<Integer>tousa=new ArrayList<Integer>();
		for(int p=0;p<n+1;p++){
			tousa.add(N[p]);}
		tousa.remove(i);
			for(int p=0;p<n-2;p++){
				if(tousa.get(p)-tousa.get(p+1)!=tousa.get(p+1)-tousa.get(p+2)){continue bi;}
			}System.out.println(N[i]);break;

		}}}}

</source>
</class>

<class classid="64" nclones="2" nlines="82" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s972659004P.java" startline="1" endline="100" pcid="26924">
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main {

  public static void main(String[] args) {

    new Main().run();
  }

  public void run() {

    try(BufferedReader br = new BufferedReader(new InputStreamReader(System.in))) {

      int n = Integer.parseInt(br.readLine());
      Card[] cards = new Card[n];
      char suit;
      int  value;

      for ( int i=0; i<n; i++ ) {
        suit = (char)br.read(); br.skip(1);
        value = Integer.parseInt(br.readLine());
        cards[i] = new Card(suit, value, i);
      }

      quickSortOfCards(cards, 0, n-1);
      dispCardArray(cards);
    }
    catch(IOException e) {
      System.out.println("IOException!");
    }
  }

  public void quickSortOfCards(Card[] card, int p, int r) {

    if( p < r) {
      int q = partitionOfCards(card, p, r);
      quickSortOfCards(card, p, q-1);
      quickSortOfCards(card, q+1, r);
    }
  }

  public int partitionOfCards(Card[] card, int p, int r) {

    int x = card[r].value;
    int i = p-1;
    Card t;

    for(int j=p; j<r; j++) {
      if(card[j].value <= x) {
        t = card[++i]; card[i] = card[j]; card[j] = t;
      }
    }
    t = card[i+1]; card[i+1] = card[r]; card[r] = t;

    return i+1;
  }

public void dispCardArray(Card[] target) {
  StringBuilder s = new StringBuilder();
  int l=target.length;
  boolean isStable = true;
  String sortState = "Stable";

  s.append(target[0]).append("\n");
  for (int i=1; i<l; i++) {
    s.append(target[i]).append("\n");
    if(isStable && target[i-1].value == target[i].value
      && target[i-1].storedNo > target[i].storedNo) {
      sortState = "Not stable";
      isStable = false;
    }
  }

  System.out.println(sortState);
  System.out.print(s);
  }
}

class Card {
  char suit;
  int value;
  int storedNo;

  public Card( char suit, int value, int storedNo ) {
    this.suit  = suit;
    this.value = value;
    this.storedNo = storedNo;
  }
  public Card( Card card ) {
    this(card.suit, card.value, card.storedNo);
  }

  @Override
  public String toString() {
    return suit + " " + String.valueOf(value);
  }
}

</source>
<source file="../preprocessed_Datasplit/test/0/s870448175P.java" startline="1" endline="100" pcid="63807">
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main {

  public static void main(String[] args) {

    new Main().run();
  }

  public void run() {

    try(BufferedReader br = new BufferedReader(new InputStreamReader(System.in))) {

      int n = Integer.parseInt(br.readLine());
      Card[] cards = new Card[n];
      char suit;
      int  value;

      for ( int i=0; i<n; i++ ) {
        suit = (char)br.read(); br.skip(1);
        value = Integer.parseInt(br.readLine());
        cards[i] = new Card(suit, value, i);
      }

      quickSortOfCards(cards, 0, n-1);
      dispCardArray(cards);
    }
    catch(IOException e) {
      System.out.println("IOException!");
    }
  }

  public void quickSortOfCards(Card[] card, int p, int r) {

    if( p < r) {
      int q = partitionOfCards(card, p, r);
      quickSortOfCards(card, p, q-1);
      quickSortOfCards(card, q+1, r);
    }
  }

  public int partitionOfCards(Card[] card, int p, int r) {

    int x = card[r].value;
    int i = p-1;
    Card t;

    for(int j=p; j<r; j++) {
      if(card[j].value <= x) {
        t = card[++i]; card[i] = card[j]; card[j] = t;
      }
    }
    t = card[i+1]; card[i+1] = card[r]; card[r] = t;

    return i+1;
  }

public void dispCardArray(Card[] target) {
  StringBuilder s = new StringBuilder();
  int l=target.length;
  boolean isStable = true;
  String sortState = "Stable";

  s.append(target[0]).append("\n");
  for (int i=1; i<l; i++) {
    s.append(target[i]).append("\n");
    if(isStable && target[i-1].value == target[i].value
      && target[i-1].storedNo > target[i].storedNo) {
      sortState = "Not stable";
      isStable = false;
    }
  }

  System.out.println(sortState);
  System.out.print(s);
  }
}

class Card {
  char suit;
  int value;
  int storedNo;

  public Card( char suit, int value, int storedNo ) {
    this.suit  = suit;
    this.value = value;
    this.storedNo = storedNo;
  }
  public Card( Card card ) {
    this(card.suit, card.value, card.storedNo);
  }

  @Override
  public String toString() {
    return suit + " " + String.valueOf(value);
  }
}

</source>
</class>

<class classid="65" nclones="3" nlines="91" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s043913838P.java" startline="1" endline="131" pcid="28220">
import java.util.*;
import java.lang.*;
import java.io.*;

class Main{

    private static int[][] used;
    private static int N,M,L;
    private static List<Pox>[] list;
    private static final int INF = 100000000;

    private static class Pox{
	public int B,D,E;
	Pox(){
	    B = D = E = 0;
	}

	Pox(int b,int d,int e){
	    B = b;
	    D = d;
	    E = e;
	}
    }

    private static class Eleac implements Comparable<Eleac>{
	public int id,L,num;

	Eleac(){
	    id = L = num = 0;
	}

	Eleac(int a,int b,int c){
	    id = a;
	    L = b;
	    num = c;
	}

	@Override
	public int compareTo(Eleac a){
	    return 1;
	}

    }

     @SuppressWarnings("unchecked")
      public static void main(String args[])throws IOException{
	  BufferedReader in = new BufferedReader(new InputStreamReader(System.in));

	  while(true)
	      {
		  String[] elements = in.readLine().split(" ");
		  N = Integer.parseInt(elements[0]);
		  M = Integer.parseInt(elements[1]);
		  L = Integer.parseInt(elements[2]);
		  if(N == 0 && M == 0 && L == 0)
		      break;

		  used = new int[N+1][L+1];
		  list = new ArrayList[N+2];

		  for(int i=0;i<N+1;i++)
		      for(int j=0;j<L+1;j++)
			  used[i][j] = INF;

		  for(int i=0;i<N+1;i++)
		      list[i] = new ArrayList<Pox>();

		  for(int i=0;i<M;i++)
		      {
			 elements = in.readLine().split(" ");
			 int A,B,D,E;
			  A = Integer.parseInt(elements[0]);
			  B = Integer.parseInt(elements[1]);
			  D = Integer.parseInt(elements[2]);
			  E = Integer.parseInt(elements[3]);

			  list[A].add(new Pox(B,D,E));
			  list[B].add(new Pox(A,D,E));
		      }

		  Queue<Eleac> que = new PriorityQueue<Eleac>();

		  que.offer(new Eleac(1,L,0));
		  used[1][L] = 0;

		  int men = INF;
		  while(que.size() > 0)
		      {
			  Eleac p = que.poll();
			  int now = p.id;
			  int money = p.L;
			  int val = p.num;

			  if(now == N)
			      {
				  used[now][money] = Math.min(used[now][money],val);
				  continue;
			      }

			  for(int i=0;i<list[now].size();i++)
			      {
				  int need = list[now].get(i).D;

				  int new_pos = list[now].get(i).B;
				  int the_number = list[now].get(i).E;

				  if(money-need >= 0 && used[new_pos][money-need] > val)
				      {
					  used[new_pos][money-need] = val;
					  que.add(new Eleac(new_pos,money-need,val));
				      }
				  if(used[new_pos][money] > val+the_number)
				      {
					  used[new_pos][money] = val+the_number;
					  que.add(new Eleac(new_pos,money,val+the_number));
				      }

			      }

		      }

		  for(int i=0;i<=L;i++)
		      {
			  men = Math.min(men,used[N][i]);
		      }
		  System.out.println(men);
	      }
      }

}

</source>
<source file="../preprocessed_Datasplit/test/0/s983391347P.java" startline="1" endline="131" pcid="64179">
import java.util.*;
import java.lang.*;
import java.io.*;

class Main{

    private static int[][] used;
    private static int N,M,L;
    private static List<Pox>[] list;
    private static final int INF = 100000000;

    private static class Pox{
	public int B,D,E;
	Pox(){
	    B = D = E = 0;
	}

	Pox(int b,int d,int e){
	    B = b;
	    D = d;
	    E = e;
	}
    }

    private static class Eleac implements Comparable<Eleac>{
	public int id,L,num;

	Eleac(){
	    id = L = num = 0;
	}

	Eleac(int a,int b,int c){
	    id = a;
	    L = b;
	    num = c;
	}

	@Override
	public int compareTo(Eleac a){
	    return 1;
	}

    }

     @SuppressWarnings("unchecked")
      public static void main(String args[])throws IOException{
	  BufferedReader in = new BufferedReader(new InputStreamReader(System.in));

	  while(true)
	      {
		  String[] elements = in.readLine().split(" ");
		  N = Integer.parseInt(elements[0]);
		  M = Integer.parseInt(elements[1]);
		  L = Integer.parseInt(elements[2]);
		  if(N == 0 && M == 0 && L == 0)
		      break;

		  used = new int[N+1][L+1];
		  list = new ArrayList[N+2];

		  for(int i=0;i<N+1;i++)
		      for(int j=0;j<L+1;j++)
			  used[i][j] = INF;

		  for(int i=0;i<N+1;i++)
		      list[i] = new ArrayList<Pox>();

		  for(int i=0;i<M;i++)
		      {
			 elements = in.readLine().split(" ");
			 int A,B,D,E;
			  A = Integer.parseInt(elements[0]);
			  B = Integer.parseInt(elements[1]);
			  D = Integer.parseInt(elements[2]);
			  E = Integer.parseInt(elements[3]);

			  list[A].add(new Pox(B,D,E));
			  list[B].add(new Pox(A,D,E));
		      }

		  Queue<Eleac> que = new PriorityQueue<Eleac>();

		  que.offer(new Eleac(1,L,0));
		  used[1][L] = 0;

		  int men = INF;
		  while(que.size() > 0)
		      {
			  Eleac p = que.poll();
			  int now = p.id;
			  int money = p.L;
			  int val = p.num;

			  if(now == N)
			      {
				  used[now][money] = Math.min(used[now][money],val);
				  continue;
			      }

			  for(int i=0;i<list[now].size();i++)
			      {
				  int need = list[now].get(i).D;

				  int new_pos = list[now].get(i).B;
				  int the_number = list[now].get(i).E;

				  if(money-need >= 0 && used[new_pos][money-need] > val)
				      {
					  used[new_pos][money-need] = val;
					  que.add(new Eleac(new_pos,money-need,val));
				      }
				  if(used[new_pos][money] > val+the_number)
				      {
					  used[new_pos][money] = val+the_number;
					  que.add(new Eleac(new_pos,money,val+the_number));
				      }

			      }

		      }

		  for(int i=0;i<=L;i++)
		      {
			  men = Math.min(men,used[N][i]);
		      }
		  System.out.println(men);
	      }
      }

}

</source>
<source file="../preprocessed_Datasplit/test/0/s133051952P.java" startline="1" endline="131" pcid="61292">
import java.util.*;
import java.lang.*;
import java.io.*;

class Main{

    private static int[][] used;
    private static int N,M,L;
    private static List<Pox>[] list;
    private static final int INF = 100000000;

    private static class Pox{
    public int B,D,E;
    Pox(){
        B = D = E = 0;
    }

    Pox(int b,int d,int e){
        B = b;
        D = d;
        E = e;
    }
    }

    private static class Eleac implements Comparable<Eleac>{
    public int id,L,num;

    Eleac(){
        id = L = num = 0;
    }

    Eleac(int a,int b,int c){
        id = a;
        L = b;
        num = c;
    }

    @Override
    public int compareTo(Eleac a){
        return 1;
    }

    }

     @SuppressWarnings("unchecked")
      public static void main(String args[])throws IOException{
      BufferedReader in = new BufferedReader(new InputStreamReader(System.in));

      while(true)
          {
          String[] elements = in.readLine().split(" ");
          N = Integer.parseInt(elements[0]);
          M = Integer.parseInt(elements[1]);
          L = Integer.parseInt(elements[2]);
          if(N == 0 && M == 0 && L == 0)
              break;

          used = new int[N+1][L+1];
          list = new ArrayList[N+2];

          for(int i=0;i<N+1;i++)
              for(int j=0;j<L+1;j++)
              used[i][j] = INF;

          for(int i=0;i<N+1;i++)
              list[i] = new ArrayList<Pox>();

          for(int i=0;i<M;i++)
              {
             elements = in.readLine().split(" ");
             int A,B,D,E;
              A = Integer.parseInt(elements[0]);
              B = Integer.parseInt(elements[1]);
              D = Integer.parseInt(elements[2]);
              E = Integer.parseInt(elements[3]);

              list[A].add(new Pox(B,D,E));
              list[B].add(new Pox(A,D,E));
              }

          Queue<Eleac> que = new PriorityQueue<Eleac>();

          que.offer(new Eleac(1,L,0));
          used[1][L] = 0;

          int men = INF;
          while(que.size() > 0)
              {
              Eleac p = que.poll();
              int now = p.id;
              int money = p.L;
              int val = p.num;

              if(now == N)
                  {
                  used[now][money] = Math.min(used[now][money],val);
                  continue;
                  }

              for(int i=0;i<list[now].size();i++)
                  {
                  int need = list[now].get(i).D;

                  int new_pos = list[now].get(i).B;
                  int the_number = list[now].get(i).E;

                  if(money-need >= 0 && used[new_pos][money-need] > val)
                      {
                      used[new_pos][money-need] = val;
                      que.add(new Eleac(new_pos,money-need,val));
                      }
                  if(used[new_pos][money] > val+the_number)
                      {
                      used[new_pos][money] = val+the_number;
                      que.add(new Eleac(new_pos,money,val+the_number));
                      }

                  }

              }

          for(int i=0;i<=L;i++)
              {
              men = Math.min(men,used[N][i]);
              }
          System.out.println(men);
          }
      }

}

</source>
</class>

<class classid="66" nclones="2" nlines="16" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s020151971P.java" startline="1" endline="24" pcid="29360">
import java.util.Scanner;

public class Main {

	public static int LOAN = 100000;

	public static void main(String[] args) {

		@SuppressWarnings("resource")
		Scanner sc = new Scanner(System.in);
		int input = sc.nextInt();
		double result = LOAN;

		for (int i = 0; input > i; i++) {

			result = result * 1.05;

			result = Math.ceil(result / 1000);
			result = result * 1000;
		}
		System.out.println((int) result);
	}
}

</source>
<source file="../preprocessed_Datasplit/test/0/s111684299P.java" startline="1" endline="24" pcid="61217">
import java.util.Scanner;

public class Main{

	public static int LOAN = 100000;

	public static void main(String[] args) {

		@SuppressWarnings("resource")
		Scanner sc = new Scanner(System.in);
		int input = sc.nextInt();
		double result = LOAN;

		for (int i = 0; input > i; i++) {

			result = result * 1.05;

			result = Math.ceil(result / 1000);
			result = result * 1000;
		}
		System.out.println((int) result);
	}
}

</source>
</class>

<class classid="67" nclones="2" nlines="41" similarity="100">
<source file="../preprocessed_Datasplit/train/0/s007673167P.java" startline="1" endline="44" pcid="29869">
import java.util.Scanner;

public class Main{

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		while(true){
			int h = sc.nextInt();
			int w = sc.nextInt();
			if((h|w)==0)break;
			char[][] m = new char[h][w];
			for(int i=0;i<h;i++)m[i]=sc.next().toCharArray();
			int[][] c = new int[h][w];
			for(int i=0;i<h;i++){
				int x = 1;
				for(int j=w-1;j>=0;j--){
					if(m[i][j]=='.'){
						c[i][j] = x++;
					}
					else{
						c[i][j] = 0;
						x = 1;
					}
				}
			}
			int max = 0;
			for(int i=0;i<h;i++){
				for(int j=0;j<w;j++){
					if(0<i&&c[i][j]==c[i-1][j]||c[i][j]==0)continue;
					int k = 1;
					int min = c[i][j];
					max = Math.max(max, k*min);
					while(i+k<h&&c[i+k][j]>0){
						min = Math.min(min, c[i+k][j]);
						k++;
						max = Math.max(max, k*min);
					}
				}
			}
			System.out.println(max);
		}
	}
}

</source>
<source file="../preprocessed_Datasplit/test/0/s742875524P.java" startline="1" endline="44" pcid="63371">
import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		while(true){
			int h = sc.nextInt();
			int w = sc.nextInt();
			if((h|w)==0)break;
			char[][] m = new char[h][w];
			for(int i=0;i<h;i++)m[i]=sc.next().toCharArray();
			int[][] c = new int[h][w];
			for(int i=0;i<h;i++){
				int x = 1;
				for(int j=w-1;j>=0;j--){
					if(m[i][j]=='.'){
						c[i][j] = x++;
					}
					else{
						c[i][j] = 0;
						x = 1;
					}
				}
			}
			int max = 0;
			for(int i=0;i<h;i++){
				for(int j=0;j<w;j++){
					if(0<i&&c[i][j]==c[i-1][j]||c[i][j]==0)continue;
					int k = 1;
					int min = c[i][j];
					max = Math.max(max, k*min);
					while(i+k<h&&c[i+k][j]>0){
						min = Math.min(min, c[i+k][j]);
						k++;
						max = Math.max(max, k*min);
					}
				}
			}
			System.out.println(max);
		}
	}
}

</source>
</class>

<class classid="68" nclones="2" nlines="21" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p00016_2P.java" startline="1" endline="29" pcid="30544">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        double x = 0.0, y = 0.0;
        double angle = 0.0;

        while (true) {
            String line = sc.nextLine().trim();
            if (line.equals("0,0") || line.equals("0, 0")) break;

            String[] parts = line.split(",");
            int d = Integer.parseInt(parts[0].trim());
            int t = Integer.parseInt(parts[1].trim());

            double rad = Math.toRadians(angle);
            x += d * Math.sin(rad);
            y += d * Math.cos(rad);

            angle += t;
        }

        System.out.println((int)x);
        System.out.println((int)y);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p00016_3P.java" startline="1" endline="28" pcid="64247">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        double x = 0.0, y = 0.0;
        double angle = 0.0;

        while (true) {
            String line = sc.nextLine().trim();
            if (line.equals("0,0") || line.equals("0, 0")) break;
            String[] parts = line.split(",");
            int d = Integer.parseInt(parts[0].trim());
            int t = Integer.parseInt(parts[1].trim());

            double rad = Math.toRadians(angle);
            x += d * Math.sin(rad);
            y += d * Math.cos(rad);

            angle += t;
        }

        System.out.println((int)x);
        System.out.println((int)y);
    }
}

</source>
</class>

<class classid="69" nclones="3" nlines="32" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p00102_2P.java" startline="1" endline="39" pcid="30930">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int n = sc.nextInt();
            if (n == 0) break;

            int[][] table = new int[n][n];
            int[] rowSum = new int[n];
            int[] colSum = new int[n];
            int totalSum = 0;

            for (int i = 0; i < n; i++) {
                for (int j = 0; j < n; j++) {
                    table[i][j] = sc.nextInt();
                    rowSum[i] += table[i][j];
                    colSum[j] += table[i][j];
                    totalSum += table[i][j];
                }
            }

            for (int i = 0; i < n; i++) {
                for (int j = 0; j < n; j++) {
                    System.out.printf("%5d", table[i][j]);
                }
                System.out.printf("%5d\n", rowSum[i]);
            }

            for (int j = 0; j < n; j++) {
                System.out.printf("%5d", colSum[j]);
            }
            System.out.printf("%5d\n", totalSum);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p00102_1P.java" startline="1" endline="39" pcid="64288">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int n = sc.nextInt();
            if (n == 0) break;

            int[][] table = new int[n][n];
            int[] rowSum = new int[n];
            int[] colSum = new int[n];
            int totalSum = 0;

            for (int i = 0; i < n; i++) {
                for (int j = 0; j < n; j++) {
                    table[i][j] = sc.nextInt();
                    rowSum[i] += table[i][j];
                    colSum[j] += table[i][j];
                    totalSum += table[i][j];
                }
            }

            for (int i = 0; i < n; i++) {
                for (int j = 0; j < n; j++) {
                    System.out.printf("%5d", table[i][j]);
                }
                System.out.printf("%5d\n", rowSum[i]);
            }

            for (int j = 0; j < n; j++) {
                System.out.printf("%5d", colSum[j]);
            }
            System.out.printf("%5d\n", totalSum);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p00102_4P.java" startline="1" endline="38" pcid="30935">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int n = sc.nextInt();
            if (n == 0) break;

            int[][] table = new int[n][n];
            int[] rowSum = new int[n];
            int[] colSum = new int[n];
            int totalSum = 0;

            for (int i = 0; i < n; i++) {
                for (int j = 0; j < n; j++) {
                    table[i][j] = sc.nextInt();
                    rowSum[i] += table[i][j];
                    colSum[j] += table[i][j];
                    totalSum += table[i][j];
                }
            }

            for (int i = 0; i < n; i++) {
                for (int j = 0; j < n; j++) {
                    System.out.printf("%5d", table[i][j]);
                }
                System.out.printf("%5d\n", rowSum[i]);
            }
            for (int j = 0; j < n; j++) {
                System.out.printf("%5d", colSum[j]);
            }
            System.out.printf("%5d\n", totalSum);
        }
    }
}

</source>
</class>

<class classid="70" nclones="3" nlines="22" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p00105_0P.java" startline="1" endline="24" pcid="30944">
import java.util.*;

public class BookIndex {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        TreeMap<String, TreeSet<Integer>> index = new TreeMap<>();
        while (sc.hasNext()) {
            String word = sc.next();
            if (!sc.hasNextInt()) break;
            int page = sc.nextInt();
            index.computeIfAbsent(word, k -> new TreeSet<>()).add(page);
        }
        for (String word : index.keySet()) {
            System.out.println(word);
            TreeSet<Integer> pages = index.get(word);
            StringBuilder sb = new StringBuilder();
            for (int p : pages) {
                sb.append(p).append(" ");
            }
            System.out.println(sb.toString().trim());
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p00105_3P.java" startline="1" endline="24" pcid="64289">
import java.util.*;

public class BookIndex {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        TreeMap<String, TreeSet<Integer>> index = new TreeMap<>();
        while (sc.hasNext()) {
            String word = sc.next();
            if (!sc.hasNextInt()) break;
            int page = sc.nextInt();
            index.computeIfAbsent(word, k -> new TreeSet<>()).add(page);
        }
        for (String word : index.keySet()) {
            System.out.println(word);
            TreeSet<Integer> pages = index.get(word);
            StringBuilder sb = new StringBuilder();
            for (int p : pages) {
                sb.append(p).append(" ");
            }
            System.out.println(sb.toString().trim());
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p00105_1P.java" startline="1" endline="24" pcid="30945">
import java.util.*;

public class BookIndex {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        TreeMap<String, TreeSet<Integer>> index = new TreeMap<>();
        while (sc.hasNext()) {
            String word = sc.next();
            if (!sc.hasNextInt()) break;
            int page = sc.nextInt();
            index.computeIfAbsent(word, k -> new TreeSet<>()).add(page);
        }
        for (String word : index.keySet()) {
            System.out.println(word);
            TreeSet<Integer> pages = index.get(word);
            StringBuilder sb = new StringBuilder();
            for (int p : pages) {
                sb.append(p).append(" ");
            }
            System.out.println(sb.toString().trim());
        }
    }
}

</source>
</class>

<class classid="71" nclones="5" nlines="12" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p00134_0P.java" startline="1" endline="14" pcid="31061">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        long sum = 0;
        for (int i = 0; i < n; i++) {
            sum += sc.nextInt();
        }
        System.out.println(sum / n);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p00134_3P.java" startline="1" endline="14" pcid="64301">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        long sum = 0;
        for (int i = 0; i < n; i++) {
            sum += sc.nextInt();
        }
        System.out.println(sum / n);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p00134_4P.java" startline="1" endline="14" pcid="31065">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        long sum = 0;
        for(int i = 0; i < n; i++) {
            sum += sc.nextInt();
        }
        System.out.println(sum / n);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p00134_2P.java" startline="1" endline="14" pcid="31064">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        long sum = 0;
        for (int i = 0; i < n; i++) {
            sum += sc.nextInt();
        }
        System.out.println(sum / n);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p00134_3P.java" startline="1" endline="16" pcid="46193">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        long sum = 0;

        for (int i = 0; i < n; i++) {
            sum += sc.nextInt();
        }

        System.out.println(sum / n);
    }
}

</source>
</class>

<class classid="72" nclones="6" nlines="26" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p00241_0P.java" startline="1" endline="31" pcid="31377">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int n = sc.nextInt();
            if (n == 0) break;
            for (int i = 0; i < n; i++) {
                int x1 = sc.nextInt();
                int y1 = sc.nextInt();
                int z1 = sc.nextInt();
                int w1 = sc.nextInt();
                int x2 = sc.nextInt();
                int y2 = sc.nextInt();
                int z2 = sc.nextInt();
                int w2 = sc.nextInt();

                int x3 = x1 * x2 - y1 * y2 - z1 * z2 - w1 * w2;
                int y3 = x1 * y2 + y1 * x2 + z1 * w2 - w1 * z2;
                int z3 = x1 * z2 - y1 * w2 + z1 * x2 + w1 * y2;
                int w3 = x1 * w2 + y1 * z2 - z1 * y2 + w1 * x2;

                System.out.println(x3 + " " + y3 + " " + z3 + " " + w3);
            }
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00241_0P.java" startline="1" endline="33" pcid="65182">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int n = sc.nextInt();
            if (n == 0) break;

            for (int i = 0; i < n; i++) {
                int x1 = sc.nextInt();
                int y1 = sc.nextInt();
                int z1 = sc.nextInt();
                int w1 = sc.nextInt();
                int x2 = sc.nextInt();
                int y2 = sc.nextInt();
                int z2 = sc.nextInt();
                int w2 = sc.nextInt();

                int x3 = x1*x2 - y1*y2 - z1*z2 - w1*w2;
                int y3 = x1*y2 + y1*x2 + z1*w2 - w1*z2;
                int z3 = x1*z2 - y1*w2 + z1*x2 + w1*y2;
                int w3 = x1*w2 + y1*z2 - z1*y2 + w1*x2;

                System.out.println(x3 + " " + y3 + " " + z3 + " " + w3);
            }
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p00241_2P.java" startline="1" endline="33" pcid="38954">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int n = sc.nextInt();
            if (n == 0) break;

            for (int i = 0; i < n; i++) {
                int x1 = sc.nextInt();
                int y1 = sc.nextInt();
                int z1 = sc.nextInt();
                int w1 = sc.nextInt();
                int x2 = sc.nextInt();
                int y2 = sc.nextInt();
                int z2 = sc.nextInt();
                int w2 = sc.nextInt();

                int x3 = x1*x2 - y1*y2 - z1*z2 - w1*w2;
                int y3 = x1*y2 + y1*x2 + z1*w2 - w1*z2;
                int z3 = x1*z2 - y1*w2 + z1*x2 + w1*y2;
                int w3 = x1*w2 + y1*z2 - z1*y2 + w1*x2;

                System.out.println(x3 + " " + y3 + " " + z3 + " " + w3);
            }
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p00241_4P.java" startline="1" endline="33" pcid="38955">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int n = sc.nextInt();
            if (n == 0) break;

            for (int i = 0; i < n; i++) {
                int x1 = sc.nextInt();
                int y1 = sc.nextInt();
                int z1 = sc.nextInt();
                int w1 = sc.nextInt();
                int x2 = sc.nextInt();
                int y2 = sc.nextInt();
                int z2 = sc.nextInt();
                int w2 = sc.nextInt();

                int x3 = x1*x2 - y1*y2 - z1*z2 - w1*w2;
                int y3 = x1*y2 + y1*x2 + z1*w2 - w1*z2;
                int z3 = x1*z2 - y1*w2 + z1*x2 + w1*y2;
                int w3 = x1*w2 + y1*z2 - z1*y2 + w1*x2;

                System.out.println(x3 + " " + y3 + " " + z3 + " " + w3);
            }
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p00241_3P.java" startline="1" endline="33" pcid="38953">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int n = sc.nextInt();
            if (n == 0) break;

            for (int i = 0; i < n; i++) {
                int x1 = sc.nextInt();
                int y1 = sc.nextInt();
                int z1 = sc.nextInt();
                int w1 = sc.nextInt();
                int x2 = sc.nextInt();
                int y2 = sc.nextInt();
                int z2 = sc.nextInt();
                int w2 = sc.nextInt();

                int x3 = x1 * x2 - y1 * y2 - z1 * z2 - w1 * w2;
                int y3 = x1 * y2 + y1 * x2 + z1 * w2 - w1 * z2;
                int z3 = x1 * z2 - y1 * w2 + z1 * x2 + w1 * y2;
                int w3 = x1 * w2 + y1 * z2 - z1 * y2 + w1 * x2;

                System.out.println(x3 + " " + y3 + " " + z3 + " " + w3);
            }
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p00241_1P.java" startline="1" endline="33" pcid="38952">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int n = sc.nextInt();
            if (n == 0) break;

            for (int i = 0; i < n; i++) {
                int x1 = sc.nextInt();
                int y1 = sc.nextInt();
                int z1 = sc.nextInt();
                int w1 = sc.nextInt();
                int x2 = sc.nextInt();
                int y2 = sc.nextInt();
                int z2 = sc.nextInt();
                int w2 = sc.nextInt();

                int x3 = x1 * x2 - y1 * y2 - z1 * z2 - w1 * w2;
                int y3 = x1 * y2 + y1 * x2 + z1 * w2 - w1 * z2;
                int z3 = x1 * z2 - y1 * w2 + z1 * x2 + w1 * y2;
                int w3 = x1 * w2 + y1 * z2 - z1 * y2 + w1 * x2;

                System.out.println(x3 + " " + y3 + " " + z3 + " " + w3);
            }
        }

        sc.close();
    }
}

</source>
</class>

<class classid="73" nclones="2" nlines="11" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p00251_3P.java" startline="1" endline="13" pcid="31389">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int total = 0;
        for (int i = 0; i < 10; i++) {
            total += sc.nextInt();
        }
        System.out.println(total);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p00251_1P.java" startline="1" endline="13" pcid="64340">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int total = 0;
        for (int i = 0; i < 10; i++) {
            total += sc.nextInt();
        }
        System.out.println(total);
    }
}

</source>
</class>

<class classid="74" nclones="3" nlines="11" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p00271_3P.java" startline="1" endline="13" pcid="31412">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        for(int i = 0; i < 7; i++) {
            int a = sc.nextInt();
            int b = sc.nextInt();
            System.out.println(a - b);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p00271_1P.java" startline="1" endline="13" pcid="64342">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        for (int i = 0; i < 7; i++) {
            int a = sc.nextInt();
            int b = sc.nextInt();
            System.out.println(a - b);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p00271_4P.java" startline="1" endline="13" pcid="31413">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        for(int i = 0; i < 7; i++) {
            int a = sc.nextInt();
            int b = sc.nextInt();
            System.out.println(a - b);
        }
    }
}

</source>
</class>

<class classid="75" nclones="2" nlines="16" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p00291_2P.java" startline="1" endline="18" pcid="31444">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int[] coins = new int[6];
        for (int i = 0; i < 6; i++) {
            coins[i] = sc.nextInt();
        }
        int[] values = {1, 5, 10, 50, 100, 500};
        int sum = 0;
        for (int i = 0; i < 6; i++) {
            sum += coins[i] * values[i];
        }
        System.out.println(sum >= 1000 ? 1 : 0);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p00291_3P.java" startline="1" endline="18" pcid="64345">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int[] coins = new int[6];
        for (int i = 0; i < 6; i++) {
            coins[i] = sc.nextInt();
        }
        int[] values = {1, 5, 10, 50, 100, 500};
        int sum = 0;
        for (int i = 0; i < 6; i++) {
            sum += coins[i] * values[i];
        }
        System.out.println(sum >= 1000 ? 1 : 0);
    }
}

</source>
</class>

<class classid="76" nclones="4" nlines="17" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p00340_0P.java" startline="1" endline="18" pcid="31474">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int[] sticks = new int[4];
        for (int i = 0; i < 4; i++) {
            sticks[i] = sc.nextInt();
        }
        Arrays.sort(sticks);
        if (sticks[0] == sticks[1] && sticks[2] == sticks[3]) {
            System.out.println("yes");
        } else {
            System.out.println("no");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p00340_3P.java" startline="1" endline="18" pcid="64348">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int[] sticks = new int[4];
        for (int i = 0; i < 4; i++) {
            sticks[i] = sc.nextInt();
        }
        Arrays.sort(sticks);
        if (sticks[0] == sticks[1] && sticks[2] == sticks[3]) {
            System.out.println("yes");
        } else {
            System.out.println("no");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p00340_4P.java" startline="1" endline="18" pcid="31476">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int[] sticks = new int[4];
        for (int i = 0; i < 4; i++) {
            sticks[i] = sc.nextInt();
        }
        Arrays.sort(sticks);
        if (sticks[0] == sticks[1] && sticks[2] == sticks[3]) {
            System.out.println("yes");
        } else {
            System.out.println("no");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p00340_1P.java" startline="1" endline="18" pcid="31475">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int[] sticks = new int[4];
        for (int i = 0; i < 4; i++) {
            sticks[i] = sc.nextInt();
        }
        Arrays.sort(sticks);
        if (sticks[0] == sticks[1] && sticks[2] == sticks[3]) {
            System.out.println("yes");
        } else {
            System.out.println("no");
        }
    }
}

</source>
</class>

<class classid="77" nclones="2" nlines="26" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p00423_3P.java" startline="1" endline="31" pcid="31500">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int n = sc.nextInt();
            if (n == 0) break;

            int scoreA = 0, scoreB = 0;

            for (int i = 0; i < n; i++) {
                int a = sc.nextInt();
                int b = sc.nextInt();

                if (a > b) {
                    scoreA += a + b;
                } else if (a < b) {
                    scoreB += a + b;
                } else {
                    scoreA += a;
                    scoreB += b;
                }
            }

            System.out.println(scoreA + " " + scoreB);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p00423_0P.java" startline="1" endline="27" pcid="64349">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int n = sc.nextInt();
            if (n == 0) break;
            int scoreA = 0, scoreB = 0;
            for (int i = 0; i < n; i++) {
                int a = sc.nextInt();
                int b = sc.nextInt();
                if (a > b) {
                    scoreA += a + b;
                } else if (a < b) {
                    scoreB += a + b;
                } else {
                    scoreA += a;
                    scoreB += b;
                }
            }
            System.out.println(scoreA + " " + scoreB);
        }
    }
}

</source>
</class>

<class classid="78" nclones="2" nlines="18" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p00444_1P.java" startline="1" endline="21" pcid="31566">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int[] coins = {500, 100, 50, 10, 5, 1};
        while (true) {
            int n = sc.nextInt();
            if (n == 0) break;
            int change = 1000 - n;
            int count = 0;
            for (int coin : coins) {
                count += change / coin;
                change %= coin;
            }
            System.out.println(count);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p00444_4P.java" startline="1" endline="22" pcid="64357">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int[] coins = {500, 100, 50, 10, 5, 1};

        while (true) {
            int n = sc.nextInt();
            if (n == 0) break;
            int change = 1000 - n;
            int count = 0;
            for (int coin : coins) {
                count += change / coin;
                change %= coin;
            }
            System.out.println(count);
        }
    }
}

</source>
</class>

<class classid="79" nclones="3" nlines="14" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p00477_2P.java" startline="1" endline="19" pcid="31634">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int total = 0;
        for (int i = 0; i < 4; i++) {
            total += sc.nextInt();
        }

        int minutes = total / 60;
        int seconds = total % 60;

        System.out.println(minutes);
        System.out.println(seconds);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p00477_0P.java" startline="1" endline="16" pcid="64364">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int total = 0;
        for (int i = 0; i < 4; i++) {
            total += sc.nextInt();
        }
        int minutes = total / 60;
        int seconds = total % 60;
        System.out.println(minutes);
        System.out.println(seconds);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p00477_3P.java" startline="1" endline="16" pcid="31635">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int total = 0;
        for (int i = 0; i < 4; i++) {
            total += sc.nextInt();
        }
        int minutes = total / 60;
        int seconds = total % 60;
        System.out.println(minutes);
        System.out.println(seconds);
    }
}

</source>
</class>

<class classid="80" nclones="4" nlines="13" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p00515_1P.java" startline="1" endline="15" pcid="31723">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int sum = 0;
        for (int i = 0; i < 5; i++) {
            int score = sc.nextInt();
            if (score < 40) score = 40;
            sum += score;
        }
        System.out.println(sum / 5);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p00515_3P.java" startline="1" endline="15" pcid="64374">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int sum = 0;
        for(int i = 0; i < 5; i++) {
            int score = sc.nextInt();
            if(score < 40) score = 40;
            sum += score;
        }
        System.out.println(sum / 5);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p00515_4P.java" startline="1" endline="15" pcid="31731">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int sum = 0;
        for (int i = 0; i < 5; i++) {
            int score = sc.nextInt();
            if (score < 40) score = 40;
            sum += score;
        }
        System.out.println(sum / 5);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p00515_2P.java" startline="1" endline="15" pcid="31726">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int sum = 0;
        for(int i = 0; i < 5; i++) {
            int score = sc.nextInt();
            if(score < 40) score = 40;
            sum += score;
        }
        System.out.println(sum / 5);
    }
}

</source>
</class>

<class classid="81" nclones="3" nlines="13" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p00586_0P.java" startline="1" endline="15" pcid="31784">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        while (sc.hasNextInt()) {
            int a = sc.nextInt();
            if (!sc.hasNextInt()) break;
            int b = sc.nextInt();
            System.out.println(a + b);
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p00586_1P.java" startline="1" endline="15" pcid="64378">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        while (sc.hasNextInt()) {
            int a = sc.nextInt();
            if (!sc.hasNextInt()) break;
            int b = sc.nextInt();
            System.out.println(a + b);
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p00586_3P.java" startline="1" endline="15" pcid="31786">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        while (sc.hasNextInt()) {
            int a = sc.nextInt();
            if (!sc.hasNextInt()) break;
            int b = sc.nextInt();
            System.out.println(a + b);
        }
        sc.close();
    }
}

</source>
</class>

<class classid="82" nclones="3" nlines="18" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p01333_1P.java" startline="1" endline="26" pcid="32399">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int A = sc.nextInt();
            int B = sc.nextInt();
            if (A == 0 && B == 0) break;

            int change = B - A;

            int n1000 = change / 1000;
            change %= 1000;

            int n500 = change / 500;
            change %= 500;

            int n100 = change / 100;

            System.out.println(n100 + " " + n500 + " " + n1000);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p01333_0P.java" startline="1" endline="26" pcid="64446">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int A = sc.nextInt();
            int B = sc.nextInt();
            if (A == 0 && B == 0) break;

            int change = B - A;

            int n1000 = change / 1000;
            change %= 1000;

            int n500 = change / 500;
            change %= 500;

            int n100 = change / 100;

            System.out.println(n100 + " " + n500 + " " + n1000);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p01333_4P.java" startline="1" endline="23" pcid="32403">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int A = sc.nextInt();
            int B = sc.nextInt();
            if (A == 0 && B == 0) break;
            int change = B - A;

            int n1000 = change / 1000;
            change %= 1000;
            int n500 = change / 500;
            change %= 500;
            int n100 = change / 100;

            System.out.println(n100 + " " + n500 + " " + n1000);
        }
    }
}

</source>
</class>

<class classid="83" nclones="2" nlines="18" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02233_4P.java" startline="1" endline="20" pcid="32555">
import java.util.Scanner;

public class Main {
    public static int fib(int n) {
        if (n == 0 || n == 1) return 1;
        int a = 1, b = 1;
        for (int i = 2; i <= n; i++) {
            int c = a + b;
            a = b;
            b = c;
        }
        return b;
    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        System.out.println(fib(n));
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p02233_2P.java" startline="1" endline="20" pcid="64465">
import java.util.Scanner;

public class Main {
    public static int fib(int n) {
        if (n == 0 || n == 1) return 1;
        int a = 1, b = 1;
        for (int i = 2; i <= n; i++) {
            int c = a + b;
            a = b;
            b = c;
        }
        return b;
    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        System.out.println(fib(n));
    }
}

</source>
</class>

<class classid="84" nclones="2" nlines="18" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02267_2P.java" startline="1" endline="20" pcid="32668">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        Set<Integer> setS = new HashSet<>();
        for (int i = 0; i < n; i++) {
            setS.add(sc.nextInt());
        }
        int q = sc.nextInt();
        int count = 0;
        for (int i = 0; i < q; i++) {
            int t = sc.nextInt();
            if (setS.contains(t)) count++;
        }
        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p02267_4P.java" startline="1" endline="20" pcid="64487">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        Set<Integer> setS = new HashSet<>();
        for (int i = 0; i < n; i++) {
            setS.add(sc.nextInt());
        }
        int q = sc.nextInt();
        int count = 0;
        for (int i = 0; i < q; i++) {
            int t = sc.nextInt();
            if (setS.contains(t)) count++;
        }
        System.out.println(count);
    }
}

</source>
</class>

<class classid="85" nclones="3" nlines="23" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02314_1P.java" startline="1" endline="25" pcid="32790">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        int[] coins = new int[m];
        for (int i = 0; i < m; i++) {
            coins[i] = sc.nextInt();
        }
        int[] dp = new int[n + 1];
        Arrays.fill(dp, Integer.MAX_VALUE / 2);
        dp[0] = 0;
        for (int i = 1; i <= n; i++) {
            for (int coin : coins) {
                if (i - coin >= 0) {
                    dp[i] = Math.min(dp[i], dp[i - coin] + 1);
                }
            }
        }
        System.out.println(dp[n]);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p02314_0P.java" startline="1" endline="25" pcid="64499">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        int[] coins = new int[m];
        for (int i = 0; i < m; i++) {
            coins[i] = sc.nextInt();
        }
        int[] dp = new int[n + 1];
        Arrays.fill(dp, Integer.MAX_VALUE / 2);
        dp[0] = 0;
        for (int i = 1; i <= n; i++) {
            for (int coin : coins) {
                if (i - coin >= 0) {
                    dp[i] = Math.min(dp[i], dp[i - coin] + 1);
                }
            }
        }
        System.out.println(dp[n]);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02314_4P.java" startline="1" endline="25" pcid="32795">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        int[] coins = new int[m];
        for (int i = 0; i < m; i++) {
            coins[i] = sc.nextInt();
        }
        int[] dp = new int[n + 1];
        Arrays.fill(dp, Integer.MAX_VALUE / 2);
        dp[0] = 0;
        for (int i = 1; i <= n; i++) {
            for (int coin : coins) {
                if (i - coin >= 0) {
                    dp[i] = Math.min(dp[i], dp[i - coin] + 1);
                }
            }
        }
        System.out.println(dp[n]);
    }
}

</source>
</class>

<class classid="86" nclones="2" nlines="25" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02315_0P.java" startline="1" endline="27" pcid="32793">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int W = sc.nextInt();
        int[] v = new int[N];
        int[] w = new int[N];
        for (int i = 0; i < N; i++) {
            v[i] = sc.nextInt();
            w[i] = sc.nextInt();
        }
        int[] dp = new int[W + 1];
        for (int i = 0; i < N; i++) {
            for (int j = W; j >= w[i]; j--) {
                dp[j] = Math.max(dp[j], dp[j - w[i]] + v[i]);
            }
        }
        int max = 0;
        for (int x : dp) {
            if (x > max) max = x;
        }
        System.out.println(max);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p02315_4P.java" startline="1" endline="27" pcid="64501">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int W = sc.nextInt();
        int[] v = new int[N];
        int[] w = new int[N];
        for (int i = 0; i < N; i++) {
            v[i] = sc.nextInt();
            w[i] = sc.nextInt();
        }
        int[] dp = new int[W + 1];
        for (int i = 0; i < N; i++) {
            for (int j = W; j >= w[i]; j--) {
                dp[j] = Math.max(dp[j], dp[j - w[i]] + v[i]);
            }
        }
        int max = 0;
        for (int x : dp) {
            if (x > max) max = x;
        }
        System.out.println(max);
    }
}

</source>
</class>

<class classid="87" nclones="3" nlines="11" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02390_2P.java" startline="1" endline="13" pcid="32922">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int S = sc.nextInt();
        int h = S / 3600;
        int m = (S % 3600) / 60;
        int s = S % 60;
        System.out.println(h + ":" + m + ":" + s);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p02390_0P.java" startline="1" endline="13" pcid="64520">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int S = sc.nextInt();
        int h = S / 3600;
        int m = (S % 3600) / 60;
        int s = S % 60;
        System.out.println(h + ":" + m + ":" + s);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02390_3P.java" startline="1" endline="13" pcid="32924">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int S = sc.nextInt();
        int h = S / 3600;
        int m = (S % 3600) / 60;
        int s = S % 60;
        System.out.println(h + ":" + m + ":" + s);
    }
}

</source>
</class>

<class classid="88" nclones="10" nlines="17" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02394_3P.java" startline="1" endline="19" pcid="32943">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int W = sc.nextInt();
        int H = sc.nextInt();
        int x = sc.nextInt();
        int y = sc.nextInt();
        int r = sc.nextInt();

        if (x - r >= 0 && x + r <= W && y - r >= 0 && y + r <= H) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02394_4P.java" startline="1" endline="19" pcid="65365">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int W = sc.nextInt();
        int H = sc.nextInt();
        int x = sc.nextInt();
        int y = sc.nextInt();
        int r = sc.nextInt();

        if (x - r >= 0 && x + r <= W && y - r >= 0 && y + r <= H) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02394_2P.java" startline="1" endline="19" pcid="32945">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int W = sc.nextInt();
        int H = sc.nextInt();
        int x = sc.nextInt();
        int y = sc.nextInt();
        int r = sc.nextInt();

        if (x - r >= 0 && x + r <= W && y - r >= 0 && y + r <= H) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02394_4P.java" startline="1" endline="19" pcid="32944">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int W = sc.nextInt();
        int H = sc.nextInt();
        int x = sc.nextInt();
        int y = sc.nextInt();
        int r = sc.nextInt();

        if (x - r >= 0 && x + r <= W && y - r >= 0 && y + r <= H) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02394_4P.java" startline="1" endline="19" pcid="55592">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int W = sc.nextInt();
        int H = sc.nextInt();
        int x = sc.nextInt();
        int y = sc.nextInt();
        int r = sc.nextInt();

        if (x - r >= 0 && x + r <= W && y - r >= 0 && y + r <= H) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02394_0P.java" startline="1" endline="19" pcid="40510">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int W = sc.nextInt();
        int H = sc.nextInt();
        int x = sc.nextInt();
        int y = sc.nextInt();
        int r = sc.nextInt();

        if (x - r >= 0 && x + r <= W && y - r >= 0 && y + r <= H) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02394_1P.java" startline="1" endline="19" pcid="40511">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int W = sc.nextInt();
        int H = sc.nextInt();
        int x = sc.nextInt();
        int y = sc.nextInt();
        int r = sc.nextInt();

        if (x - r >= 0 && x + r <= W && y - r >= 0 && y + r <= H) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02394_0P.java" startline="1" endline="19" pcid="55593">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int W = sc.nextInt();
        int H = sc.nextInt();
        int x = sc.nextInt();
        int y = sc.nextInt();
        int r = sc.nextInt();

        if (x - r >= 0 && x + r <= W && y - r >= 0 && y + r <= H) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02394_3P.java" startline="1" endline="20" pcid="55591">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int W = sc.nextInt();
        int H = sc.nextInt();
        int x = sc.nextInt();
        int y = sc.nextInt();
        int r = sc.nextInt();

        if (x - r >= 0 && x + r <= W && y - r >= 0 && y + r <= H) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02394_1P.java" startline="1" endline="19" pcid="55588">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int W = sc.nextInt();
        int H = sc.nextInt();
        int x = sc.nextInt();
        int y = sc.nextInt();
        int r = sc.nextInt();

        if (x - r >= 0 && x + r <= W && y - r >= 0 && y + r <= H) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
</class>

<class classid="89" nclones="2" nlines="17" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02397_4P.java" startline="1" endline="19" pcid="32955">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        while (true) {
            int x = sc.nextInt();
            int y = sc.nextInt();
            if (x == 0 && y == 0) break;
            if (x > y) {
                int temp = x;
                x = y;
                y = temp;
            }
            System.out.println(x + " " + y);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p02397_1P.java" startline="1" endline="19" pcid="64521">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        while (true) {
            int x = sc.nextInt();
            int y = sc.nextInt();
            if (x == 0 && y == 0) break;
            if (x > y) {
                int temp = x;
                x = y;
                y = temp;
            }
            System.out.println(x + " " + y);
        }
    }
}

</source>
</class>

<class classid="90" nclones="4" nlines="12" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02399_0P.java" startline="1" endline="14" pcid="32959">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int d = a / b;
        int r = a % b;
        double f = (double)a / b;
        System.out.printf("%d %d %.5f\n", d, r, f);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p02399_1P.java" startline="1" endline="16" pcid="64522">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();

        int d = a / b;
        int r = a % b;
        double f = (double)a / b;

        System.out.printf("%d %d %.5f\n", d, r, f);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02399_2P.java" startline="1" endline="14" pcid="32961">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int d = a / b;
        int r = a % b;
        double f = (double)a / b;
        System.out.printf("%d %d %.5f\n", d, r, f);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02399_4P.java" startline="1" endline="14" pcid="32962">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int d = a / b;
        int r = a % b;
        double f = (double)a / b;
        System.out.printf("%d %d %.5f\n", d, r, f);
    }
}

</source>
</class>

<class classid="91" nclones="4" nlines="15" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02418_0P.java" startline="1" endline="16" pcid="33046">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.nextLine();
        String p = sc.nextLine();
        String ring = s + s;
        if (ring.contains(p)) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p02418_1P.java" startline="1" endline="17" pcid="66216">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.nextLine();
        String p = sc.nextLine();

        String ring = s + s;
        if (ring.contains(p)) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02418_1P.java" startline="1" endline="16" pcid="33048">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.nextLine();
        String p = sc.nextLine();
        String ring = s + s;
        if (ring.contains(p)) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02418_4P.java" startline="1" endline="16" pcid="33049">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.nextLine();
        String p = sc.nextLine();
        String ring = s + s;
        if (ring.contains(p)) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
</class>

<class classid="92" nclones="3" nlines="12" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02534_0P.java" startline="1" endline="14" pcid="33151">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int K = sc.nextInt();
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < K; i++) {
            sb.append("ACL");
        }
        System.out.println(sb.toString());
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p02534_1P.java" startline="1" endline="14" pcid="64539">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int K = sc.nextInt();
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < K; i++) {
            sb.append("ACL");
        }
        System.out.println(sb.toString());
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02534_4P.java" startline="1" endline="14" pcid="33156">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int K = sc.nextInt();
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < K; i++) {
            sb.append("ACL");
        }
        System.out.println(sb.toString());
    }
}

</source>
</class>

<class classid="93" nclones="2" nlines="16" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02553_4P.java" startline="1" endline="20" pcid="33221">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long a = sc.nextLong();
        long b = sc.nextLong();
        long c = sc.nextLong();
        long d = sc.nextLong();

        long res = Long.MIN_VALUE;
        res = Math.max(res, a * c);
        res = Math.max(res, a * d);
        res = Math.max(res, b * c);
        res = Math.max(res, b * d);

        System.out.println(res);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p02553_2P.java" startline="1" endline="18" pcid="64544">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long a = sc.nextLong();
        long b = sc.nextLong();
        long c = sc.nextLong();
        long d = sc.nextLong();
        long res = Long.MIN_VALUE;
        res = Math.max(res, a * c);
        res = Math.max(res, a * d);
        res = Math.max(res, b * c);
        res = Math.max(res, b * d);
        System.out.println(res);
    }
}

</source>
</class>

<class classid="94" nclones="5" nlines="15" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02570_4P.java" startline="1" endline="16" pcid="33259">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int D = sc.nextInt();
        int T = sc.nextInt();
        int S = sc.nextInt();
        if (D <= T * S) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p02570_2P.java" startline="1" endline="16" pcid="64550">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int D = sc.nextInt();
        int T = sc.nextInt();
        int S = sc.nextInt();
        if (D <= T * S) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02570_0P.java" startline="1" endline="17" pcid="40815">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int D = sc.nextInt();
        int T = sc.nextInt();
        int S = sc.nextInt();

        if (D <= T * S) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02570_2P.java" startline="1" endline="17" pcid="40818">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int D = sc.nextInt();
        int T = sc.nextInt();
        int S = sc.nextInt();

        if (D <= T * S) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02570_1P.java" startline="1" endline="17" pcid="40814">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int D = sc.nextInt();
        int T = sc.nextInt();
        int S = sc.nextInt();

        if (D <= T * S) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
</class>

<class classid="95" nclones="7" nlines="11" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02576_0P.java" startline="1" endline="13" pcid="33282">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int X = sc.nextInt();
        int T = sc.nextInt();
        int batches = (N + X - 1) / X;
        System.out.println(batches * T);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p02576_3P.java" startline="1" endline="13" pcid="64555">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int X = sc.nextInt();
        int T = sc.nextInt();
        int batches = (N + X - 1) / X;
        System.out.println(batches * T);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p02576_0P.java" startline="1" endline="14" pcid="66244">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int X = sc.nextInt();
        int T = sc.nextInt();

        int batches = (N + X - 1) / X;
        System.out.println(batches * T);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02576_4P.java" startline="1" endline="13" pcid="33284">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int X = sc.nextInt();
        int T = sc.nextInt();
        int batches = (N + X - 1) / X;
        System.out.println(batches * T);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p02576_2P.java" startline="1" endline="14" pcid="48388">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int X = sc.nextInt();
        int T = sc.nextInt();

        int batches = (N + X - 1) / X;
        System.out.println(batches * T);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02576_1P.java" startline="1" endline="13" pcid="33283">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int X = sc.nextInt();
        int T = sc.nextInt();
        int batches = (N + X - 1) / X;
        System.out.println(batches * T);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p02576_1P.java" startline="1" endline="14" pcid="48390">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int X = sc.nextInt();
        int T = sc.nextInt();

        int batches = (N + X - 1) / X;
        System.out.println(batches * T);
    }
}

</source>
</class>

<class classid="96" nclones="2" nlines="16" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02596_0P.java" startline="1" endline="18" pcid="33347">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int K = sc.nextInt();
        int mod = 0;
        for (int i = 1; i <= K; i++) {
            mod = (mod * 10 + 7) % K;
            if (mod == 0) {
                System.out.println(i);
                return;
            }
        }
        System.out.println(-1);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p02596_3P.java" startline="1" endline="18" pcid="64560">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int K = sc.nextInt();
        int mod = 0;
        for (int i = 1; i <= K; i++) {
            mod = (mod * 10 + 7) % K;
            if (mod == 0) {
                System.out.println(i);
                return;
            }
        }
        System.out.println(-1);
    }
}

</source>
</class>

<class classid="97" nclones="2" nlines="14" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02624_0P.java" startline="1" endline="16" pcid="33473">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        long ans = 0;
        for (int d = 1; d <= N; d++) {
            int cnt = N / d;
            long sum = (long) d * cnt * (cnt + 1) / 2;
            ans += sum;
        }
        System.out.println(ans);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p02624_3P.java" startline="1" endline="16" pcid="64567">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        long ans = 0;
        for (int d = 1; d <= N; d++) {
            int cnt = N / d;
            long sum = (long) d * cnt * (cnt + 1) / 2;
            ans += sum;
        }
        System.out.println(ans);
    }
}

</source>
</class>

<class classid="98" nclones="2" nlines="17" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02640_0P.java" startline="1" endline="20" pcid="33529">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int X = sc.nextInt();
        int Y = sc.nextInt();

        boolean possible = false;
        for (int cranes = 0; cranes <= X; cranes++) {
            int turtles = X - cranes;
            if (2 * cranes + 4 * turtles == Y) {
                possible = true;
                break;
            }
        }
        System.out.println(possible ? "Yes" : "No");
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p02640_3P.java" startline="1" endline="20" pcid="64572">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int X = sc.nextInt();
        int Y = sc.nextInt();

        boolean possible = false;
        for (int cranes = 0; cranes <= X; cranes++) {
            int turtles = X - cranes;
            if (2 * cranes + 4 * turtles == Y) {
                possible = true;
                break;
            }
        }
        System.out.println(possible ? "Yes" : "No");
    }
}

</source>
</class>

<class classid="99" nclones="2" nlines="14" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02676_2P.java" startline="1" endline="15" pcid="33617">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int K = Integer.parseInt(sc.nextLine());
        String S = sc.nextLine();
        if (S.length() <= K) {
            System.out.println(S);
        } else {
            System.out.println(S.substring(0, K) + "...");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p02676_0P.java" startline="1" endline="15" pcid="64588">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int K = Integer.parseInt(sc.nextLine());
        String S = sc.nextLine();
        if (S.length() <= K) {
            System.out.println(S);
        } else {
            System.out.println(S.substring(0, K) + "...");
        }
    }
}

</source>
</class>

<class classid="100" nclones="4" nlines="14" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02694_4P.java" startline="1" endline="16" pcid="33697">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long X = sc.nextLong();
        long balance = 100;
        int years = 0;
        while (balance < X) {
            balance = balance + balance / 100;
            years++;
        }
        System.out.println(years);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02694_3P.java" startline="1" endline="19" pcid="65445">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long X = sc.nextLong();

        long balance = 100;
        int years = 0;

        while (balance < X) {
            balance = balance + balance / 100;
            years++;
        }

        System.out.println(years);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02694_2P.java" startline="1" endline="19" pcid="41262">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long X = sc.nextLong();

        long balance = 100;
        int years = 0;

        while (balance < X) {
            balance = balance + balance / 100;
            years++;
        }

        System.out.println(years);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02694_1P.java" startline="1" endline="19" pcid="41261">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long X = sc.nextLong();

        long balance = 100;
        int years = 0;

        while (balance < X) {
            balance = balance + balance / 100;
            years++;
        }

        System.out.println(years);
    }
}

</source>
</class>

<class classid="101" nclones="5" nlines="14" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02699_2P.java" startline="1" endline="15" pcid="33719">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int S = sc.nextInt();
        int W = sc.nextInt();
        if (W >= S) {
            System.out.println("unsafe");
        } else {
            System.out.println("safe");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/0/s807680878P.java" startline="1" endline="18" pcid="63596">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int S = sc.nextInt();
        int W = sc.nextInt();

        if(W >= S){
            System.out.println("unsafe");
        }else{
            System.out.println("safe");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02699_2P.java" startline="1" endline="16" pcid="41286">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int S = sc.nextInt();
        int W = sc.nextInt();

        if (W >= S) {
            System.out.println("unsafe");
        } else {
            System.out.println("safe");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02699_3P.java" startline="1" endline="15" pcid="33723">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int S = sc.nextInt();
        int W = sc.nextInt();
        if (W >= S) {
            System.out.println("unsafe");
        } else {
            System.out.println("safe");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02699_0P.java" startline="1" endline="16" pcid="41284">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int S = sc.nextInt();
        int W = sc.nextInt();

        if (W >= S) {
            System.out.println("unsafe");
        } else {
            System.out.println("safe");
        }
    }
}

</source>
</class>

<class classid="102" nclones="2" nlines="12" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02701_2P.java" startline="1" endline="14" pcid="33731">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        Set<String> kinds = new HashSet<>();
        for (int i = 0; i < N; i++) {
            kinds.add(sc.next());
        }
        System.out.println(kinds.size());
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p02701_0P.java" startline="1" endline="14" pcid="64599">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        Set<String> kinds = new HashSet<>();
        for (int i = 0; i < N; i++) {
            kinds.add(sc.next());
        }
        System.out.println(kinds.size());
    }
}

</source>
</class>

<class classid="103" nclones="3" nlines="15" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02707_2P.java" startline="1" endline="20" pcid="33751">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        int[] count = new int[N + 1];

        for (int i = 2; i <= N; i++) {
            int boss = sc.nextInt();
            count[boss]++;
        }

        for (int i = 1; i <= N; i++) {
            System.out.println(count[i]);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p02707_4P.java" startline="1" endline="20" pcid="64602">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        int[] count = new int[N + 1];

        for (int i = 2; i <= N; i++) {
            int boss = sc.nextInt();
            count[boss]++;
        }

        for (int i = 1; i <= N; i++) {
            System.out.println(count[i]);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02707_0P.java" startline="1" endline="19" pcid="33753">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] count = new int[N + 1];

        for (int i = 2; i <= N; i++) {
            int boss = sc.nextInt();
            count[boss]++;
        }

        for (int i = 1; i <= N; i++) {
            System.out.println(count[i]);
        }
    }
}

</source>
</class>

<class classid="104" nclones="2" nlines="16" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02712_4P.java" startline="1" endline="22" pcid="33772">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long N = sc.nextLong();
        long total = N * (N + 1) / 2;

        long cnt3 = N / 3;
        long sum3 = 3 * cnt3 * (cnt3 + 1) / 2;

        long cnt5 = N / 5;
        long sum5 = 5 * cnt5 * (cnt5 + 1) / 2;

        long cnt15 = N / 15;
        long sum15 = 15 * cnt15 * (cnt15 + 1) / 2;

        long ans = total - sum3 - sum5 + sum15;
        System.out.println(ans);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p02712_1P.java" startline="1" endline="23" pcid="64604">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long N = sc.nextLong();

        long total = N * (N + 1) / 2;

        long cnt3 = N / 3;
        long sum3 = 3 * cnt3 * (cnt3 + 1) / 2;

        long cnt5 = N / 5;
        long sum5 = 5 * cnt5 * (cnt5 + 1) / 2;

        long cnt15 = N / 15;
        long sum15 = 15 * cnt15 * (cnt15 + 1) / 2;

        long ans = total - sum3 - sum5 + sum15;
        System.out.println(ans);
    }
}

</source>
</class>

<class classid="105" nclones="3" nlines="16" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02717_0P.java" startline="1" endline="21" pcid="33791">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();

        int temp = A;
        A = B;
        B = temp;

        temp = A;
        A = C;
        C = temp;

        System.out.println(A + " " + B + " " + C);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p02717_2P.java" startline="1" endline="21" pcid="64606">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();

        int temp = A;
        A = B;
        B = temp;

        temp = A;
        A = C;
        C = temp;

        System.out.println(A + " " + B + " " + C);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02717_4P.java" startline="1" endline="21" pcid="33793">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();

        int temp = A;
        A = B;
        B = temp;

        temp = A;
        A = C;
        C = temp;

        System.out.println(A + " " + B + " " + C);
    }
}

</source>
</class>

<class classid="106" nclones="3" nlines="10" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02717_1P.java" startline="1" endline="12" pcid="33792">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int X = sc.nextInt();
        int Y = sc.nextInt();
        int Z = sc.nextInt();
        System.out.println(Z + " " + X + " " + Y);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02717_0P.java" startline="1" endline="13" pcid="65451">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int X = sc.nextInt();
        int Y = sc.nextInt();
        int Z = sc.nextInt();

        System.out.println(Z + " " + X + " " + Y);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02717_4P.java" startline="1" endline="13" pcid="65453">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int X = sc.nextInt();
        int Y = sc.nextInt();
        int Z = sc.nextInt();

        System.out.println(Z + " " + X + " " + Y);
    }
}

</source>
</class>

<class classid="107" nclones="2" nlines="12" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02724_4P.java" startline="1" endline="14" pcid="33825">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long X = sc.nextLong();
        long coins500 = X / 500;
        long rest = X % 500;
        long coins5 = rest / 5;
        long happiness = coins500 * 1000 + coins5 * 5;
        System.out.println(happiness);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p02724_2P.java" startline="1" endline="14" pcid="64610">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long X = sc.nextLong();
        long coins500 = X / 500;
        long rest = X % 500;
        long coins5 = rest / 5;
        long happiness = coins500 * 1000 + coins5 * 5;
        System.out.println(happiness);
    }
}

</source>
</class>

<class classid="108" nclones="7" nlines="11" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02729_0P.java" startline="1" endline="13" pcid="33846">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int M = sc.nextInt();
        int evenPairs = N * (N - 1) / 2;
        int oddPairs = M * (M - 1) / 2;
        System.out.println(evenPairs + oddPairs);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p02729_4P.java" startline="1" endline="15" pcid="66316">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int M = sc.nextInt();

        int evenPairs = N * (N - 1) / 2;
        int oddPairs = M * (M - 1) / 2;

        System.out.println(evenPairs + oddPairs);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02729_2P.java" startline="1" endline="16" pcid="41417">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int M = sc.nextInt();

        int evenPairs = N * (N - 1) / 2;

        int oddPairs = M * (M - 1) / 2;

        System.out.println(evenPairs + oddPairs);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02729_3P.java" startline="1" endline="14" pcid="33848">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int M = sc.nextInt();

        int evenPairs = N * (N - 1) / 2;
        int oddPairs = M * (M - 1) / 2;
        System.out.println(evenPairs + oddPairs);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02729_1P.java" startline="1" endline="15" pcid="41416">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int M = sc.nextInt();

        int evenPairs = N * (N - 1) / 2;
        int oddPairs = M * (M - 1) / 2;

        System.out.println(evenPairs + oddPairs);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02729_0P.java" startline="1" endline="16" pcid="41415">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int M = sc.nextInt();

        int evenPairs = N * (N - 1) / 2;

        int oddPairs = M * (M - 1) / 2;

        System.out.println(evenPairs + oddPairs);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02729_2P.java" startline="1" endline="13" pcid="33847">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int M = sc.nextInt();
        int evenPairs = N * (N - 1) / 2;
        int oddPairs = M * (M - 1) / 2;
        System.out.println(evenPairs + oddPairs);
    }
}

</source>
</class>

<class classid="109" nclones="4" nlines="14" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02766_0P.java" startline="1" endline="16" pcid="33964">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        int count = 0;
        while (N > 0) {
            N /= K;
            count++;
        }
        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p02766_0P.java" startline="1" endline="16" pcid="66334">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        int count = 0;
        while (N > 0) {
            N /= K;
            count++;
        }
        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02766_2P.java" startline="1" endline="16" pcid="33967">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        int count = 0;
        while (N > 0) {
            N /= K;
            count++;
        }
        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p02766_4P.java" startline="1" endline="16" pcid="49060">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        int count = 0;
        while (N > 0) {
            N /= K;
            count++;
        }
        System.out.println(count);
    }
}

</source>
</class>

<class classid="110" nclones="6" nlines="18" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02777_0P.java" startline="1" endline="22" pcid="34008">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        String S = sc.next();
        String T = sc.next();
        int A = sc.nextInt();
        int B = sc.nextInt();
        String U = sc.next();

        if (U.equals(S)) {
            A--;
        } else {
            B--;
        }

        System.out.println(A + " " + B);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/0/s124403888P.java" startline="1" endline="26" pcid="61262">
import java.util.Scanner;

public class Main {

	public static void main(String[] args) {

		Scanner sc = new Scanner(System.in);

		String S = sc.next();
		String T = sc.next();

		int A = sc.nextInt();
		int B = sc.nextInt();

		String U = sc.next();

		if (U.equals(S)){
			A--;
		} else {
			B--;
		}
		System.out.println(A + " " + B);

	}
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02777_3P.java" startline="1" endline="20" pcid="34013">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.next();
        String T = sc.next();
        int A = sc.nextInt();
        int B = sc.nextInt();
        String U = sc.next();

        if (U.equals(S)) {
            A--;
        } else {
            B--;
        }
        System.out.println(A + " " + B);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p02777_1P.java" startline="1" endline="21" pcid="49102">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.next();
        String T = sc.next();
        int A = sc.nextInt();
        int B = sc.nextInt();
        String U = sc.next();

        if (U.equals(S)) {
            A--;
        } else {
            B--;
        }

        System.out.println(A + " " + B);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02777_2P.java" startline="1" endline="21" pcid="41582">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.next();
        String T = sc.next();
        int A = sc.nextInt();
        int B = sc.nextInt();
        String U = sc.next();

        if (U.equals(S)) {
            A--;
        } else {
            B--;
        }

        System.out.println(A + " " + B);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02777_4P.java" startline="1" endline="22" pcid="34016">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        String S = sc.next();
        String T = sc.next();
        int A = sc.nextInt();
        int B = sc.nextInt();
        String U = sc.next();

        if (U.equals(S)) {
            A--;
        } else {
            B--;
        }

        System.out.println(A + " " + B);
    }
}

</source>
</class>

<class classid="111" nclones="8" nlines="10" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02783_0P.java" startline="1" endline="12" pcid="34038">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int H = sc.nextInt();
        int A = sc.nextInt();
        int attacks = (H + A - 1) / A;
        System.out.println(attacks);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p02783_2P.java" startline="1" endline="12" pcid="64638">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int H = sc.nextInt();
        int A = sc.nextInt();
        int attacks = (H + A - 1) / A;
        System.out.println(attacks);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02783_1P.java" startline="1" endline="12" pcid="34039">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int H = sc.nextInt();
        int A = sc.nextInt();
        int attacks = (H + A - 1) / A;
        System.out.println(attacks);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02783_3P.java" startline="1" endline="14" pcid="41609">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int H = sc.nextInt();
        int A = sc.nextInt();

        int attacks = (H + A - 1) / A;

        System.out.println(attacks);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02783_4P.java" startline="1" endline="12" pcid="34041">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int H = sc.nextInt();
        int A = sc.nextInt();
        int attacks = (H + A - 1) / A;
        System.out.println(attacks);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02783_4P.java" startline="1" endline="14" pcid="41611">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int H = sc.nextInt();
        int A = sc.nextInt();

        int attacks = (H + A - 1) / A;

        System.out.println(attacks);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02783_3P.java" startline="1" endline="12" pcid="34040">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int H = sc.nextInt();
        int A = sc.nextInt();
        int attacks = (H + A - 1) / A;
        System.out.println(attacks);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02783_0P.java" startline="1" endline="13" pcid="41610">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int H = sc.nextInt();
        int A = sc.nextInt();

        int attacks = (H + A - 1) / A;
        System.out.println(attacks);
    }
}

</source>
</class>

<class classid="112" nclones="5" nlines="15" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02812_1P.java" startline="1" endline="17" pcid="34144">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = Integer.parseInt(sc.nextLine());
        String S = sc.nextLine();
        int count = 0;
        for (int i = 0; i <= N - 3; i++) {
            if (S.substring(i, i + 3).equals("ABC")) {
                count++;
            }
        }
        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p02812_0P.java" startline="1" endline="17" pcid="64651">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = Integer.parseInt(sc.nextLine());
        String S = sc.nextLine();
        int count = 0;
        for (int i = 0; i <= N - 3; i++) {
            if (S.substring(i, i + 3).equals("ABC")) {
                count++;
            }
        }
        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02812_3P.java" startline="1" endline="18" pcid="34147">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = Integer.parseInt(sc.nextLine());
        String S = sc.nextLine();

        int count = 0;
        for (int i = 0; i <= N - 3; i++) {
            if (S.substring(i, i + 3).equals("ABC")) {
                count++;
            }
        }
        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02812_4P.java" startline="1" endline="17" pcid="34146">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = Integer.parseInt(sc.nextLine());
        String S = sc.nextLine();
        int count = 0;
        for (int i = 0; i <= N - 3; i++) {
            if (S.substring(i, i + 3).equals("ABC")) {
                count++;
            }
        }
        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02812_2P.java" startline="1" endline="17" pcid="34145">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = Integer.parseInt(sc.nextLine());
        String S = sc.nextLine();
        int count = 0;
        for (int i = 0; i <= N - 3; i++) {
            if (S.substring(i, i + 3).equals("ABC")) {
                count++;
            }
        }
        System.out.println(count);
    }
}

</source>
</class>

<class classid="113" nclones="9" nlines="14" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02829_0P.java" startline="1" endline="16" pcid="34197">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        for (int i = 1; i <= 3; i++) {
            if (i != A && i != B) {
                System.out.println(i);
                break;
            }
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02829_3P.java" startline="1" endline="17" pcid="65500">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();

        for (int i = 1; i <= 3; i++) {
            if (i != A && i != B) {
                System.out.println(i);
                break;
            }
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02829_0P.java" startline="1" endline="17" pcid="41767">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();

        for (int i = 1; i <= 3; i++) {
            if (i != A && i != B) {
                System.out.println(i);
                break;
            }
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02829_2P.java" startline="1" endline="17" pcid="41772">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();

        for (int i = 1; i <= 3; i++) {
            if (i != A && i != B) {
                System.out.println(i);
                break;
            }
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02829_1P.java" startline="1" endline="17" pcid="41770">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();

        for (int i = 1; i <= 3; i++) {
            if (i != A && i != B) {
                System.out.println(i);
                break;
            }
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02829_4P.java" startline="1" endline="17" pcid="41771">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();

        for (int i = 1; i <= 3; i++) {
            if (i != A && i != B) {
                System.out.println(i);
                break;
            }
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02829_3P.java" startline="1" endline="16" pcid="34200">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        for (int i = 1; i <= 3; i++) {
            if (i != A && i != B) {
                System.out.println(i);
                break;
            }
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02829_4P.java" startline="1" endline="16" pcid="34202">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        for (int i = 1; i <= 3; i++) {
            if (i != A && i != B) {
                System.out.println(i);
                break;
            }
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02829_2P.java" startline="1" endline="17" pcid="34199">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();

        for (int i = 1; i <= 3; i++) {
            if (i != A && i != B) {
                System.out.println(i);
                break;
            }
        }
    }
}

</source>
</class>

<class classid="114" nclones="2" nlines="15" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02887_2P.java" startline="1" endline="17" pcid="34405">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = Integer.parseInt(sc.nextLine());
        String S = sc.nextLine();
        int count = 1;
        for (int i = 1; i < N; i++) {
            if (S.charAt(i) != S.charAt(i - 1)) {
                count++;
            }
        }
        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p02887_1P.java" startline="1" endline="17" pcid="64683">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = Integer.parseInt(sc.nextLine());
        String S = sc.nextLine();
        int count = 1;
        for (int i = 1; i < N; i++) {
            if (S.charAt(i) != S.charAt(i - 1)) {
                count++;
            }
        }
        System.out.println(count);
    }
}

</source>
</class>

<class classid="115" nclones="7" nlines="10" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02897_3P.java" startline="1" endline="12" pcid="34433">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int oddCount = (N + 1) / 2;
        double probability = (double) oddCount / N;
        System.out.printf("%.10f\n", probability);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p02897_4P.java" startline="1" endline="12" pcid="64685">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int oddCount = (N + 1) / 2;
        double probability = (double) oddCount / N;
        System.out.printf("%.10f\n", probability);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02897_4P.java" startline="1" endline="14" pcid="65523">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();

        int oddCount = (N + 1) / 2;
        double probability = (double) oddCount / N;

        System.out.printf("%.10f\n", probability);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02897_2P.java" startline="1" endline="14" pcid="42012">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();

        int oddCount = (N + 1) / 2;
        double probability = (double) oddCount / N;

        System.out.printf("%.10f\n", probability);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02897_0P.java" startline="1" endline="14" pcid="42010">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();

        int oddCount = (N + 1) / 2;
        double probability = (double) oddCount / N;

        System.out.printf("%.10f\n", probability);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02897_3P.java" startline="1" endline="14" pcid="42011">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();

        int oddCount = (N + 1) / 2;
        double probability = (double) oddCount / N;

        System.out.printf("%.10f\n", probability);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02897_1P.java" startline="1" endline="14" pcid="42009">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();

        int oddCount = (N + 1) / 2;
        double probability = (double) oddCount / N;

        System.out.printf("%.10f\n", probability);
    }
}

</source>
</class>

<class classid="116" nclones="3" nlines="16" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02915_3P.java" startline="1" endline="18" pcid="34494">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int count = 0;
        for (int i = 1; i <= N; i++) {
            for (int j = 1; j <= N; j++) {
                for (int k = 1; k <= N; k++) {
                    count++;
                }
            }
        }
        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02915_4P.java" startline="1" endline="20" pcid="65531">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();

        int count = 0;
        for (int i = 1; i <= N; i++) {
            for (int j = 1; j <= N; j++) {
                for (int k = 1; k <= N; k++) {
                    count++;
                }
            }
        }

        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p02915_0P.java" startline="1" endline="18" pcid="64692">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int count = 0;
        for (int i = 1; i <= N; i++) {
            for (int j = 1; j <= N; j++) {
                for (int k = 1; k <= N; k++) {
                    count++;
                }
            }
        }
        System.out.println(count);
    }
}

</source>
</class>

<class classid="117" nclones="3" nlines="13" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02921_0P.java" startline="1" endline="15" pcid="34521">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.next();
        String T = sc.next();
        int count = 0;
        for (int i = 0; i < 3; i++) {
            if (S.charAt(i) == T.charAt(i)) count++;
        }
        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p02921_2P.java" startline="1" endline="15" pcid="64694">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.next();
        String T = sc.next();
        int count = 0;
        for (int i = 0; i < 3; i++) {
            if (S.charAt(i) == T.charAt(i)) count++;
        }
        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02921_4P.java" startline="1" endline="15" pcid="34524">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.next();
        String T = sc.next();
        int count = 0;
        for (int i = 0; i < 3; i++) {
            if (S.charAt(i) == T.charAt(i)) count++;
        }
        System.out.println(count);
    }
}

</source>
</class>

<class classid="118" nclones="2" nlines="22" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02953_0P.java" startline="1" endline="26" pcid="34635">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        int[] H = new int[N];
        for (int i = 0; i < N; i++) {
            H[i] = sc.nextInt();
        }

        boolean possible = true;
        for (int i = N - 2; i >= 0; i--) {
            if (H[i] > H[i+1]) {
                H[i]--;
            }
            if (H[i] > H[i+1]) {
                possible = false;
                break;
            }
        }
        System.out.println(possible ? "Yes" : "No");
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p02953_1P.java" startline="1" endline="24" pcid="64706">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] H = new int[N];
        for (int i = 0; i < N; i++) {
            H[i] = sc.nextInt();
        }
        boolean possible = true;
        for (int i = N - 2; i >= 0; i--) {
            if (H[i] > H[i + 1]) {
                H[i]--;
                if (H[i] > H[i + 1]) {
                    possible = false;
                    break;
                }
            }
        }
        System.out.println(possible ? "Yes" : "No");
    }
}

</source>
</class>

<class classid="119" nclones="2" nlines="15" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02957_4P.java" startline="1" endline="16" pcid="34654">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long A = sc.nextLong();
        long B = sc.nextLong();
        long sum = A + B;
        if (sum % 2 == 0) {
            System.out.println(sum / 2);
        } else {
            System.out.println("IMPOSSIBLE");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p02957_2P.java" startline="1" endline="17" pcid="64709">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long A = sc.nextLong();
        long B = sc.nextLong();

        long sum = A + B;
        if (sum % 2 == 0) {
            System.out.println(sum / 2);
        } else {
            System.out.println("IMPOSSIBLE");
        }
    }
}

</source>
</class>

<class classid="120" nclones="2" nlines="27" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02971_4P.java" startline="1" endline="27" pcid="34695">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] A = new int[N];
        int max1 = -1, max2 = -1;
        for (int i = 0; i < N; i++) {
            A[i] = sc.nextInt();
            if (A[i] > max1) {
                max2 = max1;
                max1 = A[i];
            } else if (A[i] > max2) {
                max2 = A[i];
            }
        }
        for (int i = 0; i < N; i++) {
            if (A[i] == max1) {
                System.out.println(max2);
            } else {
                System.out.println(max1);
            }
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p02971_3P.java" startline="1" endline="27" pcid="64712">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] A = new int[N];
        int max1 = -1, max2 = -1;
        for (int i = 0; i < N; i++) {
            A[i] = sc.nextInt();
            if (A[i] > max1) {
                max2 = max1;
                max1 = A[i];
            } else if (A[i] > max2) {
                max2 = A[i];
            }
        }
        for (int i = 0; i < N; i++) {
            if (A[i] == max1) {
                System.out.println(max2);
            } else {
                System.out.println(max1);
            }
        }
    }
}

</source>
</class>

<class classid="121" nclones="2" nlines="14" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02993_1P.java" startline="1" endline="16" pcid="34778">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.next();
        for (int i = 0; i < 3; i++) {
            if (S.charAt(i) == S.charAt(i + 1)) {
                System.out.println("Bad");
                return;
            }
        }
        System.out.println("Good");
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p02993_3P.java" startline="1" endline="16" pcid="64719">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.next();
        for (int i = 0; i < 3; i++) {
            if (S.charAt(i) == S.charAt(i + 1)) {
                System.out.println("Bad");
                return;
            }
        }
        System.out.println("Good");
    }
}

</source>
</class>

<class classid="122" nclones="6" nlines="14" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02999_1P.java" startline="1" endline="15" pcid="34805">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int X = sc.nextInt();
        int A = sc.nextInt();
        if (X < A) {
            System.out.println(0);
        } else {
            System.out.println(10);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02999_0P.java" startline="1" endline="16" pcid="65565">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int X = sc.nextInt();
        int A = sc.nextInt();

        if (X < A) {
            System.out.println(0);
        } else {
            System.out.println(10);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02999_4P.java" startline="1" endline="16" pcid="42379">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int X = sc.nextInt();
        int A = sc.nextInt();

        if (X < A) {
            System.out.println(0);
        } else {
            System.out.println(10);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02999_2P.java" startline="1" endline="16" pcid="42376">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int X = sc.nextInt();
        int A = sc.nextInt();

        if (X < A) {
            System.out.println(0);
        } else {
            System.out.println(10);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p02999_4P.java" startline="1" endline="15" pcid="34809">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int X = sc.nextInt();
        int A = sc.nextInt();
        if (X < A) {
            System.out.println(0);
        } else {
            System.out.println(10);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02999_1P.java" startline="1" endline="16" pcid="42375">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int X = sc.nextInt();
        int A = sc.nextInt();

        if (X < A) {
            System.out.println(0);
        } else {
            System.out.println(10);
        }
    }
}

</source>
</class>

<class classid="123" nclones="2" nlines="13" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03001_1P.java" startline="1" endline="15" pcid="34814">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long W = sc.nextLong();
        long H = sc.nextLong();
        long x = sc.nextLong();
        long y = sc.nextLong();
        double area = (W * H) / 2.0;
        int multi = (x * 2 == W && y * 2 == H) ? 1 : 0;
        System.out.printf("%.6f %d\n", area, multi);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p03001_0P.java" startline="1" endline="17" pcid="64720">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long W = sc.nextLong();
        long H = sc.nextLong();
        long x = sc.nextLong();
        long y = sc.nextLong();

        double area = (W * H) / 2.0;
        int multi = (x * 2 == W && y * 2 == H) ? 1 : 0;

        System.out.printf("%.6f %d\n", area, multi);
    }
}

</source>
</class>

<class classid="124" nclones="4" nlines="15" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03067_2P.java" startline="1" endline="17" pcid="35032">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();

        if ((A < C && C < B) || (B < C && C < A)) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p03067_4P.java" startline="1" endline="17" pcid="64743">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();

        if ((A < C && C < B) || (B < C && C < A)) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03067_0P.java" startline="1" endline="17" pcid="35033">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();

        if ((A < C && C < B) || (B < C && C < A)) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03067_3P.java" startline="1" endline="17" pcid="35037">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();

        if ((A < C && C < B) || (B < C && C < A)) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
</class>

<class classid="125" nclones="2" nlines="20" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03072_4P.java" startline="1" endline="23" pcid="35055">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] H = new int[N];
        for (int i = 0; i < N; i++) {
            H[i] = sc.nextInt();
        }

        int count = 0;
        int maxSoFar = Integer.MIN_VALUE;
        for (int i = 0; i < N; i++) {
            if (H[i] >= maxSoFar) {
                count++;
                maxSoFar = H[i];
            }
        }
        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p03072_0P.java" startline="1" endline="23" pcid="64745">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] H = new int[N];
        for (int i = 0; i < N; i++) {
            H[i] = sc.nextInt();
        }

        int count = 0;
        int maxSoFar = Integer.MIN_VALUE;
        for (int i = 0; i < N; i++) {
            if (H[i] >= maxSoFar) {
                count++;
                maxSoFar = H[i];
            }
        }
        System.out.println(count);
    }
}

</source>
</class>

<class classid="126" nclones="2" nlines="20" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03075_2P.java" startline="1" endline="24" pcid="35064">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int[] antennas = new int[5];
        for (int i = 0; i < 5; i++) {
            antennas[i] = sc.nextInt();
        }
        int k = sc.nextInt();

        for (int i = 0; i < 5; i++) {
            for (int j = i + 1; j < 5; j++) {
                if (antennas[j] - antennas[i] > k) {
                    System.out.println(":(");
                    return;
                }
            }
        }
        System.out.println("Yay!");
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p03075_1P.java" startline="1" endline="24" pcid="64748">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int[] antennas = new int[5];
        for (int i = 0; i < 5; i++) {
            antennas[i] = sc.nextInt();
        }
        int k = sc.nextInt();

        for (int i = 0; i < 5; i++) {
            for (int j = i + 1; j < 5; j++) {
                if (antennas[j] - antennas[i] > k) {
                    System.out.println(":(");
                    return;
                }
            }
        }
        System.out.println("Yay!");
    }
}

</source>
</class>

<class classid="127" nclones="8" nlines="15" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03079_0P.java" startline="1" endline="16" pcid="35080">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();
        if (A == B && B == C) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p03079_2P.java" startline="1" endline="17" pcid="64751">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();

        if (A == B && B == C) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p03079_3P.java" startline="1" endline="16" pcid="64752">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();
        if (A == B && B == C) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03079_4P.java" startline="1" endline="17" pcid="35083">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();

        if (A == B && B == C) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p03079_2P.java" startline="1" endline="17" pcid="50164">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();

        if (A == B && B == C) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03079_1P.java" startline="1" endline="17" pcid="35081">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();

        if (A == B && B == C) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p03079_4P.java" startline="1" endline="17" pcid="50163">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();

        if (A == B && B == C) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p03079_0P.java" startline="1" endline="17" pcid="50161">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();

        if (A == B && B == C) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
</class>

<class classid="128" nclones="3" nlines="21" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03085_0P.java" startline="1" endline="24" pcid="35095">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        char b = sc.next().charAt(0);

        switch (b) {
            case 'A':
                System.out.println('T');
                break;
            case 'T':
                System.out.println('A');
                break;
            case 'C':
                System.out.println('G');
                break;
            case 'G':
                System.out.println('C');
                break;
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p03085_3P.java" startline="1" endline="24" pcid="64756">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        char b = sc.next().charAt(0);

        switch (b) {
            case 'A':
                System.out.println('T');
                break;
            case 'T':
                System.out.println('A');
                break;
            case 'C':
                System.out.println('G');
                break;
            case 'G':
                System.out.println('C');
                break;
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03085_2P.java" startline="1" endline="23" pcid="35097">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        char b = sc.next().charAt(0);
        switch (b) {
            case 'A':
                System.out.println('T');
                break;
            case 'T':
                System.out.println('A');
                break;
            case 'C':
                System.out.println('G');
                break;
            case 'G':
                System.out.println('C');
                break;
        }
    }
}

</source>
</class>

<class classid="129" nclones="2" nlines="13" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03109_0P.java" startline="1" endline="14" pcid="35177">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.nextLine().trim();
        if (S.compareTo("2019/04/30") <= 0) {
            System.out.println("Heisei");
        } else {
            System.out.println("TBD");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p03109_3P.java" startline="1" endline="14" pcid="64765">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.nextLine().trim();
        if (S.compareTo("2019/04/30") <= 0) {
            System.out.println("Heisei");
        } else {
            System.out.println("TBD");
        }
    }
}

</source>
</class>

<class classid="130" nclones="6" nlines="14" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03125_0P.java" startline="1" endline="15" pcid="35191">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        if (B % A == 0) {
            System.out.println(A + B);
        } else {
            System.out.println(B - A);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/0/s363447928P.java" startline="1" endline="17" pcid="62055">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int A = sc.nextInt();
        int B = sc.nextInt();

        if (B % A == 0) {
            System.out.println(A + B);
        } else {
            System.out.println(B - A);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p03125_2P.java" startline="1" endline="16" pcid="50279">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();

        if (B % A == 0) {
            System.out.println(A + B);
        } else {
            System.out.println(B - A);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p03125_3P.java" startline="1" endline="16" pcid="50280">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();

        if (B % A == 0) {
            System.out.println(A + B);
        } else {
            System.out.println(B - A);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03125_4P.java" startline="1" endline="15" pcid="35198">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        if (B % A == 0) {
            System.out.println(A + B);
        } else {
            System.out.println(B - A);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03125_1P.java" startline="1" endline="15" pcid="35193">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        if (B % A == 0) {
            System.out.println(A + B);
        } else {
            System.out.println(B - A);
        }
    }
}

</source>
</class>

<class classid="131" nclones="2" nlines="20" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03127_3P.java" startline="1" endline="23" pcid="35203">
import java.util.Scanner;

public class Main {
    static long gcd(long a, long b) {
        while (b != 0) {
            long t = b;
            b = a % b;
            a = t;
        }
        return a;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        long res = sc.nextLong();
        for (int i = 1; i < N; i++) {
            res = gcd(res, sc.nextLong());
        }
        System.out.println(res);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p03127_4P.java" startline="1" endline="23" pcid="64770">
import java.util.Scanner;

public class Main {
    static long gcd(long a, long b) {
        while (b != 0) {
            long t = b;
            b = a % b;
            a = t;
        }
        return a;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        long res = sc.nextLong();
        for (int i = 1; i < N; i++) {
            res = gcd(res, sc.nextLong());
        }
        System.out.println(res);
    }
}

</source>
</class>

<class classid="132" nclones="2" nlines="15" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03129_2P.java" startline="1" endline="18" pcid="35210">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();

        int maxPick = (N + 1) / 2;

        if (K <= maxPick) {
            System.out.println("YES");
        } else {
            System.out.println("NO");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p03129_4P.java" startline="1" endline="18" pcid="64773">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();

        int maxPick = (N + 1) / 2;

        if (K <= maxPick) {
            System.out.println("YES");
        } else {
            System.out.println("NO");
        }
    }
}

</source>
</class>

<class classid="133" nclones="6" nlines="12" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03139_3P.java" startline="1" endline="16" pcid="35246">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int A = sc.nextInt();
        int B = sc.nextInt();

        int maxBoth = Math.min(A, B);
        int minBoth = Math.max(0, A + B - N);

        System.out.println(maxBoth + " " + minBoth);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p03139_2P.java" startline="1" endline="17" pcid="64778">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int A = sc.nextInt();
        int B = sc.nextInt();

        int maxBoth = Math.min(A, B);

        int minBoth = Math.max(0, A + B - N);

        System.out.println(maxBoth + " " + minBoth);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p03139_3P.java" startline="1" endline="16" pcid="50333">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int A = sc.nextInt();
        int B = sc.nextInt();

        int maxBoth = Math.min(A, B);
        int minBoth = Math.max(0, A + B - N);

        System.out.println(maxBoth + " " + minBoth);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03139_1P.java" startline="1" endline="16" pcid="35249">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int A = sc.nextInt();
        int B = sc.nextInt();

        int maxBoth = Math.min(A, B);
        int minBoth = Math.max(0, A + B - N);

        System.out.println(maxBoth + " " + minBoth);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03139_0P.java" startline="1" endline="17" pcid="35252">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int A = sc.nextInt();
        int B = sc.nextInt();

        int maxBoth = Math.min(A, B);

        int minBoth = Math.max(0, A + B - N);

        System.out.println(maxBoth + " " + minBoth);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03139_4P.java" startline="1" endline="16" pcid="35247">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int A = sc.nextInt();
        int B = sc.nextInt();

        int maxBoth = Math.min(A, B);
        int minBoth = Math.max(0, A + B - N);

        System.out.println(maxBoth + " " + minBoth);
    }
}

</source>
</class>

<class classid="134" nclones="3" nlines="37" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03165_4P.java" startline="1" endline="39" pcid="35335">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        String t = sc.next();
        int n = s.length();
        int m = t.length();

        int[][] dp = new int[n + 1][m + 1];

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (s.charAt(i) == t.charAt(j)) {
                    dp[i + 1][j + 1] = dp[i][j] + 1;
                } else {
                    dp[i + 1][j + 1] = Math.max(dp[i][j + 1], dp[i + 1][j]);
                }
            }
        }

        StringBuilder lcs = new StringBuilder();
        int i = n, j = m;
        while (i > 0 && j > 0) {
            if (s.charAt(i - 1) == t.charAt(j - 1)) {
                lcs.append(s.charAt(i - 1));
                i--;
                j--;
            } else if (dp[i - 1][j] >= dp[i][j - 1]) {
                i--;
            } else {
                j--;
            }
        }
        System.out.println(lcs.reverse().toString());
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p03165_3P.java" startline="1" endline="39" pcid="64798">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        String t = sc.next();
        int n = s.length();
        int m = t.length();
        int[][] dp = new int[n + 1][m + 1];

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (s.charAt(i) == t.charAt(j)) {
                    dp[i + 1][j + 1] = dp[i][j] + 1;
                } else {
                    dp[i + 1][j + 1] = Math.max(dp[i][j + 1], dp[i + 1][j]);
                }
            }
        }

        StringBuilder lcs = new StringBuilder();
        int i = n, j = m;
        while (i > 0 && j > 0) {
            if (s.charAt(i - 1) == t.charAt(j - 1)) {
                lcs.append(s.charAt(i - 1));
                i--;
                j--;
            } else if (dp[i - 1][j] >= dp[i][j - 1]) {
                i--;
            } else {
                j--;
            }
        }

        System.out.println(lcs.reverse().toString());
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03165_2P.java" startline="1" endline="40" pcid="35338">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        String t = sc.next();
        int n = s.length();
        int m = t.length();

        int[][] dp = new int[n + 1][m + 1];

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (s.charAt(i) == t.charAt(j)) {
                    dp[i + 1][j + 1] = dp[i][j] + 1;
                } else {
                    dp[i + 1][j + 1] = Math.max(dp[i][j + 1], dp[i + 1][j]);
                }
            }
        }

        StringBuilder lcs = new StringBuilder();
        int i = n, j = m;
        while (i > 0 && j > 0) {
            if (s.charAt(i - 1) == t.charAt(j - 1)) {
                lcs.append(s.charAt(i - 1));
                i--;
                j--;
            } else if (dp[i - 1][j] >= dp[i][j - 1]) {
                i--;
            } else {
                j--;
            }
        }

        System.out.println(lcs.reverse().toString());
    }
}

</source>
</class>

<class classid="135" nclones="4" nlines="18" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03193_2P.java" startline="1" endline="22" pcid="35442">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        long H = sc.nextLong();
        long W = sc.nextLong();

        int count = 0;
        for (int i = 0; i < N; i++) {
            long Ai = sc.nextLong();
            long Bi = sc.nextLong();
            if (Ai >= H && Bi >= W) {
                count++;
            }
        }
        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p03193_0P.java" startline="1" endline="22" pcid="64810">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        long H = sc.nextLong();
        long W = sc.nextLong();

        int count = 0;
        for (int i = 0; i < N; i++) {
            long Ai = sc.nextLong();
            long Bi = sc.nextLong();
            if (Ai >= H && Bi >= W) {
                count++;
            }
        }
        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03193_4P.java" startline="1" endline="22" pcid="35446">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        long H = sc.nextLong();
        long W = sc.nextLong();

        int count = 0;
        for (int i = 0; i < N; i++) {
            long Ai = sc.nextLong();
            long Bi = sc.nextLong();
            if (Ai >= H && Bi >= W) {
                count++;
            }
        }
        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03193_3P.java" startline="1" endline="25" pcid="35445">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        long H = sc.nextLong();
        long W = sc.nextLong();

        int count = 0;

        for (int i = 0; i < N; i++) {
            long Ai = sc.nextLong();
            long Bi = sc.nextLong();

            if (Ai >= H && Bi >= W) {
                count++;
            }
        }

        System.out.println(count);
    }
}

</source>
</class>

<class classid="136" nclones="6" nlines="13" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03210_4P.java" startline="1" endline="14" pcid="35506">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int X = sc.nextInt();
        if (X == 3 || X == 5 || X == 7) {
            System.out.println("YES");
        } else {
            System.out.println("NO");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p03210_2P.java" startline="1" endline="14" pcid="64813">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int X = sc.nextInt();
        if (X == 3 || X == 5 || X == 7) {
            System.out.println("YES");
        } else {
            System.out.println("NO");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03210_1P.java" startline="1" endline="14" pcid="35507">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int X = sc.nextInt();
        if (X == 3 || X == 5 || X == 7) {
            System.out.println("YES");
        } else {
            System.out.println("NO");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03210_3P.java" startline="1" endline="14" pcid="35509">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int X = sc.nextInt();
        if (X == 3 || X == 5 || X == 7) {
            System.out.println("YES");
        } else {
            System.out.println("NO");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p03210_4P.java" startline="1" endline="14" pcid="50600">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int X = sc.nextInt();
        if (X == 3 || X == 5 || X == 7) {
            System.out.println("YES");
        } else {
            System.out.println("NO");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p03210_3P.java" startline="1" endline="14" pcid="50598">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int X = sc.nextInt();
        if (X == 3 || X == 5 || X == 7) {
            System.out.println("YES");
        } else {
            System.out.println("NO");
        }
    }
}

</source>
</class>

<class classid="137" nclones="2" nlines="24" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03214_2P.java" startline="1" endline="30" pcid="35522">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        int[] a = new int[N];
        int sum = 0;
        for (int i = 0; i < N; i++) {
            a[i] = sc.nextInt();
            sum += a[i];
        }

        double avg = (double) sum / N;
        double minDiff = Double.MAX_VALUE;
        int idx = -1;

        for (int i = 0; i < N; i++) {
            double diff = Math.abs(a[i] - avg);
            if (diff < minDiff) {
                minDiff = diff;
                idx = i;
            }
        }

        System.out.println(idx);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p03214_4P.java" startline="1" endline="30" pcid="64817">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        int[] a = new int[N];
        int sum = 0;
        for (int i = 0; i < N; i++) {
            a[i] = sc.nextInt();
            sum += a[i];
        }

        double avg = (double) sum / N;
        double minDiff = Double.MAX_VALUE;
        int idx = -1;

        for (int i = 0; i < N; i++) {
            double diff = Math.abs(a[i] - avg);
            if (diff < minDiff) {
                minDiff = diff;
                idx = i;
            }
        }

        System.out.println(idx);
    }
}

</source>
</class>

<class classid="138" nclones="3" nlines="15" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03238_1P.java" startline="1" endline="16" pcid="35588">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        if (N == 1) {
            System.out.println("Hello World");
        } else {
            int A = sc.nextInt();
            int B = sc.nextInt();
            System.out.println(A + B);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p03238_3P.java" startline="1" endline="17" pcid="64824">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        if (N == 1) {
            System.out.println("Hello World");
        } else {
            int A = sc.nextInt();
            int B = sc.nextInt();
            System.out.println(A + B);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03238_4P.java" startline="1" endline="16" pcid="35591">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        if (N == 1) {
            System.out.println("Hello World");
        } else {
            int A = sc.nextInt();
            int B = sc.nextInt();
            System.out.println(A + B);
        }
    }
}

</source>
</class>

<class classid="139" nclones="8" nlines="14" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03260_0P.java" startline="1" endline="16" pcid="35667">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();

        if (A % 2 == 1 && B % 2 == 1) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03260_1P.java" startline="1" endline="16" pcid="65656">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();

        if (A % 2 == 1 && B % 2 == 1) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03260_0P.java" startline="1" endline="16" pcid="43260">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();

        if (A % 2 == 1 && B % 2 == 1) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03260_2P.java" startline="1" endline="16" pcid="43261">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();

        if (A % 2 == 1 && B % 2 == 1) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03260_2P.java" startline="1" endline="16" pcid="35670">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();

        if (A % 2 == 1 && B % 2 == 1) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p03260_3P.java" startline="1" endline="16" pcid="50760">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();

        if (A % 2 == 1 && B % 2 == 1) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03260_4P.java" startline="1" endline="16" pcid="35668">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();

        if (A % 2 == 1 && B % 2 == 1) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03260_3P.java" startline="1" endline="16" pcid="35669">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();

        if (A % 2 == 1 && B % 2 == 1) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
</class>

<class classid="140" nclones="2" nlines="11" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03264_0P.java" startline="1" endline="15" pcid="35684">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int K = sc.nextInt();

        int even = K / 2;
        int odd = K - even;

        int result = even * odd;
        System.out.println(result);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p03264_1P.java" startline="1" endline="13" pcid="64837">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int K = sc.nextInt();
        int even = K / 2;
        int odd = K - even;
        int result = even * odd;
        System.out.println(result);
    }
}

</source>
</class>

<class classid="141" nclones="2" nlines="10" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03272_4P.java" startline="1" endline="12" pcid="35721">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int i = sc.nextInt();
        int j = N - i + 1;
        System.out.println(j);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p03272_1P.java" startline="1" endline="12" pcid="64838">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int i = sc.nextInt();
        int j = N - i + 1;
        System.out.println(j);
    }
}

</source>
</class>

<class classid="142" nclones="2" nlines="19" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03307_0P.java" startline="1" endline="23" pcid="35843">
import java.util.Scanner;

public class Main {
    static long gcd(long a, long b) {
        while (b != 0) {
            long t = b;
            b = a % b;
            a = t;
        }
        return a;
    }

    static long lcm(long a, long b) {
        return a / gcd(a, b) * b;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long N = sc.nextLong();
        System.out.println(lcm(2, N));
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p03307_3P.java" startline="1" endline="23" pcid="64861">
import java.util.Scanner;

public class Main {
    static long gcd(long a, long b) {
        while (b != 0) {
            long t = b;
            b = a % b;
            a = t;
        }
        return a;
    }

    static long lcm(long a, long b) {
        return a / gcd(a, b) * b;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long N = sc.nextLong();
        System.out.println(lcm(2, N));
    }
}

</source>
</class>

<class classid="143" nclones="2" nlines="25" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03340_0P.java" startline="1" endline="29" pcid="35971">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] A = new int[N];
        for(int i = 0; i < N; i++) {
            A[i] = sc.nextInt();
        }

        long ans = 0;
        int right = 0;
        int xor = 0, sum = 0;

        for(int left = 0; left < N; left++) {
            while(right < N && (xor ^ A[right]) == (sum + A[right])) {
                xor ^= A[right];
                sum += A[right];
                right++;
            }
            ans += right - left;
            xor ^= A[left];
            sum -= A[left];
        }
        System.out.println(ans);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p03340_2P.java" startline="1" endline="30" pcid="64873">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        int[] A = new int[N];
        for(int i=0; i<N; i++) {
            A[i] = sc.nextInt();
        }

        long ans = 0;
        int right = 0;
        int xor = 0, sum = 0;

        for (int left = 0; left < N; left++) {
            while (right < N && (xor ^ A[right]) == (sum + A[right])) {
                xor ^= A[right];
                sum += A[right];
                right++;
            }
            ans += right - left;
            xor ^= A[left];
            sum -= A[left];
        }
        System.out.println(ans);
    }
}

</source>
</class>

<class classid="144" nclones="2" nlines="16" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03385_3P.java" startline="1" endline="17" pcid="36129">
import java.util.Scanner;
import java.util.Arrays;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.next();
        char[] chars = S.toCharArray();
        Arrays.sort(chars);
        if (new String(chars).equals("abc")) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p03385_2P.java" startline="1" endline="19" pcid="64888">
import java.util.Scanner;
import java.util.Arrays;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.next();

        char[] chars = S.toCharArray();
        Arrays.sort(chars);

        if (new String(chars).equals("abc")) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
</class>

<class classid="145" nclones="2" nlines="21" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03477_1P.java" startline="1" endline="21" pcid="36438">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();
        int D = sc.nextInt();
        int left = A + B;
        int right = C + D;
        if (left > right) {
            System.out.println("Left");
        } else if (left == right) {
            System.out.println("Balanced");
        } else {
            System.out.println("Right");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p03477_1P.java" startline="1" endline="23" pcid="66604">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();
        int D = sc.nextInt();

        int left = A + B;
        int right = C + D;

        if (left > right) {
            System.out.println("Left");
        } else if (left == right) {
            System.out.println("Balanced");
        } else {
            System.out.println("Right");
        }
    }
}

</source>
</class>

<class classid="146" nclones="5" nlines="12" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03493_0P.java" startline="1" endline="14" pcid="36489">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        int count = 0;
        for (int i = 0; i < 3; i++) {
            if (s.charAt(i) == '1') count++;
        }
        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p03493_1P.java" startline="1" endline="14" pcid="64928">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        int count = 0;
        for (int i = 0; i < 3; i++) {
            if (s.charAt(i) == '1') count++;
        }
        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p03493_4P.java" startline="1" endline="14" pcid="64929">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        int count = 0;
        for (int i = 0; i < 3; i++) {
            if (s.charAt(i) == '1') count++;
        }
        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03493_2P.java" startline="1" endline="14" pcid="36490">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        int count = 0;
        for (int i = 0; i < 3; i++) {
            if (s.charAt(i) == '1') count++;
        }
        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03493_3P.java" startline="1" endline="14" pcid="36494">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        int count = 0;
        for (int i = 0; i < 3; i++) {
            if (s.charAt(i) == '1') count++;
        }
        System.out.println(count);
    }
}

</source>
</class>

<class classid="147" nclones="2" nlines="13" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03502_1P.java" startline="1" endline="15" pcid="36519">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int sum = 0, temp = N;
        while (temp > 0) {
            sum += temp % 10;
            temp /= 10;
        }
        System.out.println(N % sum == 0 ? "Yes" : "No");
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p03316_3P.java" startline="1" endline="15" pcid="64863">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int sum = 0, temp = N;
        while (temp > 0) {
            sum += temp % 10;
            temp /= 10;
        }
        System.out.println(N % sum == 0 ? "Yes" : "No");
    }
}

</source>
</class>

<class classid="148" nclones="2" nlines="19" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03547_1P.java" startline="1" endline="20" pcid="36575">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String X = sc.next();
        String Y = sc.next();
        int xVal = Integer.parseInt(X, 16);
        int yVal = Integer.parseInt(Y, 16);

        if (xVal < yVal) {
            System.out.println("<");
        } else if (xVal > yVal) {
            System.out.println(">");
        } else {
            System.out.println("=");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p03547_3P.java" startline="1" endline="19" pcid="64941">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String X = sc.next();
        String Y = sc.next();
        int xVal = Integer.parseInt(X, 16);
        int yVal = Integer.parseInt(Y, 16);
        if (xVal < yVal) {
            System.out.println("<");
        } else if (xVal > yVal) {
            System.out.println(">");
        } else {
            System.out.println("=");
        }
    }
}

</source>
</class>

<class classid="149" nclones="3" nlines="12" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03587_2P.java" startline="1" endline="14" pcid="36713">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.next();
        int count = 0;
        for (int i = 0; i < 6; i++) {
            if (S.charAt(i) == '1') count++;
        }
        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p03587_4P.java" startline="1" endline="14" pcid="64951">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.next();
        int count = 0;
        for (int i = 0; i < 6; i++) {
            if (S.charAt(i) == '1') count++;
        }
        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03587_3P.java" startline="1" endline="14" pcid="36714">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.next();
        int count = 0;
        for (int i = 0; i < 6; i++) {
            if (S.charAt(i) == '1') count++;
        }
        System.out.println(count);
    }
}

</source>
</class>

<class classid="150" nclones="5" nlines="13" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03605_0P.java" startline="1" endline="14" pcid="36771">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        if (N / 10 == 9 || N % 10 == 9) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p03605_4P.java" startline="1" endline="15" pcid="64957">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();

        if (N / 10 == 9 || N % 10 == 9) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p03605_2P.java" startline="1" endline="14" pcid="64956">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        if (N / 10 == 9 || N % 10 == 9) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03605_1P.java" startline="1" endline="15" pcid="36773">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();

        if (N / 10 == 9 || N % 10 == 9) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03605_3P.java" startline="1" endline="14" pcid="36772">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        if (N / 10 == 9 || N % 10 == 9) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
</class>

<class classid="151" nclones="3" nlines="10" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03609_0P.java" startline="1" endline="12" pcid="36789">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long X = sc.nextLong();
        long t = sc.nextLong();
        long result = Math.max(0, X - t);
        System.out.println(result);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p03609_3P.java" startline="1" endline="12" pcid="64958">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long X = sc.nextLong();
        long t = sc.nextLong();
        long result = Math.max(0, X - t);
        System.out.println(result);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03609_2P.java" startline="1" endline="12" pcid="36792">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long X = sc.nextLong();
        long t = sc.nextLong();
        long result = Math.max(0, X - t);
        System.out.println(result);
    }
}

</source>
</class>

<class classid="152" nclones="3" nlines="12" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03610_3P.java" startline="1" endline="16" pcid="36795">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.nextLine();
        StringBuilder sb = new StringBuilder();

        for (int i = 0; i < s.length(); i += 2) {
            sb.append(s.charAt(i));
        }

        System.out.println(sb.toString());
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p03610_4P.java" startline="1" endline="14" pcid="64959">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.nextLine();
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < s.length(); i += 2) {
            sb.append(s.charAt(i));
        }
        System.out.println(sb.toString());
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03610_2P.java" startline="1" endline="14" pcid="36796">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.nextLine();
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < s.length(); i += 2) {
            sb.append(s.charAt(i));
        }
        System.out.println(sb.toString());
    }
}

</source>
</class>

<class classid="153" nclones="2" nlines="12" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03623_2P.java" startline="1" endline="16" pcid="36835">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int x = sc.nextInt();
        int a = sc.nextInt();
        int b = sc.nextInt();

        int distA = (x - a) * (x - a);
        int distB = (x - b) * (x - b);

        System.out.println(distA < distB ? "A" : "B");
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p03623_1P.java" startline="1" endline="16" pcid="64965">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int x = sc.nextInt();
        int a = sc.nextInt();
        int b = sc.nextInt();

        int distA = (x - a) * (x - a);
        int distB = (x - b) * (x - b);

        System.out.println(distA < distB ? "A" : "B");
    }
}

</source>
</class>

<class classid="154" nclones="5" nlines="17" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03623_3P.java" startline="1" endline="20" pcid="36836">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int x = sc.nextInt();
        int a = sc.nextInt();
        int b = sc.nextInt();

        int distA = Math.abs(x - a);
        int distB = Math.abs(x - b);

        if (distA < distB) {
            System.out.println("A");
        } else {
            System.out.println("B");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p03623_4P.java" startline="1" endline="20" pcid="66648">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int x = sc.nextInt();
        int a = sc.nextInt();
        int b = sc.nextInt();

        int distA = Math.abs(x - a);
        int distB = Math.abs(x - b);

        if (distA < distB) {
            System.out.println("A");
        } else {
            System.out.println("B");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p03623_0P.java" startline="1" endline="20" pcid="64964">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int x = sc.nextInt();
        int a = sc.nextInt();
        int b = sc.nextInt();

        int distA = Math.abs(x - a);
        int distB = Math.abs(x - b);

        if (distA < distB) {
            System.out.println("A");
        } else {
            System.out.println("B");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03623_4P.java" startline="1" endline="20" pcid="36838">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int x = sc.nextInt();
        int a = sc.nextInt();
        int b = sc.nextInt();

        int distA = Math.abs(x - a);
        int distB = Math.abs(x - b);

        if (distA < distB) {
            System.out.println("A");
        } else {
            System.out.println("B");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p03623_0P.java" startline="1" endline="20" pcid="51925">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int x = sc.nextInt();
        int a = sc.nextInt();
        int b = sc.nextInt();

        int distA = Math.abs(x - a);
        int distB = Math.abs(x - b);

        if (distA < distB) {
            System.out.println("A");
        } else {
            System.out.println("B");
        }
    }
}

</source>
</class>

<class classid="155" nclones="2" nlines="18" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03624_1P.java" startline="1" endline="20" pcid="36839">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.next();
        boolean[] present = new boolean[26];
        for (char c : S.toCharArray()) {
            present[c - 'a'] = true;
        }
        for (int i = 0; i < 26; i++) {
            if (!present[i]) {
                System.out.println((char)('a' + i));
                return;
            }
        }
        System.out.println("None");
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p03624_4P.java" startline="1" endline="23" pcid="66651">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.next();
        boolean[] present = new boolean[26];

        for (char c : S.toCharArray()) {
            present[c - 'a'] = true;
        }

        for (int i = 0; i < 26; i++) {
            if (!present[i]) {
                System.out.println((char)('a' + i));
                return;
            }
        }

        System.out.println("None");
    }
}

</source>
</class>

<class classid="156" nclones="8" nlines="14" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03632_1P.java" startline="1" endline="20" pcid="36872">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();
        int D = sc.nextInt();

        int start = Math.max(A, C);
        int end = Math.min(B, D);

        int overlap = Math.max(0, end - start);

        System.out.println(overlap);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p03632_2P.java" startline="1" endline="18" pcid="66655">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();
        int D = sc.nextInt();

        int start = Math.max(A, C);
        int end = Math.min(B, D);
        int overlap = Math.max(0, end - start);

        System.out.println(overlap);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03632_4P.java" startline="1" endline="19" pcid="36875">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();
        int D = sc.nextInt();

        int start = Math.max(A, C);
        int end = Math.min(B, D);

        int overlap = Math.max(0, end - start);

        System.out.println(overlap);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p03632_0P.java" startline="1" endline="18" pcid="51958">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();
        int D = sc.nextInt();

        int start = Math.max(A, C);
        int end = Math.min(B, D);
        int overlap = Math.max(0, end - start);

        System.out.println(overlap);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p03632_1P.java" startline="1" endline="18" pcid="51957">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();
        int D = sc.nextInt();

        int start = Math.max(A, C);
        int end = Math.min(B, D);
        int overlap = Math.max(0, end - start);

        System.out.println(overlap);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p03632_3P.java" startline="1" endline="18" pcid="51959">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();
        int D = sc.nextInt();

        int start = Math.max(A, C);
        int end = Math.min(B, D);
        int overlap = Math.max(0, end - start);

        System.out.println(overlap);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p03632_4P.java" startline="1" endline="19" pcid="51961">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();
        int D = sc.nextInt();

        int start = Math.max(A, C);
        int end = Math.min(B, D);

        int overlap = Math.max(0, end - start);

        System.out.println(overlap);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03632_0P.java" startline="1" endline="19" pcid="44454">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();
        int D = sc.nextInt();

        int start = Math.max(A, C);
        int end = Math.min(B, D);

        int overlap = Math.max(0, end - start);

        System.out.println(overlap);
    }
}

</source>
</class>

<class classid="157" nclones="2" nlines="14" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03671_4P.java" startline="1" endline="16" pcid="37010">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int c = sc.nextInt();
        int sum1 = a + b;
        int sum2 = a + c;
        int sum3 = b + c;
        int min = Math.min(sum1, Math.min(sum2, sum3));
        System.out.println(min);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p03671_2P.java" startline="1" endline="17" pcid="64982">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int c = sc.nextInt();

        int sum1 = a + b;
        int sum2 = a + c;
        int sum3 = b + c;
        int min = Math.min(sum1, Math.min(sum2, sum3));
        System.out.println(min);
    }
}

</source>
</class>

<class classid="158" nclones="3" nlines="19" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03712_4P.java" startline="1" endline="25" pcid="37150">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int H = sc.nextInt();
        int W = sc.nextInt();
        sc.nextLine();

        String[] image = new String[H];
        for (int i = 0; i < H; i++) {
            image[i] = sc.nextLine();
        }

        String border = "#".repeat(W + 2);

        System.out.println(border);
        for (int i = 0; i < H; i++) {
            System.out.println("#" + image[i] + "#");
        }
        System.out.println(border);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p03712_0P.java" startline="1" endline="24" pcid="64993">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int H = sc.nextInt();
        int W = sc.nextInt();
        sc.nextLine();

        String[] image = new String[H];
        for (int i = 0; i < H; i++) {
            image[i] = sc.nextLine();
        }

        String border = "#".repeat(W + 2);
        System.out.println(border);
        for (int i = 0; i < H; i++) {
            System.out.println("#" + image[i] + "#");
        }
        System.out.println(border);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p03712_2P.java" startline="1" endline="24" pcid="64994">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int H = sc.nextInt();
        int W = sc.nextInt();
        sc.nextLine();

        String[] image = new String[H];
        for (int i = 0; i < H; i++) {
            image[i] = sc.nextLine();
        }

        String border = "#".repeat(W + 2);
        System.out.println(border);
        for (int i = 0; i < H; i++) {
            System.out.println("#" + image[i] + "#");
        }
        System.out.println(border);
    }
}

</source>
</class>

<class classid="159" nclones="2" nlines="25" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03724_3P.java" startline="1" endline="30" pcid="37198">
import java.io.*;
import java.util.*;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine());
        int N = Integer.parseInt(st.nextToken());
        int M = Integer.parseInt(st.nextToken());

        int[] cnt = new int[N + 1];

        for (int i = 0; i < M; i++) {
            st = new StringTokenizer(br.readLine());
            int a = Integer.parseInt(st.nextToken());
            int b = Integer.parseInt(st.nextToken());
            cnt[a] ^= 1;
            cnt[b] ^= 1;
        }

        for (int i = 1; i <= N; i++) {
            if (cnt[i] != 0) {
                System.out.println("NO");
                return;
            }
        }
        System.out.println("YES");
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p03724_1P.java" startline="1" endline="31" pcid="65001">
import java.io.*;
import java.util.*;

public class Main {

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine());
        int N = Integer.parseInt(st.nextToken());
        int M = Integer.parseInt(st.nextToken());

        int[] cnt = new int[N + 1];

        for (int i = 0; i < M; i++) {
            st = new StringTokenizer(br.readLine());
            int a = Integer.parseInt(st.nextToken());
            int b = Integer.parseInt(st.nextToken());
            cnt[a] ^= 1;
            cnt[b] ^= 1;
        }

        for (int i = 1; i <= N; i++) {
            if (cnt[i] != 0) {
                System.out.println("NO");
                return;
            }
        }
        System.out.println("YES");
    }
}

</source>
</class>

<class classid="160" nclones="5" nlines="26" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03738_3P.java" startline="1" endline="25" pcid="37244">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String A = sc.next();
        String B = sc.next();

        if (A.length() > B.length()) {
            System.out.println("GREATER");
        } else if (A.length() < B.length()) {
            System.out.println("LESS");
        } else {
            int cmp = A.compareTo(B);
            if (cmp > 0) {
                System.out.println("GREATER");
            } else if (cmp < 0) {
                System.out.println("LESS");
            } else {
                System.out.println("EQUAL");
            }
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p03738_0P.java" startline="1" endline="25" pcid="65002">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String A = sc.next();
        String B = sc.next();

        if (A.length() > B.length()) {
            System.out.println("GREATER");
        } else if (A.length() < B.length()) {
            System.out.println("LESS");
        } else {
            int cmp = A.compareTo(B);
            if (cmp > 0) {
                System.out.println("GREATER");
            } else if (cmp < 0) {
                System.out.println("LESS");
            } else {
                System.out.println("EQUAL");
            }
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p03738_2P.java" startline="1" endline="25" pcid="65003">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String A = sc.next();
        String B = sc.next();

        if (A.length() > B.length()) {
            System.out.println("GREATER");
        } else if (A.length() < B.length()) {
            System.out.println("LESS");
        } else {
            int cmp = A.compareTo(B);
            if (cmp > 0) {
                System.out.println("GREATER");
            } else if (cmp < 0) {
                System.out.println("LESS");
            } else {
                System.out.println("EQUAL");
            }
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p03738_2P.java" startline="1" endline="25" pcid="52325">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String A = sc.next();
        String B = sc.next();

        if (A.length() > B.length()) {
            System.out.println("GREATER");
        } else if (A.length() < B.length()) {
            System.out.println("LESS");
        } else {
            int cmp = A.compareTo(B);
            if (cmp > 0) {
                System.out.println("GREATER");
            } else if (cmp < 0) {
                System.out.println("LESS");
            } else {
                System.out.println("EQUAL");
            }
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03738_4P.java" startline="1" endline="24" pcid="37248">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String A = sc.next();
        String B = sc.next();
        if (A.length() > B.length()) {
            System.out.println("GREATER");
        } else if (A.length() < B.length()) {
            System.out.println("LESS");
        } else {
            int cmp = A.compareTo(B);
            if (cmp > 0) {
                System.out.println("GREATER");
            } else if (cmp < 0) {
                System.out.println("LESS");
            } else {
                System.out.println("EQUAL");
            }
        }
    }
}

</source>
</class>

<class classid="161" nclones="2" nlines="21" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03814_1P.java" startline="1" endline="24" pcid="37469">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        int n = s.length();
        int maxLen = 0;

        for (int i = 0; i < n; i++) {
            if (s.charAt(i) == 'A') {
                for (int j = n - 1; j >= i; j--) {
                    if (s.charAt(j) == 'Z') {
                        int len = j - i + 1;
                        if (len > maxLen) maxLen = len;
                        break;
                    }
                }
            }
        }
        System.out.println(maxLen);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p03814_3P.java" startline="1" endline="24" pcid="65023">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        int n = s.length();
        int maxLen = 0;

        for (int i = 0; i < n; i++) {
            if (s.charAt(i) == 'A') {
                for (int j = n - 1; j >= i; j--) {
                    if (s.charAt(j) == 'Z') {
                        int len = j - i + 1;
                        if (len > maxLen) maxLen = len;
                        break;
                    }
                }
            }
        }
        System.out.println(maxLen);
    }
}

</source>
</class>

<class classid="162" nclones="7" nlines="13" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03826_1P.java" startline="1" endline="15" pcid="37507">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();
        int D = sc.nextInt();
        int area1 = A * B;
        int area2 = C * D;
        System.out.println(Math.max(area1, area2));
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p03826_2P.java" startline="1" endline="17" pcid="66712">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();
        int D = sc.nextInt();

        int area1 = A * B;
        int area2 = C * D;

        System.out.println(Math.max(area1, area2));
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p03826_0P.java" startline="1" endline="17" pcid="52589">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();
        int D = sc.nextInt();

        int area1 = A * B;
        int area2 = C * D;

        System.out.println(Math.max(area1, area2));
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03826_3P.java" startline="1" endline="15" pcid="37509">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();
        int D = sc.nextInt();
        int area1 = A * B;
        int area2 = C * D;
        System.out.println(Math.max(area1, area2));
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p03826_1P.java" startline="1" endline="17" pcid="52588">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();
        int D = sc.nextInt();

        int area1 = A * B;
        int area2 = C * D;

        System.out.println(Math.max(area1, area2));
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03826_4P.java" startline="1" endline="17" pcid="37510">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();
        int D = sc.nextInt();

        int area1 = A * B;
        int area2 = C * D;

        System.out.println(Math.max(area1, area2));
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03826_2P.java" startline="1" endline="17" pcid="37508">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();
        int D = sc.nextInt();

        int area1 = A * B;
        int area2 = C * D;

        System.out.println(Math.max(area1, area2));
    }
}

</source>
</class>

<class classid="163" nclones="6" nlines="18" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03835_2P.java" startline="1" endline="20" pcid="37546">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int K = sc.nextInt();
        int S = sc.nextInt();
        int count = 0;
        for (int x = 0; x <= K; x++) {
            for (int y = 0; y <= K; y++) {
                int z = S - x - y;
                if (z >= 0 && z <= K) {
                    count++;
                }
            }
        }
        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p03835_2P.java" startline="1" endline="22" pcid="66718">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int K = sc.nextInt();
        int S = sc.nextInt();
        int count = 0;

        for (int x = 0; x <= K; x++) {
            for (int y = 0; y <= K; y++) {
                int z = S - x - y;
                if (z >= 0 && z <= K) {
                    count++;
                }
            }
        }

        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p03835_3P.java" startline="1" endline="22" pcid="66719">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int K = sc.nextInt();
        int S = sc.nextInt();
        int count = 0;

        for (int x = 0; x <= K; x++) {
            for (int y = 0; y <= K; y++) {
                int z = S - x - y;
                if (z >= 0 && z <= K) {
                    count++;
                }
            }
        }

        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p03835_0P.java" startline="1" endline="22" pcid="52619">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int K = sc.nextInt();
        int S = sc.nextInt();
        int count = 0;

        for (int x = 0; x <= K; x++) {
            for (int y = 0; y <= K; y++) {
                int z = S - x - y;
                if (z >= 0 && z <= K) {
                    count++;
                }
            }
        }

        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p03835_1P.java" startline="1" endline="22" pcid="52621">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int K = sc.nextInt();
        int S = sc.nextInt();
        int count = 0;

        for (int x = 0; x <= K; x++) {
            for (int y = 0; y <= K; y++) {
                int z = S - x - y;
                if (z >= 0 && z <= K) {
                    count++;
                }
            }
        }

        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03835_4P.java" startline="1" endline="21" pcid="37548">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int K = sc.nextInt();
        int S = sc.nextInt();
        int count = 0;

        for (int x = 0; x <= K; x++) {
            for (int y = 0; y <= K; y++) {
                int z = S - x - y;
                if (z >= 0 && z <= K) {
                    count++;
                }
            }
        }
        System.out.println(count);
    }
}

</source>
</class>

<class classid="164" nclones="4" nlines="15" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03844_0P.java" startline="1" endline="17" pcid="37578">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long A = sc.nextLong();
        String op = sc.next();
        long B = sc.nextLong();

        if (op.equals("+")) {
            System.out.println(A + B);
        } else {
            System.out.println(A - B);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p03844_2P.java" startline="1" endline="16" pcid="65031">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long A = sc.nextLong();
        String op = sc.next();
        long B = sc.nextLong();
        if (op.equals("+")) {
            System.out.println(A + B);
        } else {
            System.out.println(A - B);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03844_4P.java" startline="1" endline="17" pcid="37582">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long A = sc.nextLong();
        String op = sc.next();
        long B = sc.nextLong();

        if (op.equals("+")) {
            System.out.println(A + B);
        } else {
            System.out.println(A - B);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03844_1P.java" startline="1" endline="16" pcid="37580">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long A = sc.nextLong();
        String op = sc.next();
        long B = sc.nextLong();
        if (op.equals("+")) {
            System.out.println(A + B);
        } else {
            System.out.println(A - B);
        }
    }
}

</source>
</class>

<class classid="165" nclones="2" nlines="16" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03947_0P.java" startline="1" endline="20" pcid="37732">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.next();

        int transitions = 0;
        char prev = S.charAt(0);
        for (int i = 1; i < S.length(); i++) {
            if (S.charAt(i) != prev) {
                transitions++;
                prev = S.charAt(i);
            }
        }

        System.out.println(transitions);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p03945_1P.java" startline="1" endline="20" pcid="66742">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.next();
        int transitions = 0;
        char prev = S.charAt(0);

        for (int i = 1; i < S.length(); i++) {
            if (S.charAt(i) != prev) {
                transitions++;
                prev = S.charAt(i);
            }
        }

        System.out.println(transitions);
    }
}

</source>
</class>

<class classid="166" nclones="4" nlines="14" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03962_2P.java" startline="1" endline="16" pcid="37769">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int c = sc.nextInt();
        Set<Integer> colors = new HashSet<>();
        colors.add(a);
        colors.add(b);
        colors.add(c);
        System.out.println(colors.size());
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p03962_1P.java" startline="1" endline="16" pcid="65051">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int c = sc.nextInt();
        Set<Integer> colors = new HashSet<>();
        colors.add(a);
        colors.add(b);
        colors.add(c);
        System.out.println(colors.size());
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03962_4P.java" startline="1" endline="16" pcid="37772">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int c = sc.nextInt();
        Set<Integer> colors = new HashSet<>();
        colors.add(a);
        colors.add(b);
        colors.add(c);
        System.out.println(colors.size());
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03962_0P.java" startline="1" endline="18" pcid="37770">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int c = sc.nextInt();

        Set<Integer> colors = new HashSet<>();
        colors.add(a);
        colors.add(b);
        colors.add(c);

        System.out.println(colors.size());
    }
}

</source>
</class>

<class classid="167" nclones="2" nlines="19" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03993_0P.java" startline="1" endline="26" pcid="37848">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        int[] a = new int[N + 1];

        for (int i = 1; i <= N; i++) {
            a[i] = sc.nextInt();
        }

        int count = 0;

        for (int i = 1; i <= N; i++) {
            int j = a[i];
            if (i < j && a[j] == i) {
                count++;
            }
        }

        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p03993_1P.java" startline="1" endline="25" pcid="65062">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        int[] a = new int[N + 1];

        for (int i = 1; i <= N; i++) {
            a[i] = sc.nextInt();
        }

        int count = 0;
        for (int i = 1; i <= N; i++) {
            int j = a[i];
            if (i < j && a[j] == i) {
                count++;
            }
        }

        System.out.println(count);
    }
}

</source>
</class>

<class classid="168" nclones="7" nlines="11" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03997_2P.java" startline="1" endline="14" pcid="37862">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int h = sc.nextInt();

        int area = (a + b) * h / 2;
        System.out.println(area);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p03997_1P.java" startline="1" endline="14" pcid="65063">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int h = sc.nextInt();

        int area = (a + b) * h / 2;
        System.out.println(area);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03997_4P.java" startline="1" endline="14" pcid="37865">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int h = sc.nextInt();

        int area = (a + b) * h / 2;
        System.out.println(area);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p03997_3P.java" startline="1" endline="14" pcid="52926">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int h = sc.nextInt();

        int area = (a + b) * h / 2;
        System.out.println(area);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p03997_4P.java" startline="1" endline="14" pcid="52927">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int h = sc.nextInt();

        int area = (a + b) * h / 2;
        System.out.println(area);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03997_3P.java" startline="1" endline="16" pcid="37864">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int a = sc.nextInt();
        int b = sc.nextInt();
        int h = sc.nextInt();

        int area = (a + b) * h / 2;

        System.out.println(area);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p03997_0P.java" startline="1" endline="14" pcid="37863">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int h = sc.nextInt();

        int area = (a + b) * h / 2;
        System.out.println(area);
    }
}

</source>
</class>

<class classid="169" nclones="2" nlines="14" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p04011_0P.java" startline="1" endline="20" pcid="37910">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        int K = sc.nextInt();
        int X = sc.nextInt();
        int Y = sc.nextInt();

        int firstNights = Math.min(N, K);
        int laterNights = Math.max(0, N - K);

        int total = firstNights * X + laterNights * Y;

        System.out.println(total);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p04011_3P.java" startline="1" endline="18" pcid="65069">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        int X = sc.nextInt();
        int Y = sc.nextInt();

        int firstNights = Math.min(N, K);
        int laterNights = Math.max(0, N - K);
        int total = firstNights * X + laterNights * Y;

        System.out.println(total);
    }
}

</source>
</class>

<class classid="170" nclones="5" nlines="22" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p04026_1P.java" startline="1" endline="27" pcid="37962">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        int n = s.length();

        for (int i = 0; i < n - 1; i++) {
            if (s.charAt(i) == s.charAt(i + 1)) {
                System.out.println((i + 1) + " " + (i + 2));
                return;
            }
        }

        for (int i = 0; i < n - 2; i++) {
            char a = s.charAt(i), b = s.charAt(i + 1), c = s.charAt(i + 2);
            if (a == b || b == c || a == c) {
                System.out.println((i + 1) + " " + (i + 3));
                return;
            }
        }

        System.out.println("-1 -1");
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p04026_2P.java" startline="1" endline="27" pcid="65074">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        int n = s.length();

        for (int i = 0; i < n - 1; i++) {
            if (s.charAt(i) == s.charAt(i + 1)) {
                System.out.println((i + 1) + " " + (i + 2));
                return;
            }
        }

        for (int i = 0; i < n - 2; i++) {
            char a = s.charAt(i), b = s.charAt(i+1), c = s.charAt(i+2);
            if (a == b || b == c || a == c) {
                System.out.println((i + 1) + " " + (i + 3));
                return;
            }
        }

        System.out.println("-1 -1");
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p04032_0P.java" startline="1" endline="25" pcid="37990">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();

        int n = s.length();
        for (int i = 0; i < n - 1; i++) {
            if (s.charAt(i) == s.charAt(i + 1)) {
                System.out.println((i + 1) + " " + (i + 2));
                return;
            }
        }
        for (int i = 0; i < n - 2; i++) {
            char a = s.charAt(i), b = s.charAt(i + 1), c = s.charAt(i + 2);
            if (a == b || b == c || a == c) {
                System.out.println((i + 1) + " " + (i + 3));
                return;
            }
        }
        System.out.println("-1 -1");
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p04026_4P.java" startline="1" endline="27" pcid="37964">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        int n = s.length();

        for (int i = 0; i < n - 1; i++) {
            if (s.charAt(i) == s.charAt(i + 1)) {
                System.out.println((i + 1) + " " + (i + 2));
                return;
            }
        }

        for (int i = 0; i < n - 2; i++) {
            char a = s.charAt(i), b = s.charAt(i + 1), c = s.charAt(i + 2);
            if (a == b || b == c || a == c) {
                System.out.println((i + 1) + " " + (i + 3));
                return;
            }
        }

        System.out.println("-1 -1");
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/chatgpt_p04026_3P.java" startline="1" endline="27" pcid="37963">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        int n = s.length();

        for (int i = 0; i < n - 1; i++) {
            if (s.charAt(i) == s.charAt(i + 1)) {
                System.out.println((i + 1) + " " + (i + 2));
                return;
            }
        }

        for (int i = 0; i < n - 2; i++) {
            char a = s.charAt(i), b = s.charAt(i + 1), c = s.charAt(i + 2);
            if (a == b || b == c || a == c) {
                System.out.println((i + 1) + " " + (i + 3));
                return;
            }
        }

        System.out.println("-1 -1");
    }
}

</source>
</class>

<class classid="171" nclones="2" nlines="12" similarity="100">
<source file="../preprocessed_Datasplit/train/1/chatgpt_p04029_3P.java" startline="1" endline="14" pcid="37977">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int sum = 0;
        for (int i = 1; i <= N; i++) {
            sum += i;
        }
        System.out.println(sum);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/0/s201671102P.java" startline="1" endline="15" pcid="61521">
import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int N = sc.nextInt();
		int sum = 0;
		for(int i = 1; i <= N; i++) {
			sum += i;
		}
		System.out.println(sum);
	}

}

</source>
</class>

<class classid="172" nclones="3" nlines="22" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00003_0P.java" startline="1" endline="27" pcid="38065">
import java.util.Scanner;
import java.util.Arrays;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        for (int i = 0; i < n; i++) {
            int[] sides = new int[3];
            sides[0] = sc.nextInt();
            sides[1] = sc.nextInt();
            sides[2] = sc.nextInt();

            Arrays.sort(sides);

            if (sides[0] * sides[0] + sides[1] * sides[1] == sides[2] * sides[2]) {
                System.out.println("YES");
            } else {
                System.out.println("NO");
            }
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00003_2P.java" startline="1" endline="27" pcid="65085">
import java.util.Scanner;
import java.util.Arrays;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        for (int i = 0; i < n; i++) {
            int[] sides = new int[3];
            sides[0] = sc.nextInt();
            sides[1] = sc.nextInt();
            sides[2] = sc.nextInt();

            Arrays.sort(sides);

            if (sides[0] * sides[0] + sides[1] * sides[1] == sides[2] * sides[2]) {
                System.out.println("YES");
            } else {
                System.out.println("NO");
            }
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p00003_4P.java" startline="1" endline="27" pcid="38066">
import java.util.Scanner;
import java.util.Arrays;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        for (int i = 0; i < n; i++) {
            int[] sides = new int[3];
            sides[0] = sc.nextInt();
            sides[1] = sc.nextInt();
            sides[2] = sc.nextInt();

            Arrays.sort(sides);

            if (sides[0] * sides[0] + sides[1] * sides[1] == sides[2] * sides[2]) {
                System.out.println("YES");
            } else {
                System.out.println("NO");
            }
        }

        sc.close();
    }
}

</source>
</class>

<class classid="173" nclones="4" nlines="22" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00005_1P.java" startline="1" endline="29" pcid="38073">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (sc.hasNext()) {
            long a = sc.nextLong();
            long b = sc.nextLong();

            long gcd = gcd(a, b);
            long lcm = (a / gcd) * b;

            System.out.println(gcd + " " + lcm);
        }

        sc.close();
    }

    private static long gcd(long a, long b) {
        while (b != 0) {
            long temp = b;
            b = a % b;
            a = temp;
        }
        return a;
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00005_3P.java" startline="1" endline="29" pcid="65086">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (sc.hasNext()) {
            long a = sc.nextLong();
            long b = sc.nextLong();

            long gcd = gcd(a, b);
            long lcm = (a / gcd) * b;

            System.out.println(gcd + " " + lcm);
        }

        sc.close();
    }

    private static long gcd(long a, long b) {
        while (b != 0) {
            long temp = b;
            b = a % b;
            a = temp;
        }
        return a;
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p00005_4P.java" startline="1" endline="29" pcid="38075">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (sc.hasNext()) {
            long a = sc.nextLong();
            long b = sc.nextLong();

            long gcd = gcd(a, b);
            long lcm = (a / gcd) * b;

            System.out.println(gcd + " " + lcm);
        }

        sc.close();
    }

    private static long gcd(long a, long b) {
        while (b != 0) {
            long temp = b;
            b = a % b;
            a = temp;
        }
        return a;
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p00005_0P.java" startline="1" endline="29" pcid="38074">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (sc.hasNext()) {
            long a = sc.nextLong();
            long b = sc.nextLong();

            long gcd = gcd(a, b);
            long lcm = (a / gcd) * b;

            System.out.println(gcd + " " + lcm);
        }

        sc.close();
    }

    private static long gcd(long a, long b) {
        while (b != 0) {
            long temp = b;
            b = a % b;
            a = temp;
        }
        return a;
    }
}

</source>
</class>

<class classid="174" nclones="3" nlines="21" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00010_2P.java" startline="1" endline="34" pcid="38097">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        for (int i = 0; i < n; i++) {
            double x1 = sc.nextDouble();
            double y1 = sc.nextDouble();
            double x2 = sc.nextDouble();
            double y2 = sc.nextDouble();
            double x3 = sc.nextDouble();
            double y3 = sc.nextDouble();

            double d = 2 * (x1 * (y2 - y3) + x2 * (y3 - y1) + x3 * (y1 - y2));

            double ux = ((x1 * x1 + y1 * y1) * (y2 - y3) +
                        (x2 * x2 + y2 * y2) * (y3 - y1) +
                        (x3 * x3 + y3 * y3) * (y1 - y2)) / d;

            double uy = ((x1 * x1 + y1 * y1) * (x3 - x2) +
                        (x2 * x2 + y2 * y2) * (x1 - x3) +
                        (x3 * x3 + y3 * y3) * (x2 - x1)) / d;

            double r = Math.sqrt((ux - x1) * (ux - x1) + (uy - y1) * (uy - y1));

            System.out.printf("%.3f %.3f %.3f\n", ux, uy, r);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00010_1P.java" startline="1" endline="34" pcid="65088">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        for (int i = 0; i < n; i++) {
            double x1 = sc.nextDouble();
            double y1 = sc.nextDouble();
            double x2 = sc.nextDouble();
            double y2 = sc.nextDouble();
            double x3 = sc.nextDouble();
            double y3 = sc.nextDouble();

            double d = 2 * (x1 * (y2 - y3) + x2 * (y3 - y1) + x3 * (y1 - y2));

            double ux = ((x1 * x1 + y1 * y1) * (y2 - y3) +
                         (x2 * x2 + y2 * y2) * (y3 - y1) +
                         (x3 * x3 + y3 * y3) * (y1 - y2)) / d;

            double uy = ((x1 * x1 + y1 * y1) * (x3 - x2) +
                         (x2 * x2 + y2 * y2) * (x1 - x3) +
                         (x3 * x3 + y3 * y3) * (x2 - x1)) / d;

            double r = Math.sqrt((ux - x1) * (ux - x1) + (uy - y1) * (uy - y1));

            System.out.printf("%.3f %.3f %.3f\n", ux, uy, r);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p00010_3P.java" startline="1" endline="34" pcid="38098">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        for (int i = 0; i < n; i++) {
            double x1 = sc.nextDouble();
            double y1 = sc.nextDouble();
            double x2 = sc.nextDouble();
            double y2 = sc.nextDouble();
            double x3 = sc.nextDouble();
            double y3 = sc.nextDouble();

            double d = 2 * (x1 * (y2 - y3) + x2 * (y3 - y1) + x3 * (y1 - y2));

            double ux = ((x1 * x1 + y1 * y1) * (y2 - y3) +
                        (x2 * x2 + y2 * y2) * (y3 - y1) +
                        (x3 * x3 + y3 * y3) * (y1 - y2)) / d;

            double uy = ((x1 * x1 + y1 * y1) * (x3 - x2) +
                        (x2 * x2 + y2 * y2) * (x1 - x3) +
                        (x3 * x3 + y3 * y3) * (x2 - x1)) / d;

            double r = Math.sqrt((ux - x1) * (ux - x1) + (uy - y1) * (uy - y1));

            System.out.printf("%.3f %.3f %.3f\n", ux, uy, r);
        }

        sc.close();
    }
}

</source>
</class>

<class classid="175" nclones="4" nlines="24" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00011_2P.java" startline="1" endline="32" pcid="38099">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int w = sc.nextInt();
        int n = sc.nextInt();

        int[] lines = new int[w + 1];
        for (int i = 1; i <= w; i++) {
            lines[i] = i;
        }

        for (int i = 0; i < n; i++) {
            String[] parts = sc.next().split(",");
            int a = Integer.parseInt(parts[0]);
            int b = Integer.parseInt(parts[1]);

            int temp = lines[a];
            lines[a] = lines[b];
            lines[b] = temp;
        }

        for (int i = 1; i <= w; i++) {
            System.out.println(lines[i]);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00011_0P.java" startline="1" endline="31" pcid="65090">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int w = sc.nextInt();
        int n = sc.nextInt();

        int[] lines = new int[w + 1];
        for (int i = 1; i <= w; i++) {
            lines[i] = i;
        }

        for (int i = 0; i < n; i++) {
            String[] parts = sc.next().split(",");
            int a = Integer.parseInt(parts[0]);
            int b = Integer.parseInt(parts[1]);

            int temp = lines[a];
            lines[a] = lines[b];
            lines[b] = temp;
        }

        for (int i = 1; i <= w; i++) {
            System.out.println(lines[i]);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p00011_3P.java" startline="1" endline="32" pcid="38100">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int w = sc.nextInt();
        int n = sc.nextInt();

        int[] lines = new int[w + 1];
        for (int i = 1; i <= w; i++) {
            lines[i] = i;
        }

        for (int i = 0; i < n; i++) {
            String[] parts = sc.next().split(",");
            int a = Integer.parseInt(parts[0]);
            int b = Integer.parseInt(parts[1]);

            int temp = lines[a];
            lines[a] = lines[b];
            lines[b] = temp;
        }

        for (int i = 1; i <= w; i++) {
            System.out.println(lines[i]);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p00011_4P.java" startline="1" endline="32" pcid="38101">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int w = sc.nextInt();
        int n = sc.nextInt();

        int[] lines = new int[w + 1];
        for (int i = 1; i <= w; i++) {
            lines[i] = i;
        }

        for (int i = 0; i < n; i++) {
            String[] parts = sc.next().split(",");
            int a = Integer.parseInt(parts[0]);
            int b = Integer.parseInt(parts[1]);

            int temp = lines[a];
            lines[a] = lines[b];
            lines[b] = temp;
        }

        for (int i = 1; i <= w; i++) {
            System.out.println(lines[i]);
        }

        sc.close();
    }
}

</source>
</class>

<class classid="176" nclones="3" nlines="13" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00019_1P.java" startline="1" endline="17" pcid="38135">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();

        long factorial = 1;
        for (int i = 1; i <= n; i++) {
            factorial *= i;
        }

        System.out.println(factorial);
        scanner.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00019_4P.java" startline="1" endline="17" pcid="65094">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();

        long factorial = 1;
        for (int i = 1; i <= n; i++) {
            factorial *= i;
        }

        System.out.println(factorial);
        scanner.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p00019_0P.java" startline="1" endline="17" pcid="38138">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();

        long factorial = 1;
        for (int i = 1; i <= n; i++) {
            factorial *= i;
        }

        System.out.println(factorial);
        scanner.close();
    }
}

</source>
</class>

<class classid="177" nclones="3" nlines="29" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00021_0P.java" startline="1" endline="35" pcid="38145">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        for (int i = 0; i < n; i++) {
            double x1 = sc.nextDouble();
            double y1 = sc.nextDouble();
            double x2 = sc.nextDouble();
            double y2 = sc.nextDouble();
            double x3 = sc.nextDouble();
            double y3 = sc.nextDouble();
            double x4 = sc.nextDouble();
            double y4 = sc.nextDouble();

            double dx1 = x2 - x1;
            double dy1 = y2 - y1;
            double dx2 = x4 - x3;
            double dy2 = y4 - y3;

            double crossProduct = dx1 * dy2 - dy1 * dx2;

            if (Math.abs(crossProduct) < 1e-9) {
                System.out.println("YES");
            } else {
                System.out.println("NO");
            }
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00021_2P.java" startline="1" endline="35" pcid="65096">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        for (int i = 0; i < n; i++) {
            double x1 = sc.nextDouble();
            double y1 = sc.nextDouble();
            double x2 = sc.nextDouble();
            double y2 = sc.nextDouble();
            double x3 = sc.nextDouble();
            double y3 = sc.nextDouble();
            double x4 = sc.nextDouble();
            double y4 = sc.nextDouble();

            double dx1 = x2 - x1;
            double dy1 = y2 - y1;
            double dx2 = x4 - x3;
            double dy2 = y4 - y3;

            double crossProduct = dx1 * dy2 - dy1 * dx2;

            if (Math.abs(crossProduct) < 1e-9) {
                System.out.println("YES");
            } else {
                System.out.println("NO");
            }
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00021_3P.java" startline="1" endline="36" pcid="65097">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        for (int i = 0; i < n; i++) {
            double x1 = sc.nextDouble();
            double y1 = sc.nextDouble();
            double x2 = sc.nextDouble();
            double y2 = sc.nextDouble();
            double x3 = sc.nextDouble();
            double y3 = sc.nextDouble();
            double x4 = sc.nextDouble();
            double y4 = sc.nextDouble();

            double dx1 = x2 - x1;
            double dy1 = y2 - y1;

            double dx2 = x4 - x3;
            double dy2 = y4 - y3;

            double crossProduct = dx1 * dy2 - dy1 * dx2;

            if (Math.abs(crossProduct) < 1e-9) {
                System.out.println("YES");
            } else {
                System.out.println("NO");
            }
        }

        sc.close();
    }
}

</source>
</class>

<class classid="178" nclones="3" nlines="21" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00027_1P.java" startline="1" endline="33" pcid="38169">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int[] daysInMonth = {0, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};

        String[] dayNames = {"Thursday", "Friday", "Saturday", "Sunday", "Monday", "Tuesday", "Wednesday"};

        while (true) {
            int m = sc.nextInt();
            int d = sc.nextInt();

            if (m == 0 && d == 0) break;

            int totalDays = 0;

            for (int i = 1; i < m; i++) {
                totalDays += daysInMonth[i];
            }

            totalDays += d - 1;

            int dayIndex = totalDays % 7;

            System.out.println(dayNames[dayIndex]);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00027_2P.java" startline="1" endline="33" pcid="65099">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int[] daysInMonth = {0, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};

        String[] dayNames = {"Thursday", "Friday", "Saturday", "Sunday", "Monday", "Tuesday", "Wednesday"};

        while (true) {
            int m = sc.nextInt();
            int d = sc.nextInt();

            if (m == 0 && d == 0) break;

            int totalDays = 0;

            for (int i = 1; i < m; i++) {
                totalDays += daysInMonth[i];
            }

            totalDays += d - 1;

            int dayIndex = totalDays % 7;

            System.out.println(dayNames[dayIndex]);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p00027_4P.java" startline="1" endline="30" pcid="38175">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int[] daysInMonth = {0, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};

        String[] dayNames = {"Thursday", "Friday", "Saturday", "Sunday", "Monday", "Tuesday", "Wednesday"};

        while (true) {
            int m = sc.nextInt();
            int d = sc.nextInt();

            if (m == 0 && d == 0) break;

            int totalDays = 0;
            for (int i = 1; i < m; i++) {
                totalDays += daysInMonth[i];
            }
            totalDays += d - 1;

            int dayIndex = totalDays % 7;
            System.out.println(dayNames[dayIndex]);
        }

        sc.close();
    }
}

</source>
</class>

<class classid="179" nclones="2" nlines="22" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00031_0P.java" startline="1" endline="28" pcid="38189">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (sc.hasNextInt()) {
            int weight = sc.nextInt();
            List<Integer> weights = new ArrayList<>();

            for (int i = 0; i < 10; i++) {
                int powerOf2 = 1 << i;
                if ((weight & powerOf2) != 0) {
                    weights.add(powerOf2);
                }
            }

            for (int i = 0; i < weights.size(); i++) {
                if (i > 0) System.out.print(" ");
                System.out.print(weights.get(i));
            }
            System.out.println();
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00031_3P.java" startline="1" endline="28" pcid="65100">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (sc.hasNextInt()) {
            int weight = sc.nextInt();
            List<Integer> weights = new ArrayList<>();

            for (int i = 0; i < 10; i++) {
                int powerOf2 = 1 << i;
                if ((weight & powerOf2) != 0) {
                    weights.add(powerOf2);
                }
            }

            for (int i = 0; i < weights.size(); i++) {
                if (i > 0) System.out.print(" ");
                System.out.print(weights.get(i));
            }
            System.out.println();
        }

        sc.close();
    }
}

</source>
</class>

<class classid="180" nclones="2" nlines="25" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00032_3P.java" startline="1" endline="31" pcid="38193">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int rectangles = 0;
        int rhombuses = 0;

        while (scanner.hasNextLine()) {
            String line = scanner.nextLine().trim();
            if (line.isEmpty()) break;

            String[] parts = line.split(",");
            int a = Integer.parseInt(parts[0]);
            int b = Integer.parseInt(parts[1]);
            int c = Integer.parseInt(parts[2]);

            if (a * a + b * b == c * c) {
                rectangles++;
            }
            else if (a == b) {
                rhombuses++;
            }
        }

        System.out.println(rectangles);
        System.out.println(rhombuses);
        scanner.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00032_1P.java" startline="1" endline="31" pcid="65102">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int rectangles = 0;
        int rhombuses = 0;

        while (scanner.hasNextLine()) {
            String line = scanner.nextLine().trim();
            if (line.isEmpty()) break;

            String[] parts = line.split(",");
            int a = Integer.parseInt(parts[0]);
            int b = Integer.parseInt(parts[1]);
            int c = Integer.parseInt(parts[2]);

            if (a * a + b * b == c * c) {
                rectangles++;
            }
            else if (a == b) {
                rhombuses++;
            }
        }

        System.out.println(rectangles);
        System.out.println(rhombuses);
        scanner.close();
    }
}

</source>
</class>

<class classid="181" nclones="5" nlines="21" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00054_0P.java" startline="1" endline="28" pcid="38291">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (sc.hasNext()) {
            int a = sc.nextInt();
            int b = sc.nextInt();
            int n = sc.nextInt();

            int sum = 0;
            int remainder = a % b;

            for (int i = 0; i < n; i++) {
                remainder *= 10;
                int digit = remainder / b;
                sum += digit;
                remainder = remainder % b;
            }

            System.out.println(sum);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00054_3P.java" startline="1" endline="28" pcid="65111">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (sc.hasNext()) {
            int a = sc.nextInt();
            int b = sc.nextInt();
            int n = sc.nextInt();

            int sum = 0;
            int remainder = a % b;

            for (int i = 0; i < n; i++) {
                remainder *= 10;
                int digit = remainder / b;
                sum += digit;
                remainder = remainder % b;
            }

            System.out.println(sum);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p00054_2P.java" startline="1" endline="28" pcid="38292">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (sc.hasNext()) {
            int a = sc.nextInt();
            int b = sc.nextInt();
            int n = sc.nextInt();

            int sum = 0;
            int remainder = a % b;

            for (int i = 0; i < n; i++) {
                remainder *= 10;
                int digit = remainder / b;
                sum += digit;
                remainder = remainder % b;
            }

            System.out.println(sum);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p00054_4P.java" startline="1" endline="28" pcid="38294">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (sc.hasNext()) {
            int a = sc.nextInt();
            int b = sc.nextInt();
            int n = sc.nextInt();

            int sum = 0;
            int remainder = a % b;

            for (int i = 0; i < n; i++) {
                remainder *= 10;
                int digit = remainder / b;
                sum += digit;
                remainder = remainder % b;
            }

            System.out.println(sum);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p00054_1P.java" startline="1" endline="28" pcid="38293">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (sc.hasNext()) {
            int a = sc.nextInt();
            int b = sc.nextInt();
            int n = sc.nextInt();

            int sum = 0;
            int remainder = a % b;

            for (int i = 0; i < n; i++) {
                remainder *= 10;
                int digit = remainder / b;
                sum += digit;
                remainder = remainder % b;
            }

            System.out.println(sum);
        }

        sc.close();
    }
}

</source>
</class>

<class classid="182" nclones="3" nlines="27" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00063_1P.java" startline="1" endline="34" pcid="38334">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int count = 0;

        while (scanner.hasNextLine()) {
            String line = scanner.nextLine();
            if (isPalindrome(line)) {
                count++;
            }
        }

        System.out.println(count);
        scanner.close();
    }

    private static boolean isPalindrome(String str) {
        int left = 0;
        int right = str.length() - 1;

        while (left < right) {
            if (str.charAt(left) != str.charAt(right)) {
                return false;
            }
            left++;
            right--;
        }

        return true;
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00063_3P.java" startline="1" endline="34" pcid="65113">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int count = 0;

        while (scanner.hasNextLine()) {
            String line = scanner.nextLine();
            if (isPalindrome(line)) {
                count++;
            }
        }

        System.out.println(count);
        scanner.close();
    }

    private static boolean isPalindrome(String str) {
        int left = 0;
        int right = str.length() - 1;

        while (left < right) {
            if (str.charAt(left) != str.charAt(right)) {
                return false;
            }
            left++;
            right--;
        }

        return true;
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p00063_2P.java" startline="1" endline="34" pcid="38336">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int count = 0;

        while (scanner.hasNextLine()) {
            String line = scanner.nextLine();
            if (isPalindrome(line)) {
                count++;
            }
        }

        System.out.println(count);
        scanner.close();
    }

    private static boolean isPalindrome(String str) {
        int left = 0;
        int right = str.length() - 1;

        while (left < right) {
            if (str.charAt(left) != str.charAt(right)) {
                return false;
            }
            left++;
            right--;
        }

        return true;
    }
}

</source>
</class>

<class classid="183" nclones="2" nlines="27" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00074_0P.java" startline="1" endline="38" pcid="38385">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int h = sc.nextInt();
            int m = sc.nextInt();
            int s = sc.nextInt();

            if (h == -1 && m == -1 && s == -1) {
                break;
            }

            int usedSeconds = h * 3600 + m * 60 + s;

            int totalSeconds = 120 * 60;

            int remainingSeconds = totalSeconds - usedSeconds;

            int standardHours = remainingSeconds / 3600;
            int standardMinutes = (remainingSeconds % 3600) / 60;
            int standardSecs = remainingSeconds % 60;

            int tripleRecordingSeconds = remainingSeconds * 3;
            int tripleHours = tripleRecordingSeconds / 3600;
            int tripleMinutes = (tripleRecordingSeconds % 3600) / 60;
            int tripleSecs = tripleRecordingSeconds % 60;

            System.out.printf("%02d:%02d:%02d\n", standardHours, standardMinutes, standardSecs);
            System.out.printf("%02d:%02d:%02d\n", tripleHours, tripleMinutes, tripleSecs);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00074_2P.java" startline="1" endline="38" pcid="65117">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int h = sc.nextInt();
            int m = sc.nextInt();
            int s = sc.nextInt();

            if (h == -1 && m == -1 && s == -1) {
                break;
            }

            int usedSeconds = h * 3600 + m * 60 + s;

            int totalSeconds = 120 * 60;

            int remainingSeconds = totalSeconds - usedSeconds;

            int standardHours = remainingSeconds / 3600;
            int standardMinutes = (remainingSeconds % 3600) / 60;
            int standardSecs = remainingSeconds % 60;

            int tripleRecordingSeconds = remainingSeconds * 3;
            int tripleHours = tripleRecordingSeconds / 3600;
            int tripleMinutes = (tripleRecordingSeconds % 3600) / 60;
            int tripleSecs = tripleRecordingSeconds % 60;

            System.out.printf("%02d:%02d:%02d\n", standardHours, standardMinutes, standardSecs);
            System.out.printf("%02d:%02d:%02d\n", tripleHours, tripleMinutes, tripleSecs);
        }

        sc.close();
    }
}

</source>
</class>

<class classid="184" nclones="3" nlines="28" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00077_1P.java" startline="1" endline="36" pcid="38397">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        while (scanner.hasNextLine()) {
            String line = scanner.nextLine();
            if (line.isEmpty()) break;

            StringBuilder result = new StringBuilder();
            int i = 0;

            while (i < line.length()) {
                if (line.charAt(i) == '@') {
                    int count = Character.getNumericValue(line.charAt(i + 1));
                    char ch = line.charAt(i + 2);

                    for (int j = 0; j < count; j++) {
                        result.append(ch);
                    }

                    i += 3;
                } else {
                    result.append(line.charAt(i));
                    i++;
                }
            }

            System.out.println(result.toString());
        }

        scanner.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00077_0P.java" startline="1" endline="36" pcid="65120">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        while (scanner.hasNextLine()) {
            String line = scanner.nextLine();
            if (line.isEmpty()) break;

            StringBuilder result = new StringBuilder();
            int i = 0;

            while (i < line.length()) {
                if (line.charAt(i) == '@') {
                    int count = Character.getNumericValue(line.charAt(i + 1));
                    char ch = line.charAt(i + 2);

                    for (int j = 0; j < count; j++) {
                        result.append(ch);
                    }

                    i += 3;
                } else {
                    result.append(line.charAt(i));
                    i++;
                }
            }

            System.out.println(result.toString());
        }

        scanner.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p00077_4P.java" startline="1" endline="36" pcid="38400">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        while (scanner.hasNextLine()) {
            String line = scanner.nextLine();
            if (line.isEmpty()) break;

            StringBuilder result = new StringBuilder();
            int i = 0;

            while (i < line.length()) {
                if (line.charAt(i) == '@') {
                    int count = Character.getNumericValue(line.charAt(i + 1));
                    char ch = line.charAt(i + 2);

                    for (int j = 0; j < count; j++) {
                        result.append(ch);
                    }

                    i += 3;
                } else {
                    result.append(line.charAt(i));
                    i++;
                }
            }

            System.out.println(result.toString());
        }

        scanner.close();
    }
}

</source>
</class>

<class classid="185" nclones="2" nlines="31" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00092_4P.java" startline="1" endline="38" pcid="38468">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int n = sc.nextInt();
            if (n == 0) break;

            char[][] grid = new char[n][n];
            for (int i = 0; i < n; i++) {
                grid[i] = sc.next().toCharArray();
            }

            int[][] dp = new int[n][n];
            int maxSize = 0;

            for (int i = 0; i < n; i++) {
                for (int j = 0; j < n; j++) {
                    if (grid[i][j] == '.') {
                        if (i == 0 || j == 0) {
                            dp[i][j] = 1;
                        } else {
                            dp[i][j] = Math.min(dp[i-1][j], Math.min(dp[i][j-1], dp[i-1][j-1])) + 1;
                        }
                        maxSize = Math.max(maxSize, dp[i][j]);
                    }
                }
            }

            System.out.println(maxSize);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00092_1P.java" startline="1" endline="38" pcid="65127">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int n = sc.nextInt();
            if (n == 0) break;

            char[][] grid = new char[n][n];
            for (int i = 0; i < n; i++) {
                grid[i] = sc.next().toCharArray();
            }

            int[][] dp = new int[n][n];
            int maxSize = 0;

            for (int i = 0; i < n; i++) {
                for (int j = 0; j < n; j++) {
                    if (grid[i][j] == '.') {
                        if (i == 0 || j == 0) {
                            dp[i][j] = 1;
                        } else {
                            dp[i][j] = Math.min(dp[i-1][j], Math.min(dp[i][j-1], dp[i-1][j-1])) + 1;
                        }
                        maxSize = Math.max(maxSize, dp[i][j]);
                    }
                }
            }

            System.out.println(maxSize);
        }

        sc.close();
    }
}

</source>
</class>

<class classid="186" nclones="3" nlines="33" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00093_1P.java" startline="1" endline="42" pcid="38469">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        boolean first = true;

        while (true) {
            int a = sc.nextInt();
            int b = sc.nextInt();

            if (a == 0 && b == 0) break;

            if (!first) {
                System.out.println();
            }
            first = false;

            boolean found = false;
            for (int year = a; year <= b; year++) {
                if (isLeapYear(year)) {
                    System.out.println(year);
                    found = true;
                }
            }

            if (!found) {
                System.out.println("NA");
            }
        }

        sc.close();
    }

    private static boolean isLeapYear(int year) {
        if (year % 400 == 0) return true;
        if (year % 100 == 0) return false;
        if (year % 4 == 0) return true;
        return false;
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00093_0P.java" startline="1" endline="42" pcid="65128">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        boolean first = true;

        while (true) {
            int a = sc.nextInt();
            int b = sc.nextInt();

            if (a == 0 && b == 0) break;

            if (!first) {
                System.out.println();
            }
            first = false;

            boolean found = false;
            for (int year = a; year <= b; year++) {
                if (isLeapYear(year)) {
                    System.out.println(year);
                    found = true;
                }
            }

            if (!found) {
                System.out.println("NA");
            }
        }

        sc.close();
    }

    private static boolean isLeapYear(int year) {
        if (year % 400 == 0) return true;
        if (year % 100 == 0) return false;
        if (year % 4 == 0) return true;
        return false;
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p00093_4P.java" startline="1" endline="42" pcid="38471">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        boolean first = true;

        while (true) {
            int a = sc.nextInt();
            int b = sc.nextInt();

            if (a == 0 && b == 0) break;

            if (!first) {
                System.out.println();
            }
            first = false;

            boolean found = false;
            for (int year = a; year <= b; year++) {
                if (isLeapYear(year)) {
                    System.out.println(year);
                    found = true;
                }
            }

            if (!found) {
                System.out.println("NA");
            }
        }

        sc.close();
    }

    private static boolean isLeapYear(int year) {
        if (year % 400 == 0) return true;
        if (year % 100 == 0) return false;
        if (year % 4 == 0) return true;
        return false;
    }
}

</source>
</class>

<class classid="187" nclones="2" nlines="29" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00100_1P.java" startline="1" endline="38" pcid="38502">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int n = sc.nextInt();
            if (n == 0) break;

            Map<Integer, Long> sales = new LinkedHashMap<>();

            for (int i = 0; i < n; i++) {
                int id = sc.nextInt();
                int price = sc.nextInt();
                int quantity = sc.nextInt();

                long proceeds = (long) price * quantity;
                sales.put(id, sales.getOrDefault(id, 0L) + proceeds);
            }

            boolean found = false;
            for (Map.Entry<Integer, Long> entry : sales.entrySet()) {
                if (entry.getValue() >= 1000000) {
                    System.out.println(entry.getKey());
                    found = true;
                }
            }

            if (!found) {
                System.out.println("NA");
            }
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00100_4P.java" startline="1" endline="38" pcid="65131">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int n = sc.nextInt();
            if (n == 0) break;

            Map<Integer, Long> sales = new LinkedHashMap<>();

            for (int i = 0; i < n; i++) {
                int id = sc.nextInt();
                int price = sc.nextInt();
                int quantity = sc.nextInt();

                long proceeds = (long) price * quantity;
                sales.put(id, sales.getOrDefault(id, 0L) + proceeds);
            }

            boolean found = false;
            for (Map.Entry<Integer, Long> entry : sales.entrySet()) {
                if (entry.getValue() >= 1000000) {
                    System.out.println(entry.getKey());
                    found = true;
                }
            }

            if (!found) {
                System.out.println("NA");
            }
        }

        sc.close();
    }
}

</source>
</class>

<class classid="188" nclones="2" nlines="45" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00104_1P.java" startline="1" endline="47" pcid="38517">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int H = sc.nextInt();
            int W = sc.nextInt();

            if (H == 0 && W == 0) break;

            char[][] grid = new char[H][W];
            for (int i = 0; i < H; i++) {
                grid[i] = sc.next().toCharArray();
            }

            Set<String> visited = new HashSet<>();
            int x = 0, y = 0;

            while (true) {
                String pos = x + "," + y;
                if (visited.contains(pos)) {
                    System.out.println("LOOP");
                    break;
                }
                visited.add(pos);

                char tile = grid[y][x];
                if (tile == '.') {
                    System.out.println(x + " " + y);
                    break;
                }

                switch (tile) {
                    case '>': x++; break;
                    case '<': x--; break;
                    case '^': y--; break;
                    case 'v': y++; break;
                }
            }
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00104_0P.java" startline="1" endline="48" pcid="65135">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int H = sc.nextInt();
            int W = sc.nextInt();

            if (H == 0 && W == 0) break;

            char[][] grid = new char[H][W];
            for (int i = 0; i < H; i++) {
                grid[i] = sc.next().toCharArray();
            }

            Set<String> visited = new HashSet<>();
            int x = 0, y = 0;

            while (true) {
                String pos = x + "," + y;
                if (visited.contains(pos)) {
                    System.out.println("LOOP");
                    break;
                }

                visited.add(pos);
                char tile = grid[y][x];

                if (tile == '.') {
                    System.out.println(x + " " + y);
                    break;
                }

                switch (tile) {
                    case '>': x++; break;
                    case '<': x--; break;
                    case '^': y--; break;
                    case 'v': y++; break;
                }
            }
        }

        sc.close();
    }
}

</source>
</class>

<class classid="189" nclones="2" nlines="39" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00119_3P.java" startline="1" endline="48" pcid="38583">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int m = sc.nextInt();
        int n = sc.nextInt();

        List<List<Integer>> graph = new ArrayList<>();
        int[] indegree = new int[m + 1];

        for (int i = 0; i <= m; i++) {
            graph.add(new ArrayList<>());
        }

        for (int i = 0; i < n; i++) {
            int x = sc.nextInt();
            int y = sc.nextInt();
            graph.get(x).add(y);
            indegree[y]++;
        }

        Queue<Integer> queue = new LinkedList<>();
        for (int i = 1; i <= m; i++) {
            if (indegree[i] == 0) {
                queue.offer(i);
            }
        }

        List<Integer> result = new ArrayList<>();
        while (!queue.isEmpty()) {
            int curr = queue.poll();
            result.add(curr);

            for (int next : graph.get(curr)) {
                indegree[next]--;
                if (indegree[next] == 0) {
                    queue.offer(next);
                }
            }
        }

        for (int suspect : result) {
            System.out.println(suspect);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00119_1P.java" startline="1" endline="48" pcid="65140">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int m = sc.nextInt();
        int n = sc.nextInt();

        List<List<Integer>> graph = new ArrayList<>();
        int[] indegree = new int[m + 1];

        for (int i = 0; i <= m; i++) {
            graph.add(new ArrayList<>());
        }

        for (int i = 0; i < n; i++) {
            int x = sc.nextInt();
            int y = sc.nextInt();
            graph.get(x).add(y);
            indegree[y]++;
        }

        Queue<Integer> queue = new LinkedList<>();
        for (int i = 1; i <= m; i++) {
            if (indegree[i] == 0) {
                queue.offer(i);
            }
        }

        List<Integer> result = new ArrayList<>();
        while (!queue.isEmpty()) {
            int curr = queue.poll();
            result.add(curr);

            for (int next : graph.get(curr)) {
                indegree[next]--;
                if (indegree[next] == 0) {
                    queue.offer(next);
                }
            }
        }

        for (int suspect : result) {
            System.out.println(suspect);
        }
    }
}

</source>
</class>

<class classid="190" nclones="4" nlines="37" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00136_1P.java" startline="1" endline="39" pcid="38653">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        int[] count = new int[6];

        for (int i = 0; i < n; i++) {
            double height = sc.nextDouble();

            if (height < 165.0) {
                count[0]++;
            } else if (height < 170.0) {
                count[1]++;
            } else if (height < 175.0) {
                count[2]++;
            } else if (height < 180.0) {
                count[3]++;
            } else if (height < 185.0) {
                count[4]++;
            } else {
                count[5]++;
            }
        }

        for (int i = 0; i < 6; i++) {
            System.out.print((i + 1) + ":");
            for (int j = 0; j < count[i]; j++) {
                System.out.print("*");
            }
            System.out.println();
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00136_3P.java" startline="1" endline="39" pcid="65145">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        int[] count = new int[6];

        for (int i = 0; i < n; i++) {
            double height = sc.nextDouble();

            if (height < 165.0) {
                count[0]++;
            } else if (height < 170.0) {
                count[1]++;
            } else if (height < 175.0) {
                count[2]++;
            } else if (height < 180.0) {
                count[3]++;
            } else if (height < 185.0) {
                count[4]++;
            } else {
                count[5]++;
            }
        }

        for (int i = 0; i < 6; i++) {
            System.out.print((i + 1) + ":");
            for (int j = 0; j < count[i]; j++) {
                System.out.print("*");
            }
            System.out.println();
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p00136_4P.java" startline="1" endline="39" pcid="38655">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        int[] count = new int[6];

        for (int i = 0; i < n; i++) {
            double height = sc.nextDouble();

            if (height < 165.0) {
                count[0]++;
            } else if (height < 170.0) {
                count[1]++;
            } else if (height < 175.0) {
                count[2]++;
            } else if (height < 180.0) {
                count[3]++;
            } else if (height < 185.0) {
                count[4]++;
            } else {
                count[5]++;
            }
        }

        for (int i = 0; i < 6; i++) {
            System.out.print((i + 1) + ":");
            for (int j = 0; j < count[i]; j++) {
                System.out.print("*");
            }
            System.out.println();
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p00136_2P.java" startline="1" endline="39" pcid="38654">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        int[] count = new int[6];

        for (int i = 0; i < n; i++) {
            double height = sc.nextDouble();

            if (height < 165.0) {
                count[0]++;
            } else if (height < 170.0) {
                count[1]++;
            } else if (height < 175.0) {
                count[2]++;
            } else if (height < 180.0) {
                count[3]++;
            } else if (height < 185.0) {
                count[4]++;
            } else {
                count[5]++;
            }
        }

        for (int i = 0; i < 6; i++) {
            System.out.print((i + 1) + ":");
            for (int j = 0; j < count[i]; j++) {
                System.out.print("*");
            }
            System.out.println();
        }

        sc.close();
    }
}

</source>
</class>

<class classid="191" nclones="2" nlines="20" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00137_2P.java" startline="1" endline="25" pcid="38656">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int d = sc.nextInt();

        for (int caseNum = 1; caseNum <= d; caseNum++) {
            int s = sc.nextInt();
            System.out.println("Case " + caseNum + ":");

            int current = s;
            for (int i = 0; i < 10; i++) {
                long square = (long) current * current;
                String squareStr = String.format("%08d", square);
                String middle = squareStr.substring(2, 6);
                current = Integer.parseInt(middle);
                System.out.println(current);
            }
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00137_1P.java" startline="1" endline="25" pcid="65146">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int d = sc.nextInt();

        for (int caseNum = 1; caseNum <= d; caseNum++) {
            int s = sc.nextInt();
            System.out.println("Case " + caseNum + ":");

            int current = s;
            for (int i = 0; i < 10; i++) {
                long square = (long) current * current;
                String squareStr = String.format("%08d", square);
                String middle = squareStr.substring(2, 6);
                current = Integer.parseInt(middle);
                System.out.println(current);
            }
        }

        sc.close();
    }
}

</source>
</class>

<class classid="192" nclones="3" nlines="43" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00149_0P.java" startline="1" endline="46" pcid="38706">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int[] leftCount = new int[4];
        int[] rightCount = new int[4];

        while (sc.hasNextLine()) {
            String line = sc.nextLine().trim();
            if (line.isEmpty()) break;

            String[] parts = line.split(" ");
            double left = Double.parseDouble(parts[0]);
            double right = Double.parseDouble(parts[1]);

            if (left >= 1.1) {
                leftCount[0]++;
            } else if (left >= 0.6) {
                leftCount[1]++;
            } else if (left >= 0.2) {
                leftCount[2]++;
            } else {
                leftCount[3]++;
            }

            if (right >= 1.1) {
                rightCount[0]++;
            } else if (right >= 0.6) {
                rightCount[1]++;
            } else if (right >= 0.2) {
                rightCount[2]++;
            } else {
                rightCount[3]++;
            }
        }

        for (int i = 0; i < 4; i++) {
            System.out.println(leftCount[i] + " " + rightCount[i]);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00149_3P.java" startline="1" endline="46" pcid="65151">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int[] leftCount = new int[4];
        int[] rightCount = new int[4];

        while (sc.hasNextLine()) {
            String line = sc.nextLine().trim();
            if (line.isEmpty()) break;

            String[] parts = line.split(" ");
            double left = Double.parseDouble(parts[0]);
            double right = Double.parseDouble(parts[1]);

            if (left >= 1.1) {
                leftCount[0]++;
            } else if (left >= 0.6) {
                leftCount[1]++;
            } else if (left >= 0.2) {
                leftCount[2]++;
            } else {
                leftCount[3]++;
            }

            if (right >= 1.1) {
                rightCount[0]++;
            } else if (right >= 0.6) {
                rightCount[1]++;
            } else if (right >= 0.2) {
                rightCount[2]++;
            } else {
                rightCount[3]++;
            }
        }

        for (int i = 0; i < 4; i++) {
            System.out.println(leftCount[i] + " " + rightCount[i]);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p00149_4P.java" startline="1" endline="46" pcid="38708">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int[] leftCount = new int[4];
        int[] rightCount = new int[4];

        while (sc.hasNextLine()) {
            String line = sc.nextLine().trim();
            if (line.isEmpty()) break;

            String[] parts = line.split(" ");
            double left = Double.parseDouble(parts[0]);
            double right = Double.parseDouble(parts[1]);

            if (left >= 1.1) {
                leftCount[0]++;
            } else if (left >= 0.6) {
                leftCount[1]++;
            } else if (left >= 0.2) {
                leftCount[2]++;
            } else {
                leftCount[3]++;
            }

            if (right >= 1.1) {
                rightCount[0]++;
            } else if (right >= 0.6) {
                rightCount[1]++;
            } else if (right >= 0.2) {
                rightCount[2]++;
            } else {
                rightCount[3]++;
            }
        }

        for (int i = 0; i < 4; i++) {
            System.out.println(leftCount[i] + " " + rightCount[i]);
        }

        sc.close();
    }
}

</source>
</class>

<class classid="193" nclones="3" nlines="26" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00159_3P.java" startline="1" endline="35" pcid="38734">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int n = sc.nextInt();
            if (n == 0) break;

            int bestId = Integer.MAX_VALUE;
            double minDiff = Double.MAX_VALUE;

            for (int i = 0; i < n; i++) {
                int id = sc.nextInt();
                int height = sc.nextInt();
                int weight = sc.nextInt();

                double heightM = height / 100.0;
                double bmi = weight / (heightM * heightM);
                double diff = Math.abs(bmi - 22.0);

                if (diff < minDiff || (diff == minDiff && id < bestId)) {
                    minDiff = diff;
                    bestId = id;
                }
            }

            System.out.println(bestId);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00159_2P.java" startline="1" endline="35" pcid="65158">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int n = sc.nextInt();
            if (n == 0) break;

            int bestId = Integer.MAX_VALUE;
            double minDiff = Double.MAX_VALUE;

            for (int i = 0; i < n; i++) {
                int id = sc.nextInt();
                int height = sc.nextInt();
                int weight = sc.nextInt();

                double heightM = height / 100.0;
                double bmi = weight / (heightM * heightM);
                double diff = Math.abs(bmi - 22.0);

                if (diff < minDiff || (diff == minDiff && id < bestId)) {
                    minDiff = diff;
                    bestId = id;
                }
            }

            System.out.println(bestId);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p00159_0P.java" startline="1" endline="35" pcid="38736">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int n = sc.nextInt();
            if (n == 0) break;

            int bestId = Integer.MAX_VALUE;
            double minDiff = Double.MAX_VALUE;

            for (int i = 0; i < n; i++) {
                int id = sc.nextInt();
                int height = sc.nextInt();
                int weight = sc.nextInt();

                double heightM = height / 100.0;
                double bmi = weight / (heightM * heightM);
                double diff = Math.abs(bmi - 22.0);

                if (diff < minDiff || (diff == minDiff && id < bestId)) {
                    minDiff = diff;
                    bestId = id;
                }
            }

            System.out.println(bestId);
        }

        sc.close();
    }
}

</source>
</class>

<class classid="194" nclones="2" nlines="51" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00181_3P.java" startline="1" endline="63" pcid="38804">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int m = sc.nextInt();
            int n = sc.nextInt();

            if (m == 0 && n == 0) break;

            int[] w = new int[n];
            int maxWidth = 0;
            int totalWidth = 0;

            for (int i = 0; i < n; i++) {
                w[i] = sc.nextInt();
                maxWidth = Math.max(maxWidth, w[i]);
                totalWidth += w[i];
            }

            int left = maxWidth;
            int right = totalWidth;
            int answer = right;

            while (left <= right) {
                int mid = left + (right - left) / 2;

                if (canFit(w, m, mid)) {
                    answer = mid;
                    right = mid - 1;
                } else {
                    left = mid + 1;
                }
            }

            System.out.println(answer);
        }

        sc.close();
    }

    private static boolean canFit(int[] w, int m, int maxWidth) {
        int shelves = 1;
        int currentWidth = 0;

        for (int i = 0; i < w.length; i++) {
            if (currentWidth + w[i] <= maxWidth) {
                currentWidth += w[i];
            } else {
                shelves++;
                currentWidth = w[i];
                if (shelves > m) {
                    return false;
                }
            }
        }

        return true;
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00181_4P.java" startline="1" endline="63" pcid="65167">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int m = sc.nextInt();
            int n = sc.nextInt();

            if (m == 0 && n == 0) break;

            int[] w = new int[n];
            int maxWidth = 0;
            int totalWidth = 0;

            for (int i = 0; i < n; i++) {
                w[i] = sc.nextInt();
                maxWidth = Math.max(maxWidth, w[i]);
                totalWidth += w[i];
            }

            int left = maxWidth;
            int right = totalWidth;
            int answer = right;

            while (left <= right) {
                int mid = left + (right - left) / 2;

                if (canFit(w, m, mid)) {
                    answer = mid;
                    right = mid - 1;
                } else {
                    left = mid + 1;
                }
            }

            System.out.println(answer);
        }

        sc.close();
    }

    private static boolean canFit(int[] w, int m, int maxWidth) {
        int shelves = 1;
        int currentWidth = 0;

        for (int i = 0; i < w.length; i++) {
            if (currentWidth + w[i] <= maxWidth) {
                currentWidth += w[i];
            } else {
                shelves++;
                currentWidth = w[i];
                if (shelves > m) {
                    return false;
                }
            }
        }

        return true;
    }
}

</source>
</class>

<class classid="195" nclones="4" nlines="28" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00185_1P.java" startline="1" endline="36" pcid="38811">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        boolean[] isPrime = new boolean[1000001];
        Arrays.fill(isPrime, true);
        isPrime[0] = isPrime[1] = false;

        for (int i = 2; i * i <= 1000000; i++) {
            if (isPrime[i]) {
                for (int j = i * i; j <= 1000000; j += i) {
                    isPrime[j] = false;
                }
            }
        }

        while (true) {
            int n = sc.nextInt();
            if (n == 0) break;

            int count = 0;
            for (int p = 2; p <= n / 2; p++) {
                if (isPrime[p] && isPrime[n - p]) {
                    count++;
                }
            }

            System.out.println(count);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00185_0P.java" startline="1" endline="36" pcid="65170">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        boolean[] isPrime = new boolean[1000001];
        Arrays.fill(isPrime, true);
        isPrime[0] = isPrime[1] = false;

        for (int i = 2; i * i <= 1000000; i++) {
            if (isPrime[i]) {
                for (int j = i * i; j <= 1000000; j += i) {
                    isPrime[j] = false;
                }
            }
        }

        while (true) {
            int n = sc.nextInt();
            if (n == 0) break;

            int count = 0;
            for (int p = 2; p <= n / 2; p++) {
                if (isPrime[p] && isPrime[n - p]) {
                    count++;
                }
            }

            System.out.println(count);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p00185_4P.java" startline="1" endline="36" pcid="38814">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        boolean[] isPrime = new boolean[1000001];
        Arrays.fill(isPrime, true);
        isPrime[0] = isPrime[1] = false;

        for (int i = 2; i * i <= 1000000; i++) {
            if (isPrime[i]) {
                for (int j = i * i; j <= 1000000; j += i) {
                    isPrime[j] = false;
                }
            }
        }

        while (true) {
            int n = sc.nextInt();
            if (n == 0) break;

            int count = 0;
            for (int p = 2; p <= n / 2; p++) {
                if (isPrime[p] && isPrime[n - p]) {
                    count++;
                }
            }

            System.out.println(count);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p00185_2P.java" startline="1" endline="36" pcid="38813">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        boolean[] isPrime = new boolean[1000001];
        Arrays.fill(isPrime, true);
        isPrime[0] = isPrime[1] = false;

        for (int i = 2; i * i <= 1000000; i++) {
            if (isPrime[i]) {
                for (int j = i * i; j <= 1000000; j += i) {
                    isPrime[j] = false;
                }
            }
        }

        while (true) {
            int n = sc.nextInt();
            if (n == 0) break;

            int count = 0;
            for (int p = 2; p <= n / 2; p++) {
                if (isPrime[p] && isPrime[n - p]) {
                    count++;
                }
            }

            System.out.println(count);
        }

        sc.close();
    }
}

</source>
</class>

<class classid="196" nclones="2" nlines="24" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00219_0P.java" startline="1" endline="29" pcid="38900">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int n = sc.nextInt();
            if (n == 0) break;

            int[] count = new int[10];
            for (int i = 0; i < n; i++) {
                int type = sc.nextInt();
                count[type]++;
            }

            for (int i = 0; i < 10; i++) {
                if (count[i] == 0) {
                    System.out.println("-");
                } else {
                    System.out.println("*".repeat(count[i]));
                }
            }
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00219_3P.java" startline="1" endline="29" pcid="65176">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int n = sc.nextInt();
            if (n == 0) break;

            int[] count = new int[10];
            for (int i = 0; i < n; i++) {
                int type = sc.nextInt();
                count[type]++;
            }

            for (int i = 0; i < 10; i++) {
                if (count[i] == 0) {
                    System.out.println("-");
                } else {
                    System.out.println("*".repeat(count[i]));
                }
            }
        }

        sc.close();
    }
}

</source>
</class>

<class classid="197" nclones="2" nlines="27" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00219_4P.java" startline="1" endline="33" pcid="38901">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int n = sc.nextInt();
            if (n == 0) break;

            int[] count = new int[10];

            for (int i = 0; i < n; i++) {
                int type = sc.nextInt();
                count[type]++;
            }

            for (int i = 0; i < 10; i++) {
                if (count[i] == 0) {
                    System.out.println("-");
                } else {
                    for (int j = 0; j < count[i]; j++) {
                        System.out.print("*");
                    }
                    System.out.println();
                }
            }
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00219_2P.java" startline="1" endline="33" pcid="65175">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int n = sc.nextInt();
            if (n == 0) break;

            int[] count = new int[10];

            for (int i = 0; i < n; i++) {
                int type = sc.nextInt();
                count[type]++;
            }

            for (int i = 0; i < 10; i++) {
                if (count[i] == 0) {
                    System.out.println("-");
                } else {
                    for (int j = 0; j < count[i]; j++) {
                        System.out.print("*");
                    }
                    System.out.println();
                }
            }
        }

        sc.close();
    }
}

</source>
</class>

<class classid="198" nclones="3" nlines="24" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00238_1P.java" startline="1" endline="30" pcid="38940">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int t = sc.nextInt();
            if (t == 0) break;

            int n = sc.nextInt();
            int totalStudyTime = 0;

            for (int i = 0; i < n; i++) {
                int start = sc.nextInt();
                int end = sc.nextInt();
                totalStudyTime += (end - start);
            }

            if (totalStudyTime >= t) {
                System.out.println("OK");
            } else {
                System.out.println(t - totalStudyTime);
            }
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00238_2P.java" startline="1" endline="30" pcid="65180">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int t = sc.nextInt();
            if (t == 0) break;

            int n = sc.nextInt();
            int totalStudyTime = 0;

            for (int i = 0; i < n; i++) {
                int start = sc.nextInt();
                int end = sc.nextInt();
                totalStudyTime += (end - start);
            }

            if (totalStudyTime >= t) {
                System.out.println("OK");
            } else {
                System.out.println(t - totalStudyTime);
            }
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p00238_3P.java" startline="1" endline="30" pcid="38941">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int t = sc.nextInt();
            if (t == 0) break;

            int n = sc.nextInt();
            int totalStudyTime = 0;

            for (int i = 0; i < n; i++) {
                int start = sc.nextInt();
                int end = sc.nextInt();
                totalStudyTime += (end - start);
            }

            if (totalStudyTime >= t) {
                System.out.println("OK");
            } else {
                System.out.println(t - totalStudyTime);
            }
        }

        sc.close();
    }
}

</source>
</class>

<class classid="199" nclones="2" nlines="24" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00238_4P.java" startline="1" endline="30" pcid="38942">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        while (true) {
            int t = scanner.nextInt();
            if (t == 0) break;

            int n = scanner.nextInt();
            int totalStudyTime = 0;

            for (int i = 0; i < n; i++) {
                int start = scanner.nextInt();
                int end = scanner.nextInt();
                totalStudyTime += (end - start);
            }

            if (totalStudyTime >= t) {
                System.out.println("OK");
            } else {
                System.out.println(t - totalStudyTime);
            }
        }

        scanner.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00238_0P.java" startline="1" endline="30" pcid="65179">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        while (true) {
            int t = scanner.nextInt();
            if (t == 0) break;

            int n = scanner.nextInt();
            int totalStudyTime = 0;

            for (int i = 0; i < n; i++) {
                int start = scanner.nextInt();
                int end = scanner.nextInt();
                totalStudyTime += (end - start);
            }

            if (totalStudyTime >= t) {
                System.out.println("OK");
            } else {
                System.out.println(t - totalStudyTime);
            }
        }

        scanner.close();
    }
}

</source>
</class>

<class classid="200" nclones="5" nlines="12" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00251_0P.java" startline="1" endline="16" pcid="38960">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int sum = 0;

        for (int i = 0; i < 10; i++) {
            sum += sc.nextInt();
        }

        System.out.println(sum);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00251_2P.java" startline="1" endline="16" pcid="65183">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int sum = 0;

        for (int i = 0; i < 10; i++) {
            sum += sc.nextInt();
        }

        System.out.println(sum);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p00251_1P.java" startline="1" endline="16" pcid="38964">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int sum = 0;

        for (int i = 0; i < 10; i++) {
            sum += sc.nextInt();
        }

        System.out.println(sum);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p00251_4P.java" startline="1" endline="16" pcid="38963">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int sum = 0;

        for (int i = 0; i < 10; i++) {
            sum += sc.nextInt();
        }

        System.out.println(sum);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p00251_3P.java" startline="1" endline="16" pcid="38962">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int sum = 0;

        for (int i = 0; i < 10; i++) {
            sum += sc.nextInt();
        }

        System.out.println(sum);
        sc.close();
    }
}

</source>
</class>

<class classid="201" nclones="4" nlines="12" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00271_3P.java" startline="1" endline="16" pcid="38985">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        for (int i = 0; i < 7; i++) {
            int maxTemp = sc.nextInt();
            int minTemp = sc.nextInt();
            System.out.println(maxTemp - minTemp);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p00271_4P.java" startline="1" endline="17" pcid="66898">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        for (int i = 0; i < 7; i++) {
            int maxTemp = sc.nextInt();
            int minTemp = sc.nextInt();
            System.out.println(maxTemp - minTemp);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p00271_3P.java" startline="1" endline="17" pcid="54033">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        for (int i = 0; i < 7; i++) {
            int maxTemp = sc.nextInt();
            int minTemp = sc.nextInt();
            System.out.println(maxTemp - minTemp);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p00271_1P.java" startline="1" endline="14" pcid="54030">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        for (int i = 0; i < 7; i++) {
            int maxTemp = sc.nextInt();
            int minTemp = sc.nextInt();
            System.out.println(maxTemp - minTemp);
        }
        sc.close();
    }
}

</source>
</class>

<class classid="202" nclones="3" nlines="13" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00272_1P.java" startline="1" endline="18" pcid="38986">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int[] prices = {0, 6000, 4000, 3000, 2000};

        for (int i = 0; i < 4; i++) {
            int type = sc.nextInt();
            int count = sc.nextInt();
            System.out.println(prices[type] * count);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00272_4P.java" startline="1" endline="18" pcid="65188">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int[] prices = {0, 6000, 4000, 3000, 2000};

        for (int i = 0; i < 4; i++) {
            int type = sc.nextInt();
            int count = sc.nextInt();
            System.out.println(prices[type] * count);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p00272_0P.java" startline="1" endline="16" pcid="54034">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int[] prices = {0, 6000, 4000, 3000, 2000};

        for (int i = 0; i < 4; i++) {
            int type = sc.nextInt();
            int count = sc.nextInt();
            System.out.println(prices[type] * count);
        }
        sc.close();
    }
}

</source>
</class>

<class classid="203" nclones="6" nlines="10" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00290_3P.java" startline="1" endline="12" pcid="39012">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int d = sc.nextInt();
        int c = sc.nextInt();
        System.out.println(d * c);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00290_4P.java" startline="1" endline="12" pcid="65189">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int d = sc.nextInt();
        int c = sc.nextInt();
        System.out.println(d * c);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p00290_1P.java" startline="1" endline="12" pcid="54060">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int d = sc.nextInt();
        int c = sc.nextInt();
        System.out.println(d * c);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p00290_0P.java" startline="1" endline="12" pcid="39014">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int d = sc.nextInt();
        int c = sc.nextInt();
        System.out.println(d * c);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p00290_3P.java" startline="1" endline="13" pcid="54064">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int d = sc.nextInt();
        int c = sc.nextInt();
        System.out.println(d * c);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p00290_2P.java" startline="1" endline="13" pcid="54061">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int d = sc.nextInt();
        int c = sc.nextInt();
        System.out.println(d * c);
        sc.close();
    }
}

</source>
</class>

<class classid="204" nclones="2" nlines="12" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00352_4P.java" startline="1" endline="17" pcid="39055">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int a = scanner.nextInt();
        int b = scanner.nextInt();

        int total = a + b;
        int share = total / 2;

        System.out.println(share);

        scanner.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00352_2P.java" startline="1" endline="16" pcid="65193">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int a = scanner.nextInt();
        int b = scanner.nextInt();

        int total = a + b;
        int share = total / 2;

        System.out.println(share);
        scanner.close();
    }
}

</source>
</class>

<class classid="205" nclones="4" nlines="10" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00354_0P.java" startline="1" endline="15" pcid="39059">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int x = sc.nextInt();

        String[] days = {"fri", "sat", "sun", "mon", "tue", "wed", "thu"};

        System.out.println(days[(x - 1) % 7]);

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00354_3P.java" startline="1" endline="15" pcid="65195">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int x = sc.nextInt();

        String[] days = {"fri", "sat", "sun", "mon", "tue", "wed", "thu"};

        System.out.println(days[(x - 1) % 7]);

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p00354_2P.java" startline="1" endline="15" pcid="39063">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int x = sc.nextInt();

        String[] days = {"fri", "sat", "sun", "mon", "tue", "wed", "thu"};

        System.out.println(days[(x - 1) % 7]);

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p00354_1P.java" startline="1" endline="15" pcid="39060">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int x = sc.nextInt();

        String[] days = {"fri", "sat", "sun", "mon", "tue", "wed", "thu"};

        System.out.println(days[(x - 1) % 7]);

        sc.close();
    }
}

</source>
</class>

<class classid="206" nclones="3" nlines="30" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00429_0P.java" startline="1" endline="42" pcid="39087">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int n = sc.nextInt();
            if (n == 0) break;

            String s = sc.next();

            for (int i = 0; i < n; i++) {
                s = transform(s);
            }

            System.out.println(s);
        }

        sc.close();
    }

    private static String transform(String s) {
        StringBuilder result = new StringBuilder();
        int i = 0;

        while (i < s.length()) {
            char current = s.charAt(i);
            int count = 1;

            while (i + count < s.length() && s.charAt(i + count) == current) {
                count++;
            }

            result.append(count).append(current);
            i += count;
        }

        return result.toString();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00429_1P.java" startline="1" endline="42" pcid="65197">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int n = sc.nextInt();
            if (n == 0) break;

            String s = sc.next();

            for (int i = 0; i < n; i++) {
                s = transform(s);
            }

            System.out.println(s);
        }

        sc.close();
    }

    private static String transform(String s) {
        StringBuilder result = new StringBuilder();
        int i = 0;

        while (i < s.length()) {
            char current = s.charAt(i);
            int count = 1;

            while (i + count < s.length() && s.charAt(i + count) == current) {
                count++;
            }

            result.append(count).append(current);
            i += count;
        }

        return result.toString();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p00429_2P.java" startline="1" endline="42" pcid="39088">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int n = sc.nextInt();
            if (n == 0) break;

            String s = sc.next();

            for (int i = 0; i < n; i++) {
                s = transform(s);
            }

            System.out.println(s);
        }

        sc.close();
    }

    private static String transform(String s) {
        StringBuilder result = new StringBuilder();
        int i = 0;

        while (i < s.length()) {
            char current = s.charAt(i);
            int count = 1;

            while (i + count < s.length() && s.charAt(i + count) == current) {
                count++;
            }

            result.append(count).append(current);
            i += count;
        }

        return result.toString();
    }
}

</source>
</class>

<class classid="207" nclones="2" nlines="13" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00435_4P.java" startline="1" endline="17" pcid="39109">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String input = sc.nextLine();

        StringBuilder result = new StringBuilder();
        for (char c : input.toCharArray()) {
            char decoded = (char) ((c - 'A' - 3 + 26) % 26 + 'A');
            result.append(decoded);
        }

        System.out.println(result.toString());
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00435_0P.java" startline="1" endline="17" pcid="65198">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String input = sc.nextLine();

        StringBuilder result = new StringBuilder();
        for (char c : input.toCharArray()) {
            char decoded = (char) ((c - 'A' - 3 + 26) % 26 + 'A');
            result.append(decoded);
        }

        System.out.println(result.toString());
    }
}

</source>
</class>

<class classid="208" nclones="3" nlines="23" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00445_0P.java" startline="1" endline="28" pcid="39141">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (sc.hasNext()) {
            String s = sc.next();
            int joiCount = 0;
            int ioiCount = 0;

            for (int i = 0; i <= s.length() - 3; i++) {
                String sub = s.substring(i, i + 3);
                if (sub.equals("JOI")) {
                    joiCount++;
                } else if (sub.equals("IOI")) {
                    ioiCount++;
                }
            }

            System.out.println(joiCount);
            System.out.println(ioiCount);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p00445_4P.java" startline="1" endline="24" pcid="66908">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        while (sc.hasNext()) {
            String s = sc.next();
            int joiCount = 0;
            int ioiCount = 0;
            for (int i = 0; i <= s.length() - 3; i++) {
                String sub = s.substring(i, i + 3);
                if (sub.equals("JOI")) {
                    joiCount++;
                } else if (sub.equals("IOI")) {
                    ioiCount++;
                }
            }
            System.out.println(joiCount);
            System.out.println(ioiCount);
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p00445_1P.java" startline="1" endline="24" pcid="54194">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        while (sc.hasNext()) {
            String s = sc.next();
            int joiCount = 0;
            int ioiCount = 0;
            for (int i = 0; i <= s.length() - 3; i++) {
                String sub = s.substring(i, i + 3);
                if (sub.equals("JOI")) {
                    joiCount++;
                } else if (sub.equals("IOI")) {
                    ioiCount++;
                }
            }
            System.out.println(joiCount);
            System.out.println(ioiCount);
        }
        sc.close();
    }
}

</source>
</class>

<class classid="209" nclones="3" nlines="20" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00456_1P.java" startline="1" endline="28" pcid="39178">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int[] wScores = new int[10];
        for (int i = 0; i < 10; i++) {
            wScores[i] = sc.nextInt();
        }

        int[] kScores = new int[10];
        for (int i = 0; i < 10; i++) {
            kScores[i] = sc.nextInt();
        }

        Arrays.sort(wScores);
        Arrays.sort(kScores);

        int wTotal = wScores[9] + wScores[8] + wScores[7];
        int kTotal = kScores[9] + kScores[8] + kScores[7];

        System.out.println(wTotal + " " + kTotal);

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00456_4P.java" startline="1" endline="28" pcid="65206">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int[] wScores = new int[10];
        for (int i = 0; i < 10; i++) {
            wScores[i] = sc.nextInt();
        }

        int[] kScores = new int[10];
        for (int i = 0; i < 10; i++) {
            kScores[i] = sc.nextInt();
        }

        Arrays.sort(wScores);
        Arrays.sort(kScores);

        int wTotal = wScores[9] + wScores[8] + wScores[7];
        int kTotal = kScores[9] + kScores[8] + kScores[7];

        System.out.println(wTotal + " " + kTotal);

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p00456_2P.java" startline="1" endline="28" pcid="39179">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int[] wScores = new int[10];
        for (int i = 0; i < 10; i++) {
            wScores[i] = sc.nextInt();
        }

        int[] kScores = new int[10];
        for (int i = 0; i < 10; i++) {
            kScores[i] = sc.nextInt();
        }

        Arrays.sort(wScores);
        Arrays.sort(kScores);

        int wTotal = wScores[9] + wScores[8] + wScores[7];
        int kTotal = kScores[9] + kScores[8] + kScores[7];

        System.out.println(wTotal + " " + kTotal);

        sc.close();
    }
}

</source>
</class>

<class classid="210" nclones="4" nlines="16" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00466_2P.java" startline="1" endline="22" pcid="39190">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int total = sc.nextInt();
            if (total == 0) break;

            int sum = 0;
            for (int i = 0; i < 9; i++) {
                sum += sc.nextInt();
            }

            System.out.println(total - sum);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00466_1P.java" startline="1" endline="22" pcid="65208">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int total = sc.nextInt();
            if (total == 0) break;

            int sum = 0;
            for (int i = 0; i < 9; i++) {
                sum += sc.nextInt();
            }

            System.out.println(total - sum);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p00466_4P.java" startline="1" endline="22" pcid="39195">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int total = sc.nextInt();
            if (total == 0) break;

            int sum = 0;
            for (int i = 0; i < 9; i++) {
                sum += sc.nextInt();
            }

            System.out.println(total - sum);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p00466_3P.java" startline="1" endline="22" pcid="39192">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int total = sc.nextInt();
            if (total == 0) break;

            int sum = 0;
            for (int i = 0; i < 9; i++) {
                sum += sc.nextInt();
            }

            System.out.println(total - sum);
        }

        sc.close();
    }
}

</source>
</class>

<class classid="211" nclones="3" nlines="18" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00478_0P.java" startline="1" endline="25" pcid="39206">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        String target = sc.nextLine();
        int n = Integer.parseInt(sc.nextLine());

        int count = 0;

        for (int i = 0; i < n; i++) {
            String ring = sc.nextLine();
            String doubled = ring + ring;

            if (doubled.contains(target)) {
                count++;
            }
        }

        System.out.println(count);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00478_4P.java" startline="1" endline="22" pcid="65211">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String target = sc.nextLine();
        int n = Integer.parseInt(sc.nextLine());

        int count = 0;
        for (int i = 0; i < n; i++) {
            String ring = sc.nextLine();
            String doubled = ring + ring;
            if (doubled.contains(target)) {
                count++;
            }
        }

        System.out.println(count);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p00478_1P.java" startline="1" endline="25" pcid="39215">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        String target = sc.nextLine();
        int n = Integer.parseInt(sc.nextLine());

        int count = 0;

        for (int i = 0; i < n; i++) {
            String ring = sc.nextLine();
            String doubled = ring + ring;

            if (doubled.contains(target)) {
                count++;
            }
        }

        System.out.println(count);
        sc.close();
    }
}

</source>
</class>

<class classid="212" nclones="2" nlines="46" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00483_2P.java" startline="1" endline="56" pcid="39226">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int M = sc.nextInt();
        int N = sc.nextInt();
        int K = sc.nextInt();

        char[][] grid = new char[M][N];
        for (int i = 0; i < M; i++) {
            String line = sc.next();
            for (int j = 0; j < N; j++) {
                grid[i][j] = line.charAt(j);
            }
        }

        int[][][] prefix = new int[3][M + 1][N + 1];

        for (int i = 1; i <= M; i++) {
            for (int j = 1; j <= N; j++) {
                char terrain = grid[i - 1][j - 1];

                for (int t = 0; t < 3; t++) {
                    prefix[t][i][j] = prefix[t][i - 1][j] + prefix[t][i][j - 1] - prefix[t][i - 1][j - 1];
                }

                if (terrain == 'J') {
                    prefix[0][i][j]++;
                } else if (terrain == 'O') {
                    prefix[1][i][j]++;
                } else if (terrain == 'I') {
                    prefix[2][i][j]++;
                }
            }
        }

        for (int q = 0; q < K; q++) {
            int a = sc.nextInt();
            int b = sc.nextInt();
            int c = sc.nextInt();
            int d = sc.nextInt();

            int[] counts = new int[3];
            for (int t = 0; t < 3; t++) {
                counts[t] = prefix[t][c][d] - prefix[t][a - 1][d] - prefix[t][c][b - 1] + prefix[t][a - 1][b - 1];
            }

            System.out.println(counts[0] + " " + counts[1] + " " + counts[2]);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00483_4P.java" startline="1" endline="56" pcid="65215">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int M = sc.nextInt();
        int N = sc.nextInt();
        int K = sc.nextInt();

        char[][] grid = new char[M][N];
        for (int i = 0; i < M; i++) {
            String line = sc.next();
            for (int j = 0; j < N; j++) {
                grid[i][j] = line.charAt(j);
            }
        }

        int[][][] prefix = new int[3][M + 1][N + 1];

        for (int i = 1; i <= M; i++) {
            for (int j = 1; j <= N; j++) {
                char terrain = grid[i - 1][j - 1];

                for (int t = 0; t < 3; t++) {
                    prefix[t][i][j] = prefix[t][i - 1][j] + prefix[t][i][j - 1] - prefix[t][i - 1][j - 1];
                }

                if (terrain == 'J') {
                    prefix[0][i][j]++;
                } else if (terrain == 'O') {
                    prefix[1][i][j]++;
                } else if (terrain == 'I') {
                    prefix[2][i][j]++;
                }
            }
        }

        for (int q = 0; q < K; q++) {
            int a = sc.nextInt();
            int b = sc.nextInt();
            int c = sc.nextInt();
            int d = sc.nextInt();

            int[] counts = new int[3];
            for (int t = 0; t < 3; t++) {
                counts[t] = prefix[t][c][d] - prefix[t][a - 1][d] - prefix[t][c][b - 1] + prefix[t][a - 1][b - 1];
            }

            System.out.println(counts[0] + " " + counts[1] + " " + counts[2]);
        }

        sc.close();
    }
}

</source>
</class>

<class classid="213" nclones="5" nlines="16" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00488_1P.java" startline="1" endline="24" pcid="39227">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int pasta1 = sc.nextInt();
        int pasta2 = sc.nextInt();
        int pasta3 = sc.nextInt();
        int juice1 = sc.nextInt();
        int juice2 = sc.nextInt();

        int minPasta = Math.min(pasta1, Math.min(pasta2, pasta3));

        int minJuice = Math.min(juice1, juice2);

        int minPrice = minPasta + minJuice - 50;

        System.out.println(minPrice);

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00488_0P.java" startline="1" endline="25" pcid="65216">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int pasta1 = sc.nextInt();
        int pasta2 = sc.nextInt();
        int pasta3 = sc.nextInt();

        int juice1 = sc.nextInt();
        int juice2 = sc.nextInt();

        int minPasta = Math.min(pasta1, Math.min(pasta2, pasta3));

        int minJuice = Math.min(juice1, juice2);

        int minPrice = minPasta + minJuice - 50;

        System.out.println(minPrice);

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p00488_2P.java" startline="1" endline="25" pcid="39228">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int pasta1 = sc.nextInt();
        int pasta2 = sc.nextInt();
        int pasta3 = sc.nextInt();

        int juice1 = sc.nextInt();
        int juice2 = sc.nextInt();

        int minPasta = Math.min(pasta1, Math.min(pasta2, pasta3));

        int minJuice = Math.min(juice1, juice2);

        int minPrice = minPasta + minJuice - 50;

        System.out.println(minPrice);

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p00488_3P.java" startline="1" endline="25" pcid="39231">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int pasta1 = sc.nextInt();
        int pasta2 = sc.nextInt();
        int pasta3 = sc.nextInt();

        int juice1 = sc.nextInt();
        int juice2 = sc.nextInt();

        int minPasta = Math.min(pasta1, Math.min(pasta2, pasta3));

        int minJuice = Math.min(juice1, juice2);

        int minPrice = minPasta + minJuice - 50;

        System.out.println(minPrice);

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p00488_4P.java" startline="1" endline="25" pcid="39229">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int pasta1 = sc.nextInt();
        int pasta2 = sc.nextInt();
        int pasta3 = sc.nextInt();

        int juice1 = sc.nextInt();
        int juice2 = sc.nextInt();

        int minPasta = Math.min(pasta1, Math.min(pasta2, pasta3));

        int minJuice = Math.min(juice1, juice2);

        int minPrice = minPasta + minJuice - 50;

        System.out.println(minPrice);

        sc.close();
    }
}

</source>
</class>

<class classid="214" nclones="2" nlines="34" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00500_1P.java" startline="1" endline="41" pcid="39257">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        int[][] players = new int[n][3];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < 3; j++) {
                players[i][j] = sc.nextInt();
            }
        }

        for (int game = 0; game < 3; game++) {
            Map<Integer, Integer> count = new HashMap<>();

            for (int i = 0; i < n; i++) {
                int num = players[i][game];
                count.put(num, count.getOrDefault(num, 0) + 1);
            }

            for (int i = 0; i < n; i++) {
                int num = players[i][game];
                if (count.get(num) == 1) {
                    players[i][game] = num;
                } else {
                    players[i][game] = 0;
                }
            }
        }

        for (int i = 0; i < n; i++) {
            int total = players[i][0] + players[i][1] + players[i][2];
            System.out.println(total);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00500_2P.java" startline="1" endline="41" pcid="65217">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        int[][] players = new int[n][3];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < 3; j++) {
                players[i][j] = sc.nextInt();
            }
        }

        for (int game = 0; game < 3; game++) {
            Map<Integer, Integer> count = new HashMap<>();

            for (int i = 0; i < n; i++) {
                int num = players[i][game];
                count.put(num, count.getOrDefault(num, 0) + 1);
            }

            for (int i = 0; i < n; i++) {
                int num = players[i][game];
                if (count.get(num) == 1) {
                    players[i][game] = num;
                } else {
                    players[i][game] = 0;
                }
            }
        }

        for (int i = 0; i < n; i++) {
            int total = players[i][0] + players[i][1] + players[i][2];
            System.out.println(total);
        }

        sc.close();
    }
}

</source>
</class>

<class classid="215" nclones="4" nlines="22" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00553_2P.java" startline="1" endline="27" pcid="39323">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();
        int D = sc.nextInt();
        int E = sc.nextInt();

        int totalTime = 0;

        if (A < 0) {
            totalTime += C * (0 - A);
            totalTime += D;
            totalTime += E * B;
        } else {
            totalTime += E * (B - A);
        }

        System.out.println(totalTime);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00553_0P.java" startline="1" endline="26" pcid="65232">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();
        int D = sc.nextInt();
        int E = sc.nextInt();

        int totalTime = 0;

        if (A < 0) {
            totalTime += C * (0 - A);
            totalTime += D;
            totalTime += E * B;
        } else {
            totalTime += E * (B - A);
        }

        System.out.println(totalTime);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p00553_3P.java" startline="1" endline="27" pcid="39324">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();
        int D = sc.nextInt();
        int E = sc.nextInt();

        int totalTime = 0;

        if (A < 0) {
            totalTime += C * (0 - A);
            totalTime += D;
            totalTime += E * B;
        } else {
            totalTime += E * (B - A);
        }

        System.out.println(totalTime);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p00553_1P.java" startline="1" endline="27" pcid="39326">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();
        int D = sc.nextInt();
        int E = sc.nextInt();

        int totalTime = 0;

        if (A < 0) {
            totalTime += C * (0 - A);
            totalTime += D;
            totalTime += E * B;
        } else {
            totalTime += E * (B - A);
        }

        System.out.println(totalTime);
        sc.close();
    }
}

</source>
</class>

<class classid="216" nclones="3" nlines="25" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00604_1P.java" startline="1" endline="33" pcid="39375">
import java.util.*;
import java.io.*;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String line;

        while ((line = br.readLine()) != null) {
            int n = Integer.parseInt(line.trim());
            if (n == 0) continue;

            int[] times = new int[n];
            String[] parts = br.readLine().trim().split("\\s+");
            for (int i = 0; i < n; i++) {
                times[i] = Integer.parseInt(parts[i]);
            }

            Arrays.sort(times);

            long penalty = 0;
            long currentTime = 0;

            for (int i = 0; i < n; i++) {
                currentTime += times[i];
                penalty += currentTime;
            }

            System.out.println(penalty);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00604_0P.java" startline="1" endline="33" pcid="65235">
import java.util.*;
import java.io.*;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String line;

        while ((line = br.readLine()) != null) {
            int n = Integer.parseInt(line.trim());
            if (n == 0) continue;

            int[] times = new int[n];
            String[] parts = br.readLine().trim().split("\\s+");
            for (int i = 0; i < n; i++) {
                times[i] = Integer.parseInt(parts[i]);
            }

            Arrays.sort(times);

            long penalty = 0;
            long currentTime = 0;

            for (int i = 0; i < n; i++) {
                currentTime += times[i];
                penalty += currentTime;
            }

            System.out.println(penalty);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p00604_4P.java" startline="1" endline="33" pcid="39379">
import java.util.*;
import java.io.*;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String line;

        while ((line = br.readLine()) != null) {
            int n = Integer.parseInt(line.trim());
            if (n == 0) continue;

            int[] times = new int[n];
            String[] parts = br.readLine().trim().split("\\s+");
            for (int i = 0; i < n; i++) {
                times[i] = Integer.parseInt(parts[i]);
            }

            Arrays.sort(times);

            long penalty = 0;
            long currentTime = 0;

            for (int i = 0; i < n; i++) {
                currentTime += times[i];
                penalty += currentTime;
            }

            System.out.println(penalty);
        }
    }
}

</source>
</class>

<class classid="217" nclones="2" nlines="41" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00695_4P.java" startline="1" endline="48" pcid="39448">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int m = sc.nextInt();

        for (int test = 0; test < m; test++) {
            int[][] grid = new int[5][5];
            for (int i = 0; i < 5; i++) {
                for (int j = 0; j < 5; j++) {
                    grid[i][j] = sc.nextInt();
                }
            }

            int maxArea = 0;

            for (int r1 = 0; r1 < 5; r1++) {
                for (int c1 = 0; c1 < 5; c1++) {
                    for (int r2 = r1; r2 < 5; r2++) {
                        for (int c2 = c1; c2 < 5; c2++) {
                            boolean valid = true;
                            int area = 0;

                            for (int i = r1; i <= r2 && valid; i++) {
                                for (int j = c1; j <= c2 && valid; j++) {
                                    if (grid[i][j] == 0) {
                                        valid = false;
                                    } else {
                                        area++;
                                    }
                                }
                            }

                            if (valid) {
                                maxArea = Math.max(maxArea, area);
                            }
                        }
                    }
                }
            }

            System.out.println(maxArea);
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00695_1P.java" startline="1" endline="48" pcid="65242">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int m = sc.nextInt();

        for (int test = 0; test < m; test++) {
            int[][] grid = new int[5][5];
            for (int i = 0; i < 5; i++) {
                for (int j = 0; j < 5; j++) {
                    grid[i][j] = sc.nextInt();
                }
            }

            int maxArea = 0;

            for (int r1 = 0; r1 < 5; r1++) {
                for (int c1 = 0; c1 < 5; c1++) {
                    for (int r2 = r1; r2 < 5; r2++) {
                        for (int c2 = c1; c2 < 5; c2++) {
                            boolean valid = true;
                            int area = 0;

                            for (int i = r1; i <= r2 && valid; i++) {
                                for (int j = c1; j <= c2 && valid; j++) {
                                    if (grid[i][j] == 0) {
                                        valid = false;
                                    } else {
                                        area++;
                                    }
                                }
                            }

                            if (valid) {
                                maxArea = Math.max(maxArea, area);
                            }
                        }
                    }
                }
            }

            System.out.println(maxArea);
        }
        sc.close();
    }
}

</source>
</class>

<class classid="218" nclones="2" nlines="26" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00700_4P.java" startline="1" endline="35" pcid="39452">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();

        for (int cave = 0; cave < N; cave++) {
            int x = 0, y = 0;
            int maxDist = 0;
            int treasureX = 0, treasureY = 0;

            while (true) {
                int dx = sc.nextInt();
                int dy = sc.nextInt();

                if (dx == 0 && dy == 0) break;

                x += dx;
                y += dy;

                int distSq = x * x + y * y;

                if (distSq > maxDist || (distSq == maxDist && x > treasureX)) {
                    maxDist = distSq;
                    treasureX = x;
                    treasureY = y;
                }
            }

            System.out.println(treasureX + " " + treasureY);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00700_1P.java" startline="1" endline="35" pcid="65244">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();

        for (int cave = 0; cave < N; cave++) {
            int x = 0, y = 0;
            int maxDist = 0;
            int treasureX = 0, treasureY = 0;

            while (true) {
                int dx = sc.nextInt();
                int dy = sc.nextInt();

                if (dx == 0 && dy == 0) break;

                x += dx;
                y += dy;

                int distSq = x * x + y * y;

                if (distSq > maxDist || (distSq == maxDist && x > treasureX)) {
                    maxDist = distSq;
                    treasureX = x;
                    treasureY = y;
                }
            }

            System.out.println(treasureX + " " + treasureY);
        }
    }
}

</source>
</class>

<class classid="219" nclones="2" nlines="55" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00707_4P.java" startline="1" endline="71" pcid="39465">
import java.util.*;

public class Main {
    static int W, H;
    static char[][] matrix;
    static String maxNumber = "0";

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            W = sc.nextInt();
            H = sc.nextInt();
            if (W == 0 && H == 0) break;

            matrix = new char[H][W];
            for (int i = 0; i < H; i++) {
                String line = sc.next();
                for (int j = 0; j < W; j++) {
                    matrix[i][j] = line.charAt(j);
                }
            }

            maxNumber = "0";

            for (int i = 0; i < H; i++) {
                for (int j = 0; j < W; j++) {
                    if (Character.isDigit(matrix[i][j])) {
                        dfs(i, j, "");
                    }
                }
            }

            System.out.println(maxNumber);
        }
    }

    static void dfs(int row, int col, String current) {
        if (row < 0 || row >= H || col < 0 || col >= W) return;
        if (!Character.isDigit(matrix[row][col])) return;

        current += matrix[row][col];

        if (isLarger(current, maxNumber)) {
            maxNumber = current;
        }

        dfs(row, col + 1, current);

        dfs(row + 1, col, current);
    }

    static boolean isLarger(String a, String b) {
        a = removeLeadingZeros(a);
        b = removeLeadingZeros(b);

        if (a.length() != b.length()) {
            return a.length() > b.length();
        }
        return a.compareTo(b) > 0;
    }

    static String removeLeadingZeros(String s) {
        int i = 0;
        while (i < s.length() - 1 && s.charAt(i) == '0') {
            i++;
        }
        return s.substring(i);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00707_2P.java" startline="1" endline="73" pcid="65246">
import java.util.*;

public class Main {
    static int W, H;
    static char[][] matrix;
    static String maxNumber = "0";

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            W = sc.nextInt();
            H = sc.nextInt();

            if (W == 0 && H == 0) break;

            matrix = new char[H][W];
            for (int i = 0; i < H; i++) {
                String line = sc.next();
                for (int j = 0; j < W; j++) {
                    matrix[i][j] = line.charAt(j);
                }
            }

            maxNumber = "0";

            for (int i = 0; i < H; i++) {
                for (int j = 0; j < W; j++) {
                    if (Character.isDigit(matrix[i][j])) {
                        dfs(i, j, "");
                    }
                }
            }

            System.out.println(maxNumber);
        }
    }

    static void dfs(int row, int col, String current) {
        if (row < 0 || row >= H || col < 0 || col >= W) return;
        if (!Character.isDigit(matrix[row][col])) return;

        current += matrix[row][col];

        if (isLarger(current, maxNumber)) {
            maxNumber = current;
        }

        dfs(row, col + 1, current);

        dfs(row + 1, col, current);
    }

    static boolean isLarger(String a, String b) {
        a = removeLeadingZeros(a);
        b = removeLeadingZeros(b);

        if (a.length() != b.length()) {
            return a.length() > b.length();
        }

        return a.compareTo(b) > 0;
    }

    static String removeLeadingZeros(String s) {
        int i = 0;
        while (i < s.length() - 1 && s.charAt(i) == '0') {
            i++;
        }
        return s.substring(i);
    }
}

</source>
</class>

<class classid="220" nclones="2" nlines="31" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00723_4P.java" startline="1" endline="39" pcid="39517">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int m = sc.nextInt();
        sc.nextLine();

        for (int i = 0; i < m; i++) {
            String train = sc.nextLine();
            System.out.println(countConfigurations(train));
        }
    }

    static int countConfigurations(String train) {
        Set<String> configurations = new HashSet<>();
        int n = train.length();

        for (int split = 1; split < n; split++) {
            String left = train.substring(0, split);
            String right = train.substring(split);

            String leftReversed = new StringBuilder(left).reverse().toString();
            String rightReversed = new StringBuilder(right).reverse().toString();

            configurations.add(left + right);
            configurations.add(left + rightReversed);
            configurations.add(leftReversed + right);
            configurations.add(leftReversed + rightReversed);
            configurations.add(right + left);
            configurations.add(right + leftReversed);
            configurations.add(rightReversed + left);
            configurations.add(rightReversed + leftReversed);
        }

        return configurations.size();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00723_0P.java" startline="1" endline="40" pcid="65252">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int m = sc.nextInt();
        sc.nextLine();

        for (int i = 0; i < m; i++) {
            String train = sc.nextLine();
            System.out.println(countConfigurations(train));
        }
    }

    static int countConfigurations(String train) {
        Set<String> configurations = new HashSet<>();
        int n = train.length();

        for (int split = 1; split < n; split++) {
            String left = train.substring(0, split);
            String right = train.substring(split);

            String leftReversed = new StringBuilder(left).reverse().toString();
            String rightReversed = new StringBuilder(right).reverse().toString();

            configurations.add(left + right);
            configurations.add(left + rightReversed);
            configurations.add(leftReversed + right);
            configurations.add(leftReversed + rightReversed);

            configurations.add(right + left);
            configurations.add(right + leftReversed);
            configurations.add(rightReversed + left);
            configurations.add(rightReversed + leftReversed);
        }

        return configurations.size();
    }
}

</source>
</class>

<class classid="221" nclones="4" nlines="22" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00728_2P.java" startline="1" endline="30" pcid="39524">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int n = sc.nextInt();
            if (n == 0) break;

            int[] scores = new int[n];
            for (int i = 0; i < n; i++) {
                scores[i] = sc.nextInt();
            }

            Arrays.sort(scores);

            int sum = 0;
            for (int i = 1; i < n - 1; i++) {
                sum += scores[i];
            }

            int result = sum / (n - 2);
            System.out.println(result);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00728_0P.java" startline="1" endline="30" pcid="65255">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int n = sc.nextInt();
            if (n == 0) break;

            int[] scores = new int[n];
            for (int i = 0; i < n; i++) {
                scores[i] = sc.nextInt();
            }

            Arrays.sort(scores);

            int sum = 0;
            for (int i = 1; i < n - 1; i++) {
                sum += scores[i];
            }

            int result = sum / (n - 2);
            System.out.println(result);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p00728_4P.java" startline="1" endline="30" pcid="39527">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int n = sc.nextInt();
            if (n == 0) break;

            int[] scores = new int[n];
            for (int i = 0; i < n; i++) {
                scores[i] = sc.nextInt();
            }

            Arrays.sort(scores);

            int sum = 0;
            for (int i = 1; i < n - 1; i++) {
                sum += scores[i];
            }

            int result = sum / (n - 2);
            System.out.println(result);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p00728_3P.java" startline="1" endline="30" pcid="39525">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int n = sc.nextInt();
            if (n == 0) break;

            int[] scores = new int[n];
            for (int i = 0; i < n; i++) {
                scores[i] = sc.nextInt();
            }

            Arrays.sort(scores);

            int sum = 0;
            for (int i = 1; i < n - 1; i++) {
                sum += scores[i];
            }

            int result = sum / (n - 2);
            System.out.println(result);
        }

        sc.close();
    }
}

</source>
</class>

<class classid="222" nclones="2" nlines="46" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00734_4P.java" startline="1" endline="57" pcid="39538">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int n = sc.nextInt();
            int m = sc.nextInt();

            if (n == 0 && m == 0) break;

            int[] taro = new int[n];
            int[] hanako = new int[m];

            int taroSum = 0;
            for (int i = 0; i < n; i++) {
                taro[i] = sc.nextInt();
                taroSum += taro[i];
            }

            int hanakoSum = 0;
            for (int i = 0; i < m; i++) {
                hanako[i] = sc.nextInt();
                hanakoSum += hanako[i];
            }

            int bestTaro = -1, bestHanako = -1;
            int minSum = Integer.MAX_VALUE;

            for (int i = 0; i < n; i++) {
                for (int j = 0; j < m; j++) {
                    int newTaroSum = taroSum - taro[i] + hanako[j];
                    int newHanakoSum = hanakoSum - hanako[j] + taro[i];

                    if (newTaroSum == newHanakoSum) {
                        int currentSum = taro[i] + hanako[j];
                        if (currentSum < minSum) {
                            minSum = currentSum;
                            bestTaro = taro[i];
                            bestHanako = hanako[j];
                        }
                    }
                }
            }

            if (bestTaro == -1) {
                System.out.println(-1);
            } else {
                System.out.println(bestTaro + " " + bestHanako);
            }
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00734_2P.java" startline="1" endline="57" pcid="65262">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int n = sc.nextInt();
            int m = sc.nextInt();

            if (n == 0 && m == 0) break;

            int[] taro = new int[n];
            int[] hanako = new int[m];

            int taroSum = 0;
            for (int i = 0; i < n; i++) {
                taro[i] = sc.nextInt();
                taroSum += taro[i];
            }

            int hanakoSum = 0;
            for (int i = 0; i < m; i++) {
                hanako[i] = sc.nextInt();
                hanakoSum += hanako[i];
            }

            int bestTaro = -1, bestHanako = -1;
            int minSum = Integer.MAX_VALUE;

            for (int i = 0; i < n; i++) {
                for (int j = 0; j < m; j++) {
                    int newTaroSum = taroSum - taro[i] + hanako[j];
                    int newHanakoSum = hanakoSum - hanako[j] + taro[i];

                    if (newTaroSum == newHanakoSum) {
                        int currentSum = taro[i] + hanako[j];
                        if (currentSum < minSum) {
                            minSum = currentSum;
                            bestTaro = taro[i];
                            bestHanako = hanako[j];
                        }
                    }
                }
            }

            if (bestTaro == -1) {
                System.out.println(-1);
            } else {
                System.out.println(bestTaro + " " + bestHanako);
            }
        }

        sc.close();
    }
}

</source>
</class>

<class classid="223" nclones="3" nlines="31" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00780_2P.java" startline="1" endline="39" pcid="39658">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int maxN = 32768;
        boolean[] isPrime = new boolean[maxN + 1];
        Arrays.fill(isPrime, true);
        isPrime[0] = isPrime[1] = false;

        for (int i = 2; i * i <= maxN; i++) {
            if (isPrime[i]) {
                for (int j = i * i; j <= maxN; j += i) {
                    isPrime[j] = false;
                }
            }
        }

        int n;
        while ((n = sc.nextInt()) != 0) {
            int count = 0;

            for (int p1 = 2; p1 <= n / 2; p1++) {
                if (isPrime[p1]) {
                    int p2 = n - p1;
                    if (isPrime[p2]) {
                        count++;
                    }
                }
            }

            System.out.println(count);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00780_1P.java" startline="1" endline="39" pcid="65273">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int maxN = 32768;
        boolean[] isPrime = new boolean[maxN + 1];
        Arrays.fill(isPrime, true);
        isPrime[0] = isPrime[1] = false;

        for (int i = 2; i * i <= maxN; i++) {
            if (isPrime[i]) {
                for (int j = i * i; j <= maxN; j += i) {
                    isPrime[j] = false;
                }
            }
        }

        int n;
        while ((n = sc.nextInt()) != 0) {
            int count = 0;

            for (int p1 = 2; p1 <= n / 2; p1++) {
                if (isPrime[p1]) {
                    int p2 = n - p1;
                    if (isPrime[p2]) {
                        count++;
                    }
                }
            }

            System.out.println(count);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p00780_3P.java" startline="1" endline="39" pcid="39659">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int maxN = 32768;
        boolean[] isPrime = new boolean[maxN + 1];
        Arrays.fill(isPrime, true);
        isPrime[0] = isPrime[1] = false;

        for (int i = 2; i * i <= maxN; i++) {
            if (isPrime[i]) {
                for (int j = i * i; j <= maxN; j += i) {
                    isPrime[j] = false;
                }
            }
        }

        int n;
        while ((n = sc.nextInt()) != 0) {
            int count = 0;

            for (int p1 = 2; p1 <= n / 2; p1++) {
                if (isPrime[p1]) {
                    int p2 = n - p1;
                    if (isPrime[p2]) {
                        count++;
                    }
                }
            }

            System.out.println(count);
        }

        sc.close();
    }
}

</source>
</class>

<class classid="224" nclones="2" nlines="28" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p00780_4P.java" startline="1" endline="36" pcid="39660">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int maxN = 32768;
        boolean[] isPrime = new boolean[maxN];
        Arrays.fill(isPrime, true);
        isPrime[0] = isPrime[1] = false;

        for (int i = 2; i * i < maxN; i++) {
            if (isPrime[i]) {
                for (int j = i * i; j < maxN; j += i) {
                    isPrime[j] = false;
                }
            }
        }

        int n;
        while ((n = sc.nextInt()) != 0) {
            int count = 0;

            for (int p1 = 2; p1 <= n / 2; p1++) {
                if (isPrime[p1] && isPrime[n - p1]) {
                    count++;
                }
            }

            System.out.println(count);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p00780_0P.java" startline="1" endline="34" pcid="65272">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int maxN = 32768;
        boolean[] isPrime = new boolean[maxN];
        Arrays.fill(isPrime, true);
        isPrime[0] = isPrime[1] = false;

        for (int i = 2; i * i < maxN; i++) {
            if (isPrime[i]) {
                for (int j = i * i; j < maxN; j += i) {
                    isPrime[j] = false;
                }
            }
        }

        int n;
        while ((n = sc.nextInt()) != 0) {
            int count = 0;
            for (int p1 = 2; p1 <= n / 2; p1++) {
                if (isPrime[p1] && isPrime[n - p1]) {
                    count++;
                }
            }
            System.out.println(count);
        }

        sc.close();
    }
}

</source>
</class>

<class classid="225" nclones="3" nlines="27" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p01223_0P.java" startline="1" endline="34" pcid="39864">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();

        for (int i = 0; i < t; i++) {
            int n = sc.nextInt();
            int[] heights = new int[n];

            for (int j = 0; j < n; j++) {
                heights[j] = sc.nextInt();
            }

            int maxUp = 0;
            int maxDown = 0;

            for (int j = 1; j < n; j++) {
                int diff = heights[j] - heights[j-1];
                if (diff > 0) {
                    maxUp = Math.max(maxUp, diff);
                } else if (diff < 0) {
                    maxDown = Math.max(maxDown, -diff);
                }
            }

            System.out.println(maxUp + " " + maxDown);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p01223_1P.java" startline="1" endline="34" pcid="65299">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();

        for (int i = 0; i < t; i++) {
            int n = sc.nextInt();
            int[] heights = new int[n];

            for (int j = 0; j < n; j++) {
                heights[j] = sc.nextInt();
            }

            int maxUp = 0;
            int maxDown = 0;

            for (int j = 1; j < n; j++) {
                int diff = heights[j] - heights[j-1];
                if (diff > 0) {
                    maxUp = Math.max(maxUp, diff);
                } else if (diff < 0) {
                    maxDown = Math.max(maxDown, -diff);
                }
            }

            System.out.println(maxUp + " " + maxDown);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p01223_4P.java" startline="1" endline="34" pcid="65300">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();

        for (int i = 0; i < t; i++) {
            int n = sc.nextInt();
            int[] heights = new int[n];

            for (int j = 0; j < n; j++) {
                heights[j] = sc.nextInt();
            }

            int maxUp = 0;
            int maxDown = 0;

            for (int j = 1; j < n; j++) {
                int diff = heights[j] - heights[j-1];
                if (diff > 0) {
                    maxUp = Math.max(maxUp, diff);
                } else if (diff < 0) {
                    maxDown = Math.max(maxDown, -diff);
                }
            }

            System.out.println(maxUp + " " + maxDown);
        }

        sc.close();
    }
}

</source>
</class>

<class classid="226" nclones="3" nlines="24" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p01303_3P.java" startline="1" endline="32" pcid="39915">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int datasets = sc.nextInt();

        for (int d = 0; d < datasets; d++) {
            int X = sc.nextInt();
            int Y = sc.nextInt();
            int W = sc.nextInt();
            int H = sc.nextInt();

            int N = sc.nextInt();
            int count = 0;

            for (int i = 0; i < N; i++) {
                int x = sc.nextInt();
                int y = sc.nextInt();

                if (x >= X && x <= X + W && y >= Y && y <= Y + H) {
                    count++;
                }
            }

            System.out.println(count);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p01303_2P.java" startline="1" endline="32" pcid="65306">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int datasets = sc.nextInt();

        for (int d = 0; d < datasets; d++) {
            int X = sc.nextInt();
            int Y = sc.nextInt();
            int W = sc.nextInt();
            int H = sc.nextInt();

            int N = sc.nextInt();
            int count = 0;

            for (int i = 0; i < N; i++) {
                int x = sc.nextInt();
                int y = sc.nextInt();

                if (x >= X && x <= X + W && y >= Y && y <= Y + H) {
                    count++;
                }
            }

            System.out.println(count);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p01303_0P.java" startline="1" endline="32" pcid="39917">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int datasets = sc.nextInt();

        for (int d = 0; d < datasets; d++) {
            int X = sc.nextInt();
            int Y = sc.nextInt();
            int W = sc.nextInt();
            int H = sc.nextInt();

            int N = sc.nextInt();
            int count = 0;

            for (int i = 0; i < N; i++) {
                int x = sc.nextInt();
                int y = sc.nextInt();

                if (x >= X && x <= X + W && y >= Y && y <= Y + H) {
                    count++;
                }
            }

            System.out.println(count);
        }

        sc.close();
    }
}

</source>
</class>

<class classid="227" nclones="2" nlines="24" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p01303_4P.java" startline="1" endline="31" pcid="39920">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int datasets = sc.nextInt();

        while (datasets-- > 0) {
            int X = sc.nextInt();
            int Y = sc.nextInt();
            int W = sc.nextInt();
            int H = sc.nextInt();
            int N = sc.nextInt();

            int count = 0;
            for (int i = 0; i < N; i++) {
                int x = sc.nextInt();
                int y = sc.nextInt();

                if (x >= X && x <= X + W && y >= Y && y <= Y + H) {
                    count++;
                }
            }

            System.out.println(count);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p01303_1P.java" startline="1" endline="31" pcid="65305">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int datasets = sc.nextInt();

        while (datasets-- > 0) {
            int X = sc.nextInt();
            int Y = sc.nextInt();
            int W = sc.nextInt();
            int H = sc.nextInt();
            int N = sc.nextInt();

            int count = 0;
            for (int i = 0; i < N; i++) {
                int x = sc.nextInt();
                int y = sc.nextInt();

                if (x >= X && x <= X + W && y >= Y && y <= Y + H) {
                    count++;
                }
            }

            System.out.println(count);
        }

        sc.close();
    }
}

</source>
</class>

<class classid="228" nclones="2" nlines="46" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p01513_0P.java" startline="1" endline="55" pcid="40032">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int N = sc.nextInt();
            if (N == 0) break;

            List<Set<Integer>> knows = new ArrayList<>();
            for (int i = 0; i <= N; i++) {
                knows.add(new HashSet<>());
            }

            for (int i = 1; i <= N; i++) {
                int M = sc.nextInt();
                for (int j = 0; j < M; j++) {
                    int person = sc.nextInt();
                    knows.get(i).add(person);
                }
            }

            int K = sc.nextInt();
            Set<Integer> leaked = new HashSet<>();
            for (int i = 0; i < K; i++) {
                leaked.add(sc.nextInt());
            }

            List<Integer> suspects = new ArrayList<>();

            for (int i = 1; i <= N; i++) {
                boolean canLeak = true;
                for (int leakedPerson : leaked) {
                    if (!knows.get(i).contains(leakedPerson)) {
                        canLeak = false;
                        break;
                    }
                }
                if (canLeak) {
                    suspects.add(i);
                }
            }

            if (suspects.size() == 1) {
                System.out.println(suspects.get(0));
            } else {
                System.out.println(-1);
            }
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p01513_2P.java" startline="1" endline="55" pcid="65313">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int N = sc.nextInt();
            if (N == 0) break;

            List<Set<Integer>> knows = new ArrayList<>();
            for (int i = 0; i <= N; i++) {
                knows.add(new HashSet<>());
            }

            for (int i = 1; i <= N; i++) {
                int M = sc.nextInt();
                for (int j = 0; j < M; j++) {
                    int person = sc.nextInt();
                    knows.get(i).add(person);
                }
            }

            int K = sc.nextInt();
            Set<Integer> leaked = new HashSet<>();
            for (int i = 0; i < K; i++) {
                leaked.add(sc.nextInt());
            }

            List<Integer> suspects = new ArrayList<>();

            for (int i = 1; i <= N; i++) {
                boolean canLeak = true;
                for (int leakedPerson : leaked) {
                    if (!knows.get(i).contains(leakedPerson)) {
                        canLeak = false;
                        break;
                    }
                }
                if (canLeak) {
                    suspects.add(i);
                }
            }

            if (suspects.size() == 1) {
                System.out.println(suspects.get(0));
            } else {
                System.out.println(-1);
            }
        }

        sc.close();
    }
}

</source>
</class>

<class classid="229" nclones="4" nlines="28" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p01540_4P.java" startline="1" endline="36" pcid="40061">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        int m = sc.nextInt();

        int[] treasureX = new int[n];
        int[] treasureY = new int[n];
        for (int i = 0; i < n; i++) {
            treasureX[i] = sc.nextInt();
            treasureY[i] = sc.nextInt();
        }

        for (int i = 0; i < m; i++) {
            int x1 = sc.nextInt();
            int y1 = sc.nextInt();
            int x2 = sc.nextInt();
            int y2 = sc.nextInt();

            int count = 0;
            for (int j = 0; j < n; j++) {
                if (treasureX[j] >= x1 && treasureX[j] <= x2 &&
                    treasureY[j] >= y1 && treasureY[j] <= y2) {
                    count++;
                }
            }
            System.out.println(count);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p01540_3P.java" startline="1" endline="36" pcid="65316">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        int m = sc.nextInt();

        int[] treasureX = new int[n];
        int[] treasureY = new int[n];
        for (int i = 0; i < n; i++) {
            treasureX[i] = sc.nextInt();
            treasureY[i] = sc.nextInt();
        }

        for (int i = 0; i < m; i++) {
            int x1 = sc.nextInt();
            int y1 = sc.nextInt();
            int x2 = sc.nextInt();
            int y2 = sc.nextInt();

            int count = 0;
            for (int j = 0; j < n; j++) {
                if (treasureX[j] >= x1 && treasureX[j] <= x2 &&
                    treasureY[j] >= y1 && treasureY[j] <= y2) {
                    count++;
                }
            }
            System.out.println(count);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p01540_1P.java" startline="1" endline="39" pcid="60664">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        int m = sc.nextInt();

        int[] treasureX = new int[n];
        int[] treasureY = new int[n];

        for (int i = 0; i < n; i++) {
            treasureX[i] = sc.nextInt();
            treasureY[i] = sc.nextInt();
        }

        for (int i = 0; i < m; i++) {
            int x1 = sc.nextInt();
            int y1 = sc.nextInt();
            int x2 = sc.nextInt();
            int y2 = sc.nextInt();

            int count = 0;

            for (int j = 0; j < n; j++) {
                if (treasureX[j] >= x1 && treasureX[j] <= x2 &&
                    treasureY[j] >= y1 && treasureY[j] <= y2) {
                    count++;
                }
            }

            System.out.println(count);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p01540_2P.java" startline="1" endline="38" pcid="40064">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        int m = sc.nextInt();

        int[] treasureX = new int[n];
        int[] treasureY = new int[n];

        for (int i = 0; i < n; i++) {
            treasureX[i] = sc.nextInt();
            treasureY[i] = sc.nextInt();
        }

        for (int i = 0; i < m; i++) {
            int x1 = sc.nextInt();
            int y1 = sc.nextInt();
            int x2 = sc.nextInt();
            int y2 = sc.nextInt();

            int count = 0;
            for (int j = 0; j < n; j++) {
                if (treasureX[j] >= x1 && treasureX[j] <= x2 &&
                    treasureY[j] >= y1 && treasureY[j] <= y2) {
                    count++;
                }
            }

            System.out.println(count);
        }

        sc.close();
    }
}

</source>
</class>

<class classid="230" nclones="2" nlines="26" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p01751_0P.java" startline="1" endline="35" pcid="40083">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int c = sc.nextInt();

        int cycle = a + b;

        int lcm = lcm(cycle, 60);

        for (int t = 0; t * 60 <= lcm; t++) {
            int arrivalTime = 60 * t + c;
            int timeInCycle = arrivalTime % cycle;

            if (timeInCycle <= a) {
                System.out.println(arrivalTime);
                return;
            }
        }

        System.out.println(-1);
    }

    static int gcd(int a, int b) {
        return b == 0 ? a : gcd(b, a % b);
    }

    static int lcm(int a, int b) {
        return a / gcd(a, b) * b;
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p01751_3P.java" startline="1" endline="35" pcid="65319">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int c = sc.nextInt();

        int cycle = a + b;

        int lcm = lcm(cycle, 60);

        for (int t = 0; t * 60 <= lcm; t++) {
            int arrivalTime = 60 * t + c;
            int timeInCycle = arrivalTime % cycle;

            if (timeInCycle <= a) {
                System.out.println(arrivalTime);
                return;
            }
        }

        System.out.println(-1);
    }

    static int gcd(int a, int b) {
        return b == 0 ? a : gcd(b, a % b);
    }

    static int lcm(int a, int b) {
        return a / gcd(a, b) * b;
    }
}

</source>
</class>

<class classid="231" nclones="2" nlines="13" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02248_1P.java" startline="1" endline="16" pcid="40174">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String T = sc.nextLine();
        String P = sc.nextLine();

        for (int i = 0; i <= T.length() - P.length(); i++) {
            if (T.substring(i, i + P.length()).equals(P)) {
                System.out.println(i);
            }
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02247_4P.java" startline="1" endline="16" pcid="65327">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String T = sc.nextLine();
        String P = sc.nextLine();

        for (int i = 0; i <= T.length() - P.length(); i++) {
            if (T.substring(i, i + P.length()).equals(P)) {
                System.out.println(i);
            }
        }
    }
}

</source>
</class>

<class classid="232" nclones="6" nlines="21" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02267_0P.java" startline="1" endline="26" pcid="40231">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        Set<Integer> S = new HashSet<>();
        for (int i = 0; i < n; i++) {
            S.add(sc.nextInt());
        }

        int q = sc.nextInt();
        int count = 0;
        for (int i = 0; i < q; i++) {
            int t = sc.nextInt();
            if (S.contains(t)) {
                count++;
            }
        }

        System.out.println(count);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02267_4P.java" startline="1" endline="26" pcid="65334">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        Set<Integer> S = new HashSet<>();
        for (int i = 0; i < n; i++) {
            S.add(sc.nextInt());
        }

        int q = sc.nextInt();
        int count = 0;
        for (int i = 0; i < q; i++) {
            int t = sc.nextInt();
            if (S.contains(t)) {
                count++;
            }
        }

        System.out.println(count);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02267_3P.java" startline="1" endline="26" pcid="40237">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        Set<Integer> S = new HashSet<>();
        for (int i = 0; i < n; i++) {
            S.add(sc.nextInt());
        }

        int q = sc.nextInt();
        int count = 0;
        for (int i = 0; i < q; i++) {
            int t = sc.nextInt();
            if (S.contains(t)) {
                count++;
            }
        }

        System.out.println(count);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02268_2P.java" startline="1" endline="26" pcid="40236">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        Set<Integer> S = new HashSet<>();
        for (int i = 0; i < n; i++) {
            S.add(sc.nextInt());
        }

        int q = sc.nextInt();
        int count = 0;
        for (int i = 0; i < q; i++) {
            int t = sc.nextInt();
            if (S.contains(t)) {
                count++;
            }
        }

        System.out.println(count);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02268_1P.java" startline="1" endline="26" pcid="40235">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        Set<Integer> S = new HashSet<>();
        for (int i = 0; i < n; i++) {
            S.add(sc.nextInt());
        }

        int q = sc.nextInt();
        int count = 0;
        for (int i = 0; i < q; i++) {
            int t = sc.nextInt();
            if (S.contains(t)) {
                count++;
            }
        }

        System.out.println(count);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02267_1P.java" startline="1" endline="26" pcid="40233">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        Set<Integer> S = new HashSet<>();
        for (int i = 0; i < n; i++) {
            S.add(sc.nextInt());
        }

        int q = sc.nextInt();
        int count = 0;
        for (int i = 0; i < q; i++) {
            int t = sc.nextInt();
            if (S.contains(t)) {
                count++;
            }
        }

        System.out.println(count);
        sc.close();
    }
}

</source>
</class>

<class classid="233" nclones="2" nlines="44" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02274_4P.java" startline="1" endline="54" pcid="40268">
import java.util.Scanner;

public class Main {
    private static long inversions = 0;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] arr = new int[n];

        for (int i = 0; i < n; i++) {
            arr[i] = sc.nextInt();
        }

        mergeSort(arr, 0, n - 1);
        System.out.println(inversions);
    }

    private static void mergeSort(int[] arr, int left, int right) {
        if (left < right) {
            int mid = left + (right - left) / 2;
            mergeSort(arr, left, mid);
            mergeSort(arr, mid + 1, right);
            merge(arr, left, mid, right);
        }
    }

    private static void merge(int[] arr, int left, int mid, int right) {
        int[] temp = new int[right - left + 1];
        int i = left, j = mid + 1, k = 0;

        while (i <= mid && j <= right) {
            if (arr[i] <= arr[j]) {
                temp[k++] = arr[i++];
            } else {
                temp[k++] = arr[j++];
                inversions += (mid - i + 1);
            }
        }

        while (i <= mid) {
            temp[k++] = arr[i++];
        }

        while (j <= right) {
            temp[k++] = arr[j++];
        }

        for (i = left; i <= right; i++) {
            arr[i] = temp[i - left];
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02274_0P.java" startline="1" endline="54" pcid="65336">
import java.util.Scanner;

public class Main {
    private static long inversions = 0;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] arr = new int[n];

        for (int i = 0; i < n; i++) {
            arr[i] = sc.nextInt();
        }

        mergeSort(arr, 0, n - 1);
        System.out.println(inversions);
    }

    private static void mergeSort(int[] arr, int left, int right) {
        if (left < right) {
            int mid = left + (right - left) / 2;
            mergeSort(arr, left, mid);
            mergeSort(arr, mid + 1, right);
            merge(arr, left, mid, right);
        }
    }

    private static void merge(int[] arr, int left, int mid, int right) {
        int[] temp = new int[right - left + 1];
        int i = left, j = mid + 1, k = 0;

        while (i <= mid && j <= right) {
            if (arr[i] <= arr[j]) {
                temp[k++] = arr[i++];
            } else {
                temp[k++] = arr[j++];
                inversions += (mid - i + 1);
            }
        }

        while (i <= mid) {
            temp[k++] = arr[i++];
        }

        while (j <= right) {
            temp[k++] = arr[j++];
        }

        for (i = left; i <= right; i++) {
            arr[i] = temp[i - left];
        }
    }
}

</source>
</class>

<class classid="234" nclones="2" nlines="168" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02286_2P.java" startline="1" endline="180" pcid="40324">
import java.util.*;

public class Main {
    static class Node {
        int key, priority;
        Node left, right;

        Node(int key, int priority) {
            this.key = key;
            this.priority = priority;
            this.left = null;
            this.right = null;
        }
    }

    static class Treap {
        Node root;

        Treap() {
            root = null;
        }

        Node rightRotate(Node t) {
            Node s = t.left;
            t.left = s.right;
            s.right = t;
            return s;
        }

        Node leftRotate(Node t) {
            Node s = t.right;
            t.right = s.left;
            s.left = t;
            return s;
        }

        Node insert(Node t, int key, int priority) {
            if (t == null) {
                return new Node(key, priority);
            }
            if (key == t.key) {
                return t;
            }

            if (key < t.key) {
                t.left = insert(t.left, key, priority);
                if (t.priority < t.left.priority) {
                    t = rightRotate(t);
                }
            } else {
                t.right = insert(t.right, key, priority);
                if (t.priority < t.right.priority) {
                    t = leftRotate(t);
                }
            }
            return t;
        }

        Node delete(Node t, int key) {
            if (t == null) {
                return null;
            }
            if (key < t.key) {
                t.left = delete(t.left, key);
            } else if (key > t.key) {
                t.right = delete(t.right, key);
            } else {
                return _delete(t, key);
            }
            return t;
        }

        Node _delete(Node t, int key) {
            if (t.left == null && t.right == null) {
                return null;
            } else if (t.left == null) {
                t = leftRotate(t);
            } else if (t.right == null) {
                t = rightRotate(t);
            } else {
                if (t.left.priority > t.right.priority) {
                    t = rightRotate(t);
                } else {
                    t = leftRotate(t);
                }
            }
            return delete(t, key);
        }

        boolean find(Node t, int key) {
            if (t == null) {
                return false;
            }
            if (key == t.key) {
                return true;
            } else if (key < t.key) {
                return find(t.left, key);
            } else {
                return find(t.right, key);
            }
        }

        void inorder(Node t, List<Integer> result) {
            if (t != null) {
                inorder(t.left, result);
                result.add(t.key);
                inorder(t.right, result);
            }
        }

        void preorder(Node t, List<Integer> result) {
            if (t != null) {
                result.add(t.key);
                preorder(t.left, result);
                preorder(t.right, result);
            }
        }

        void insert(int key, int priority) {
            root = insert(root, key, priority);
        }

        void delete(int key) {
            root = delete(root, key);
        }

        boolean find(int key) {
            return find(root, key);
        }

        void print() {
            List<Integer> inorderResult = new ArrayList<>();
            List<Integer> preorderResult = new ArrayList<>();

            inorder(root, inorderResult);
            preorder(root, preorderResult);

            for (int key : inorderResult) {
                System.out.print(" " + key);
            }
            System.out.println();

            for (int key : preorderResult) {
                System.out.print(" " + key);
            }
            System.out.println();
        }
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int m = sc.nextInt();
        Treap treap = new Treap();

        for (int i = 0; i < m; i++) {
            String operation = sc.next();

            if (operation.equals("insert")) {
                int k = sc.nextInt();
                int p = sc.nextInt();
                treap.insert(k, p);
            } else if (operation.equals("find")) {
                int k = sc.nextInt();
                if (treap.find(k)) {
                    System.out.println("yes");
                } else {
                    System.out.println("no");
                }
            } else if (operation.equals("delete")) {
                int k = sc.nextInt();
                treap.delete(k);
            } else if (operation.equals("print")) {
                treap.print();
            }
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02286_1P.java" startline="1" endline="180" pcid="65339">
import java.util.*;

public class Main {
    static class Node {
        int key, priority;
        Node left, right;

        Node(int key, int priority) {
            this.key = key;
            this.priority = priority;
            this.left = null;
            this.right = null;
        }
    }

    static class Treap {
        Node root;

        Treap() {
            root = null;
        }

        Node rightRotate(Node t) {
            Node s = t.left;
            t.left = s.right;
            s.right = t;
            return s;
        }

        Node leftRotate(Node t) {
            Node s = t.right;
            t.right = s.left;
            s.left = t;
            return s;
        }

        Node insert(Node t, int key, int priority) {
            if (t == null) {
                return new Node(key, priority);
            }
            if (key == t.key) {
                return t;
            }

            if (key < t.key) {
                t.left = insert(t.left, key, priority);
                if (t.priority < t.left.priority) {
                    t = rightRotate(t);
                }
            } else {
                t.right = insert(t.right, key, priority);
                if (t.priority < t.right.priority) {
                    t = leftRotate(t);
                }
            }
            return t;
        }

        Node delete(Node t, int key) {
            if (t == null) {
                return null;
            }
            if (key < t.key) {
                t.left = delete(t.left, key);
            } else if (key > t.key) {
                t.right = delete(t.right, key);
            } else {
                return _delete(t, key);
            }
            return t;
        }

        Node _delete(Node t, int key) {
            if (t.left == null && t.right == null) {
                return null;
            } else if (t.left == null) {
                t = leftRotate(t);
            } else if (t.right == null) {
                t = rightRotate(t);
            } else {
                if (t.left.priority > t.right.priority) {
                    t = rightRotate(t);
                } else {
                    t = leftRotate(t);
                }
            }
            return delete(t, key);
        }

        boolean find(Node t, int key) {
            if (t == null) {
                return false;
            }
            if (key == t.key) {
                return true;
            } else if (key < t.key) {
                return find(t.left, key);
            } else {
                return find(t.right, key);
            }
        }

        void inorder(Node t, List<Integer> result) {
            if (t != null) {
                inorder(t.left, result);
                result.add(t.key);
                inorder(t.right, result);
            }
        }

        void preorder(Node t, List<Integer> result) {
            if (t != null) {
                result.add(t.key);
                preorder(t.left, result);
                preorder(t.right, result);
            }
        }

        void insert(int key, int priority) {
            root = insert(root, key, priority);
        }

        void delete(int key) {
            root = delete(root, key);
        }

        boolean find(int key) {
            return find(root, key);
        }

        void print() {
            List<Integer> inorderResult = new ArrayList<>();
            List<Integer> preorderResult = new ArrayList<>();

            inorder(root, inorderResult);
            preorder(root, preorderResult);

            for (int key : inorderResult) {
                System.out.print(" " + key);
            }
            System.out.println();

            for (int key : preorderResult) {
                System.out.print(" " + key);
            }
            System.out.println();
        }
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int m = sc.nextInt();
        Treap treap = new Treap();

        for (int i = 0; i < m; i++) {
            String operation = sc.next();

            if (operation.equals("insert")) {
                int k = sc.nextInt();
                int p = sc.nextInt();
                treap.insert(k, p);
            } else if (operation.equals("find")) {
                int k = sc.nextInt();
                if (treap.find(k)) {
                    System.out.println("yes");
                } else {
                    System.out.println("no");
                }
            } else if (operation.equals("delete")) {
                int k = sc.nextInt();
                treap.delete(k);
            } else if (operation.equals("print")) {
                treap.print();
            }
        }

        sc.close();
    }
}

</source>
</class>

<class classid="235" nclones="5" nlines="25" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02315_0P.java" startline="1" endline="33" pcid="40363">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int W = sc.nextInt();

        int[] values = new int[N];
        int[] weights = new int[N];

        for (int i = 0; i < N; i++) {
            values[i] = sc.nextInt();
            weights[i] = sc.nextInt();
        }

        int[][] dp = new int[N + 1][W + 1];

        for (int i = 1; i <= N; i++) {
            for (int w = 0; w <= W; w++) {
                dp[i][w] = dp[i-1][w];

                if (w >= weights[i-1]) {
                    dp[i][w] = Math.max(dp[i][w], dp[i-1][w-weights[i-1]] + values[i-1]);
                }
            }
        }

        System.out.println(dp[N][W]);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02315_4P.java" startline="1" endline="34" pcid="65344">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        int W = sc.nextInt();

        int[] values = new int[N];
        int[] weights = new int[N];

        for (int i = 0; i < N; i++) {
            values[i] = sc.nextInt();
            weights[i] = sc.nextInt();
        }

        int[][] dp = new int[N + 1][W + 1];

        for (int i = 1; i <= N; i++) {
            for (int w = 0; w <= W; w++) {
                dp[i][w] = dp[i-1][w];

                if (w >= weights[i-1]) {
                    dp[i][w] = Math.max(dp[i][w], dp[i-1][w-weights[i-1]] + values[i-1]);
                }
            }
        }

        System.out.println(dp[N][W]);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02315_1P.java" startline="1" endline="33" pcid="65343">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int W = sc.nextInt();

        int[] values = new int[N];
        int[] weights = new int[N];

        for (int i = 0; i < N; i++) {
            values[i] = sc.nextInt();
            weights[i] = sc.nextInt();
        }

        int[][] dp = new int[N + 1][W + 1];

        for (int i = 1; i <= N; i++) {
            for (int w = 0; w <= W; w++) {
                dp[i][w] = dp[i-1][w];

                if (w >= weights[i-1]) {
                    dp[i][w] = Math.max(dp[i][w], dp[i-1][w-weights[i-1]] + values[i-1]);
                }
            }
        }

        System.out.println(dp[N][W]);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02315_3P.java" startline="1" endline="33" pcid="40365">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int W = sc.nextInt();

        int[] values = new int[N];
        int[] weights = new int[N];

        for (int i = 0; i < N; i++) {
            values[i] = sc.nextInt();
            weights[i] = sc.nextInt();
        }

        int[][] dp = new int[N + 1][W + 1];

        for (int i = 1; i <= N; i++) {
            for (int w = 0; w <= W; w++) {
                dp[i][w] = dp[i-1][w];

                if (w >= weights[i-1]) {
                    dp[i][w] = Math.max(dp[i][w], dp[i-1][w-weights[i-1]] + values[i-1]);
                }
            }
        }

        System.out.println(dp[N][W]);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02315_2P.java" startline="1" endline="34" pcid="40364">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        int W = sc.nextInt();

        int[] values = new int[N];
        int[] weights = new int[N];

        for (int i = 0; i < N; i++) {
            values[i] = sc.nextInt();
            weights[i] = sc.nextInt();
        }

        int[][] dp = new int[N + 1][W + 1];

        for (int i = 1; i <= N; i++) {
            for (int w = 0; w <= W; w++) {
                dp[i][w] = dp[i-1][w];

                if (w >= weights[i-1]) {
                    dp[i][w] = Math.max(dp[i][w], dp[i-1][w-weights[i-1]] + values[i-1]);
                }
            }
        }

        System.out.println(dp[N][W]);
        sc.close();
    }
}

</source>
</class>

<class classid="236" nclones="4" nlines="26" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02317_0P.java" startline="1" endline="32" pcid="40370">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];

        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }

        List<Integer> lis = new ArrayList<>();

        for (int i = 0; i < n; i++) {
            int pos = Collections.binarySearch(lis, a[i]);
            if (pos < 0) {
                pos = -(pos + 1);
            }

            if (pos == lis.size()) {
                lis.add(a[i]);
            } else {
                lis.set(pos, a[i]);
            }
        }

        System.out.println(lis.size());
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02317_3P.java" startline="1" endline="32" pcid="65345">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];

        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }

        List<Integer> lis = new ArrayList<>();

        for (int i = 0; i < n; i++) {
            int pos = Collections.binarySearch(lis, a[i]);
            if (pos < 0) {
                pos = -(pos + 1);
            }

            if (pos == lis.size()) {
                lis.add(a[i]);
            } else {
                lis.set(pos, a[i]);
            }
        }

        System.out.println(lis.size());
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02317_1P.java" startline="1" endline="32" pcid="40371">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];

        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }

        List<Integer> lis = new ArrayList<>();

        for (int i = 0; i < n; i++) {
            int pos = Collections.binarySearch(lis, a[i]);
            if (pos < 0) {
                pos = -(pos + 1);
            }

            if (pos == lis.size()) {
                lis.add(a[i]);
            } else {
                lis.set(pos, a[i]);
            }
        }

        System.out.println(lis.size());
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02317_4P.java" startline="1" endline="32" pcid="40372">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];

        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }

        List<Integer> lis = new ArrayList<>();

        for (int i = 0; i < n; i++) {
            int pos = Collections.binarySearch(lis, a[i]);
            if (pos < 0) {
                pos = -(pos + 1);
            }

            if (pos == lis.size()) {
                lis.add(a[i]);
            } else {
                lis.set(pos, a[i]);
            }
        }

        System.out.println(lis.size());
        sc.close();
    }
}

</source>
</class>

<class classid="237" nclones="2" nlines="42" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02378_1P.java" startline="1" endline="52" pcid="40447">
import java.util.*;

public class Main {
    static List<Integer>[] graph;
    static int[] match;
    static boolean[] used;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int X = sc.nextInt();
        int Y = sc.nextInt();
        int E = sc.nextInt();

        graph = new List[X];
        for (int i = 0; i < X; i++) {
            graph[i] = new ArrayList<>();
        }

        for (int i = 0; i < E; i++) {
            int x = sc.nextInt();
            int y = sc.nextInt();
            graph[x].add(y);
        }

        match = new int[Y];
        Arrays.fill(match, -1);

        int result = 0;
        for (int i = 0; i < X; i++) {
            used = new boolean[Y];
            if (dfs(i)) {
                result++;
            }
        }

        System.out.println(result);
    }

    static boolean dfs(int v) {
        for (int to : graph[v]) {
            if (used[to]) continue;
            used[to] = true;

            if (match[to] == -1 || dfs(match[to])) {
                match[to] = v;
                return true;
            }
        }
        return false;
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02378_3P.java" startline="1" endline="52" pcid="65355">
import java.util.*;

public class Main {
    static List<Integer>[] graph;
    static int[] match;
    static boolean[] used;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int X = sc.nextInt();
        int Y = sc.nextInt();
        int E = sc.nextInt();

        graph = new List[X];
        for (int i = 0; i < X; i++) {
            graph[i] = new ArrayList<>();
        }

        for (int i = 0; i < E; i++) {
            int x = sc.nextInt();
            int y = sc.nextInt();
            graph[x].add(y);
        }

        match = new int[Y];
        Arrays.fill(match, -1);

        int result = 0;
        for (int i = 0; i < X; i++) {
            used = new boolean[Y];
            if (dfs(i)) {
                result++;
            }
        }

        System.out.println(result);
    }

    static boolean dfs(int v) {
        for (int to : graph[v]) {
            if (used[to]) continue;
            used[to] = true;

            if (match[to] == -1 || dfs(match[to])) {
                match[to] = v;
                return true;
            }
        }
        return false;
    }
}

</source>
</class>

<class classid="238" nclones="4" nlines="11" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02389_3P.java" startline="1" endline="15" pcid="40488">
import java.util.Scanner;

public class Rectangle {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int a = scanner.nextInt();
        int b = scanner.nextInt();

        int area = a * b;
        int perimeter = 2 * (a + b);

        System.out.println(area + " " + perimeter);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p02389_4P.java" startline="1" endline="13" pcid="66205">
import java.util.Scanner;

public class Rectangle {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int a = scanner.nextInt();
        int b = scanner.nextInt();
        int area = a * b;
        int perimeter = 2 * (a + b);
        System.out.println(area + " " + perimeter);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p02389_3P.java" startline="1" endline="13" pcid="48033">
import java.util.Scanner;

public class Rectangle {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int a = scanner.nextInt();
        int b = scanner.nextInt();
        int area = a * b;
        int perimeter = 2 * (a + b);
        System.out.println(area + " " + perimeter);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02389_4P.java" startline="1" endline="15" pcid="40490">
import java.util.Scanner;

public class Rectangle {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int a = scanner.nextInt();
        int b = scanner.nextInt();

        int area = a * b;
        int perimeter = 2 * (a + b);

        System.out.println(area + " " + perimeter);
    }
}

</source>
</class>

<class classid="239" nclones="3" nlines="18" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02391_1P.java" startline="1" endline="20" pcid="40497">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int a = scanner.nextInt();
        int b = scanner.nextInt();

        if (a < b) {
            System.out.println("a < b");
        } else if (a > b) {
            System.out.println("a > b");
        } else {
            System.out.println("a == b");
        }

        scanner.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02391_3P.java" startline="1" endline="20" pcid="65364">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int a = scanner.nextInt();
        int b = scanner.nextInt();

        if (a < b) {
            System.out.println("a < b");
        } else if (a > b) {
            System.out.println("a > b");
        } else {
            System.out.println("a == b");
        }

        scanner.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02391_2P.java" startline="1" endline="20" pcid="40498">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int a = scanner.nextInt();
        int b = scanner.nextInt();

        if (a < b) {
            System.out.println("a < b");
        } else if (a > b) {
            System.out.println("a > b");
        } else {
            System.out.println("a == b");
        }

        scanner.close();
    }
}

</source>
</class>

<class classid="240" nclones="2" nlines="26" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02406_1P.java" startline="1" endline="30" pcid="40560">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        call(n);
        sc.close();
    }

    static void call(int n) {
        for (int i = 1; i <= n; i++) {
            if (i % 3 == 0 || containsDigit3(i)) {
                System.out.print(" " + i);
            }
        }
        System.out.println();
    }

    static boolean containsDigit3(int x) {
        while (x > 0) {
            if (x % 10 == 3) {
                return true;
            }
            x /= 10;
        }
        return false;
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02406_3P.java" startline="1" endline="30" pcid="65371">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        call(n);
        sc.close();
    }

    static void call(int n) {
        for (int i = 1; i <= n; i++) {
            if (i % 3 == 0 || containsDigit3(i)) {
                System.out.print(" " + i);
            }
        }
        System.out.println();
    }

    static boolean containsDigit3(int x) {
        while (x > 0) {
            if (x % 10 == 3) {
                return true;
            }
            x /= 10;
        }
        return false;
    }
}

</source>
</class>

<class classid="241" nclones="2" nlines="26" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02406_4P.java" startline="1" endline="31" pcid="40562">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        call(n);
        sc.close();
    }

    static void call(int n) {
        for (int i = 1; i <= n; i++) {
            int x = i;

            if (x % 3 == 0) {
                System.out.print(" " + i);
                continue;
            }

            while (x > 0) {
                if (x % 10 == 3) {
                    System.out.print(" " + i);
                    break;
                }
                x /= 10;
            }
        }
        System.out.println();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02406_0P.java" startline="1" endline="30" pcid="65370">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        call(n);
        sc.close();
    }

    static void call(int n) {
        for (int i = 1; i <= n; i++) {
            int x = i;
            if (x % 3 == 0) {
                System.out.print(" " + i);
                continue;
            }

            while (x > 0) {
                if (x % 10 == 3) {
                    System.out.print(" " + i);
                    break;
                }
                x /= 10;
            }
        }
        System.out.println();
    }
}

</source>
</class>

<class classid="242" nclones="3" nlines="19" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02407_1P.java" startline="1" endline="24" pcid="40564">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] arr = new int[n];

        for (int i = 0; i < n; i++) {
            arr[i] = sc.nextInt();
        }

        for (int i = n - 1; i >= 0; i--) {
            System.out.print(arr[i]);
            if (i > 0) {
                System.out.print(" ");
            }
        }
        System.out.println();

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02407_0P.java" startline="1" endline="24" pcid="65372">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] arr = new int[n];

        for (int i = 0; i < n; i++) {
            arr[i] = sc.nextInt();
        }

        for (int i = n - 1; i >= 0; i--) {
            System.out.print(arr[i]);
            if (i > 0) {
                System.out.print(" ");
            }
        }
        System.out.println();

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02407_3P.java" startline="1" endline="24" pcid="40567">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] arr = new int[n];

        for (int i = 0; i < n; i++) {
            arr[i] = sc.nextInt();
        }

        for (int i = n - 1; i >= 0; i--) {
            System.out.print(arr[i]);
            if (i > 0) {
                System.out.print(" ");
            }
        }
        System.out.println();

        sc.close();
    }
}

</source>
</class>

<class classid="243" nclones="5" nlines="25" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02412_3P.java" startline="1" endline="33" pcid="40587">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        while (true) {
            int n = scanner.nextInt();
            int x = scanner.nextInt();

            if (n == 0 && x == 0) {
                break;
            }

            int count = 0;

            for (int i = 1; i <= n; i++) {
                for (int j = i + 1; j <= n; j++) {
                    for (int k = j + 1; k <= n; k++) {
                        if (i + j + k == x) {
                            count++;
                        }
                    }
                }
            }

            System.out.println(count);
        }

        scanner.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02412_1P.java" startline="1" endline="33" pcid="65374">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        while (true) {
            int n = scanner.nextInt();
            int x = scanner.nextInt();

            if (n == 0 && x == 0) {
                break;
            }

            int count = 0;

            for (int i = 1; i <= n; i++) {
                for (int j = i + 1; j <= n; j++) {
                    for (int k = j + 1; k <= n; k++) {
                        if (i + j + k == x) {
                            count++;
                        }
                    }
                }
            }

            System.out.println(count);
        }

        scanner.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p02412_3P.java" startline="1" endline="27" pcid="48134">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        while (true) {
            int n = scanner.nextInt();
            int x = scanner.nextInt();
            if (n == 0 && x == 0) {
                break;
            }
            int count = 0;
            for (int i = 1; i <= n; i++) {
                for (int j = i + 1; j <= n; j++) {
                    for (int k = j + 1; k <= n; k++) {
                        if (i + j + k == x) {
                            count++;
                        }
                    }
                }
            }
            System.out.println(count);
        }
        scanner.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p02412_0P.java" startline="1" endline="27" pcid="48132">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        while (true) {
            int n = scanner.nextInt();
            int x = scanner.nextInt();
            if (n == 0 && x == 0) {
                break;
            }
            int count = 0;
            for (int i = 1; i <= n; i++) {
                for (int j = i + 1; j <= n; j++) {
                    for (int k = j + 1; k <= n; k++) {
                        if (i + j + k == x) {
                            count++;
                        }
                    }
                }
            }
            System.out.println(count);
        }
        scanner.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02412_4P.java" startline="1" endline="33" pcid="40588">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        while (true) {
            int n = scanner.nextInt();
            int x = scanner.nextInt();

            if (n == 0 && x == 0) {
                break;
            }

            int count = 0;

            for (int i = 1; i <= n; i++) {
                for (int j = i + 1; j <= n; j++) {
                    for (int k = j + 1; k <= n; k++) {
                        if (i + j + k == x) {
                            count++;
                        }
                    }
                }
            }

            System.out.println(count);
        }

        scanner.close();
    }
}

</source>
</class>

<class classid="244" nclones="4" nlines="19" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02417_1P.java" startline="1" endline="24" pcid="40609">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int[] count = new int[26];

        while (scanner.hasNextLine()) {
            String line = scanner.nextLine().toLowerCase();
            for (char c : line.toCharArray()) {
                if (c >= 'a' && c <= 'z') {
                    count[c - 'a']++;
                }
            }
        }

        for (int i = 0; i < 26; i++) {
            System.out.println((char)('a' + i) + " : " + count[i]);
        }

        scanner.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02417_2P.java" startline="1" endline="24" pcid="65377">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int[] count = new int[26];

        while (scanner.hasNextLine()) {
            String line = scanner.nextLine().toLowerCase();
            for (char c : line.toCharArray()) {
                if (c >= 'a' && c <= 'z') {
                    count[c - 'a']++;
                }
            }
        }

        for (int i = 0; i < 26; i++) {
            System.out.println((char)('a' + i) + " : " + count[i]);
        }

        scanner.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02417_3P.java" startline="1" endline="24" pcid="40610">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int[] count = new int[26];

        while (scanner.hasNextLine()) {
            String line = scanner.nextLine().toLowerCase();
            for (char c : line.toCharArray()) {
                if (c >= 'a' && c <= 'z') {
                    count[c - 'a']++;
                }
            }
        }

        for (int i = 0; i < 26; i++) {
            System.out.println((char)('a' + i) + " : " + count[i]);
        }

        scanner.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02417_4P.java" startline="1" endline="24" pcid="40611">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int[] count = new int[26];

        while (scanner.hasNextLine()) {
            String line = scanner.nextLine().toLowerCase();
            for (char c : line.toCharArray()) {
                if (c >= 'a' && c <= 'z') {
                    count[c - 'a']++;
                }
            }
        }

        for (int i = 0; i < 26; i++) {
            System.out.println((char)('a' + i) + " : " + count[i]);
        }

        scanner.close();
    }
}

</source>
</class>

<class classid="245" nclones="3" nlines="19" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02419_1P.java" startline="1" endline="24" pcid="40617">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        String word = scanner.nextLine().toLowerCase();
        int count = 0;

        String line;
        while (!(line = scanner.nextLine()).equals("END_OF_TEXT")) {
            String[] words = line.toLowerCase().split("\\s+");
            for (String w : words) {
                if (w.equals(word)) {
                    count++;
                }
            }
        }

        System.out.println(count);
        scanner.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02419_2P.java" startline="1" endline="24" pcid="65378">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        String word = scanner.nextLine().toLowerCase();
        int count = 0;

        String line;
        while (!(line = scanner.nextLine()).equals("END_OF_TEXT")) {
            String[] words = line.toLowerCase().split("\\s+");
            for (String w : words) {
                if (w.equals(word)) {
                    count++;
                }
            }
        }

        System.out.println(count);
        scanner.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02419_0P.java" startline="1" endline="23" pcid="40618">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String word = scanner.nextLine().toLowerCase();
        int count = 0;

        String line;
        while (!(line = scanner.nextLine()).equals("END_OF_TEXT")) {
            String[] words = line.toLowerCase().split("\\s+");
            for (String w : words) {
                if (w.equals(word)) {
                    count++;
                }
            }
        }

        System.out.println(count);
        scanner.close();
    }
}

</source>
</class>

<class classid="246" nclones="2" nlines="21" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02420_0P.java" startline="1" endline="28" pcid="40621">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            String deck = sc.nextLine();
            if (deck.equals("-")) {
                break;
            }

            int m = sc.nextInt();

            for (int i = 0; i < m; i++) {
                int h = sc.nextInt();
                String bottom = deck.substring(0, h);
                String remaining = deck.substring(h);
                deck = remaining + bottom;
            }

            System.out.println(deck);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02420_1P.java" startline="1" endline="28" pcid="65379">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            String deck = sc.nextLine();
            if (deck.equals("-")) {
                break;
            }

            int m = sc.nextInt();

            for (int i = 0; i < m; i++) {
                int h = sc.nextInt();
                String bottom = deck.substring(0, h);
                String remaining = deck.substring(h);
                deck = remaining + bottom;
            }

            System.out.println(deck);
        }

        sc.close();
    }
}

</source>
</class>

<class classid="247" nclones="3" nlines="24" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02431_2P.java" startline="1" endline="28" pcid="40633">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int q = sc.nextInt();

        int[] arr = new int[200000];
        int size = 0;

        for (int i = 0; i < q; i++) {
            int op = sc.nextInt();

            if (op == 0) {
                int x = sc.nextInt();
                arr[size++] = x;
            } else if (op == 1) {
                int p = sc.nextInt();
                System.out.println(arr[p]);
            } else {
                size--;
            }
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02431_0P.java" startline="1" endline="28" pcid="65381">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int q = sc.nextInt();

        int[] arr = new int[200000];
        int size = 0;

        for (int i = 0; i < q; i++) {
            int op = sc.nextInt();

            if (op == 0) {
                int x = sc.nextInt();
                arr[size++] = x;
            } else if (op == 1) {
                int p = sc.nextInt();
                System.out.println(arr[p]);
            } else {
                size--;
            }
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02431_4P.java" startline="1" endline="28" pcid="40636">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int q = sc.nextInt();

        int[] arr = new int[200000];
        int size = 0;

        for (int i = 0; i < q; i++) {
            int op = sc.nextInt();

            if (op == 0) {
                int x = sc.nextInt();
                arr[size++] = x;
            } else if (op == 1) {
                int p = sc.nextInt();
                System.out.println(arr[p]);
            } else {
                size--;
            }
        }

        sc.close();
    }
}

</source>
</class>

<class classid="248" nclones="2" nlines="33" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02442_0P.java" startline="1" endline="42" pcid="40676">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }

        int m = sc.nextInt();
        int[] b = new int[m];
        for (int i = 0; i < m; i++) {
            b[i] = sc.nextInt();
        }

        StringBuilder sbA = new StringBuilder();
        StringBuilder sbB = new StringBuilder();

        for (int i = 0; i < n; i++) {
            sbA.append(String.format("%04d", a[i]));
        }

        for (int i = 0; i < m; i++) {
            sbB.append(String.format("%04d", b[i]));
        }

        String strA = sbA.toString();
        String strB = sbB.toString();

        if (strB.compareTo(strA) > 0) {
            System.out.println(1);
        } else {
            System.out.println(0);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02442_4P.java" startline="1" endline="42" pcid="65390">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }

        int m = sc.nextInt();
        int[] b = new int[m];
        for (int i = 0; i < m; i++) {
            b[i] = sc.nextInt();
        }

        StringBuilder sbA = new StringBuilder();
        StringBuilder sbB = new StringBuilder();

        for (int i = 0; i < n; i++) {
            sbA.append(String.format("%04d", a[i]));
        }

        for (int i = 0; i < m; i++) {
            sbB.append(String.format("%04d", b[i]));
        }

        String strA = sbA.toString();
        String strB = sbB.toString();

        if (strB.compareTo(strA) > 0) {
            System.out.println(1);
        } else {
            System.out.println(0);
        }

        sc.close();
    }
}

</source>
</class>

<class classid="249" nclones="2" nlines="17" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02577_4P.java" startline="1" endline="20" pcid="40850">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String n = sc.next();

        int sum = 0;
        for (char c : n.toCharArray()) {
            sum += c - '0';
        }

        if (sum % 9 == 0) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02577_2P.java" startline="1" endline="20" pcid="65405">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String n = sc.next();

        int sum = 0;
        for (char c : n.toCharArray()) {
            sum += c - '0';
        }

        if (sum % 9 == 0) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
</class>

<class classid="250" nclones="2" nlines="23" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02596_4P.java" startline="1" endline="30" pcid="40908">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int K = sc.nextInt();

        Set<Integer> seen = new HashSet<>();
        int remainder = 0;
        int position = 0;

        while (true) {
            remainder = (remainder * 10 + 7) % K;
            position++;

            if (remainder == 0) {
                System.out.println(position);
                return;
            }

            if (seen.contains(remainder)) {
                System.out.println(-1);
                return;
            }

            seen.add(remainder);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02596_0P.java" startline="1" endline="30" pcid="65410">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int K = sc.nextInt();

        Set<Integer> seen = new HashSet<>();
        int remainder = 0;
        int position = 0;

        while (true) {
            remainder = (remainder * 10 + 7) % K;
            position++;

            if (remainder == 0) {
                System.out.println(position);
                return;
            }

            if (seen.contains(remainder)) {
                System.out.println(-1);
                return;
            }

            seen.add(remainder);
        }
    }
}

</source>
</class>

<class classid="251" nclones="6" nlines="21" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02602_0P.java" startline="1" endline="25" pcid="40934">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();

        long[] A = new long[N];
        for (int i = 0; i < N; i++) {
            A[i] = sc.nextLong();
        }

        for (int i = K; i < N; i++) {
            if (A[i] > A[i - K]) {
                System.out.println("Yes");
            } else {
                System.out.println("No");
            }
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02602_1P.java" startline="1" endline="23" pcid="67101">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        long[] A = new long[N];
        for (int i = 0; i < N; i++) {
            A[i] = sc.nextLong();
        }

        for (int i = K; i < N; i++) {
            if (A[i] > A[i - K]) {
                System.out.println("Yes");
            } else {
                System.out.println("No");
            }
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02602_0P.java" startline="1" endline="23" pcid="56009">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        long[] A = new long[N];
        for (int i = 0; i < N; i++) {
            A[i] = sc.nextLong();
        }

        for (int i = K; i < N; i++) {
            if (A[i] > A[i - K]) {
                System.out.println("Yes");
            } else {
                System.out.println("No");
            }
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02602_4P.java" startline="1" endline="23" pcid="56012">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        long[] A = new long[N];
        for (int i = 0; i < N; i++) {
            A[i] = sc.nextLong();
        }

        for (int i = K; i < N; i++) {
            if (A[i] > A[i - K]) {
                System.out.println("Yes");
            } else {
                System.out.println("No");
            }
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02602_2P.java" startline="1" endline="23" pcid="56011">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        long[] A = new long[N];
        for (int i = 0; i < N; i++) {
            A[i] = sc.nextLong();
        }

        for (int i = K; i < N; i++) {
            if (A[i] > A[i - K]) {
                System.out.println("Yes");
            } else {
                System.out.println("No");
            }
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02602_3P.java" startline="1" endline="23" pcid="56010">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        long[] A = new long[N];
        for (int i = 0; i < N; i++) {
            A[i] = sc.nextLong();
        }

        for (int i = K; i < N; i++) {
            if (A[i] > A[i - K]) {
                System.out.println("Yes");
            } else {
                System.out.println("No");
            }
        }
        sc.close();
    }
}

</source>
</class>

<class classid="252" nclones="2" nlines="21" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02602_4P.java" startline="1" endline="25" pcid="40939">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();

        long[] A = new long[N + 1];
        for (int i = 1; i <= N; i++) {
            A[i] = sc.nextLong();
        }

        for (int i = K + 1; i <= N; i++) {
            if (A[i] > A[i - K]) {
                System.out.println("Yes");
            } else {
                System.out.println("No");
            }
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02602_2P.java" startline="1" endline="25" pcid="65412">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();

        long[] A = new long[N + 1];
        for (int i = 1; i <= N; i++) {
            A[i] = sc.nextLong();
        }

        for (int i = K + 1; i <= N; i++) {
            if (A[i] > A[i - K]) {
                System.out.println("Yes");
            } else {
                System.out.println("No");
            }
        }

        sc.close();
    }
}

</source>
</class>

<class classid="253" nclones="2" nlines="34" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02614_0P.java" startline="1" endline="43" pcid="40987">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int H = sc.nextInt();
        int W = sc.nextInt();
        int K = sc.nextInt();

        char[][] grid = new char[H][W];
        for (int i = 0; i < H; i++) {
            grid[i] = sc.next().toCharArray();
        }

        int count = 0;

        for (int rowMask = 0; rowMask < (1 << H); rowMask++) {
            for (int colMask = 0; colMask < (1 << W); colMask++) {
                int blackCount = 0;

                for (int i = 0; i < H; i++) {
                    for (int j = 0; j < W; j++) {
                        if (grid[i][j] == '#') {
                            boolean rowPainted = (rowMask & (1 << i)) != 0;
                            boolean colPainted = (colMask & (1 << j)) != 0;

                            if (!rowPainted && !colPainted) {
                                blackCount++;
                            }
                        }
                    }
                }

                if (blackCount == K) {
                    count++;
                }
            }
        }

        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02614_4P.java" startline="1" endline="43" pcid="65418">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int H = sc.nextInt();
        int W = sc.nextInt();
        int K = sc.nextInt();

        char[][] grid = new char[H][W];
        for (int i = 0; i < H; i++) {
            grid[i] = sc.next().toCharArray();
        }

        int count = 0;

        for (int rowMask = 0; rowMask < (1 << H); rowMask++) {
            for (int colMask = 0; colMask < (1 << W); colMask++) {
                int blackCount = 0;

                for (int i = 0; i < H; i++) {
                    for (int j = 0; j < W; j++) {
                        if (grid[i][j] == '#') {
                            boolean rowPainted = (rowMask & (1 << i)) != 0;
                            boolean colPainted = (colMask & (1 << j)) != 0;

                            if (!rowPainted && !colPainted) {
                                blackCount++;
                            }
                        }
                    }
                }

                if (blackCount == K) {
                    count++;
                }
            }
        }

        System.out.println(count);
    }
}

</source>
</class>

<class classid="254" nclones="3" nlines="15" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02622_3P.java" startline="1" endline="19" pcid="41023">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.nextLine();
        String T = sc.nextLine();

        int operations = 0;
        for (int i = 0; i < S.length(); i++) {
            if (S.charAt(i) != T.charAt(i)) {
                operations++;
            }
        }

        System.out.println(operations);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02622_1P.java" startline="1" endline="19" pcid="65420">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.nextLine();
        String T = sc.nextLine();

        int operations = 0;
        for (int i = 0; i < S.length(); i++) {
            if (S.charAt(i) != T.charAt(i)) {
                operations++;
            }
        }

        System.out.println(operations);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02622_4P.java" startline="1" endline="19" pcid="41024">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.nextLine();
        String T = sc.nextLine();

        int operations = 0;
        for (int i = 0; i < S.length(); i++) {
            if (S.charAt(i) != T.charAt(i)) {
                operations++;
            }
        }

        System.out.println(operations);
    }
}

</source>
</class>

<class classid="255" nclones="2" nlines="18" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02628_3P.java" startline="1" endline="24" pcid="41051">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();

        int[] prices = new int[N];
        for (int i = 0; i < N; i++) {
            prices[i] = sc.nextInt();
        }

        Arrays.sort(prices);

        int sum = 0;
        for (int i = 0; i < K; i++) {
            sum += prices[i];
        }

        System.out.println(sum);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02628_2P.java" startline="1" endline="24" pcid="65423">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();

        int[] prices = new int[N];
        for (int i = 0; i < N; i++) {
            prices[i] = sc.nextInt();
        }

        Arrays.sort(prices);

        int sum = 0;
        for (int i = 0; i < K; i++) {
            sum += prices[i];
        }

        System.out.println(sum);
    }
}

</source>
</class>

<class classid="256" nclones="8" nlines="14" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02639_1P.java" startline="1" endline="18" pcid="41080">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        for (int i = 1; i <= 5; i++) {
            int x = sc.nextInt();
            if (x == 0) {
                System.out.println(i);
                break;
            }
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02639_2P.java" startline="1" endline="18" pcid="65426">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        for (int i = 1; i <= 5; i++) {
            int x = sc.nextInt();
            if (x == 0) {
                System.out.println(i);
                break;
            }
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02639_3P.java" startline="1" endline="16" pcid="67121">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        for (int i = 1; i <= 5; i++) {
            int x = sc.nextInt();
            if (x == 0) {
                System.out.println(i);
                break;
            }
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02639_4P.java" startline="1" endline="18" pcid="41084">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        for (int i = 1; i <= 5; i++) {
            int x = sc.nextInt();
            if (x == 0) {
                System.out.println(i);
                break;
            }
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02639_0P.java" startline="1" endline="16" pcid="56147">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        for (int i = 1; i <= 5; i++) {
            int x = sc.nextInt();
            if (x == 0) {
                System.out.println(i);
                break;
            }
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02639_2P.java" startline="1" endline="16" pcid="56148">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        for (int i = 1; i <= 5; i++) {
            int x = sc.nextInt();
            if (x == 0) {
                System.out.println(i);
                break;
            }
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02639_3P.java" startline="1" endline="18" pcid="41082">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        for (int i = 1; i <= 5; i++) {
            int x = sc.nextInt();
            if (x == 0) {
                System.out.println(i);
                break;
            }
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02639_0P.java" startline="1" endline="18" pcid="41081">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        for (int i = 1; i <= 5; i++) {
            int x = sc.nextInt();
            if (x == 0) {
                System.out.println(i);
                break;
            }
        }

        sc.close();
    }
}

</source>
</class>

<class classid="257" nclones="8" nlines="10" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02657_0P.java" startline="1" endline="12" pcid="41127">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        System.out.println(A * B);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02657_3P.java" startline="1" endline="12" pcid="67127">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        System.out.println(A * B);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02657_2P.java" startline="1" endline="12" pcid="65429">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        System.out.println(A * B);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02657_4P.java" startline="1" endline="12" pcid="41130">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        System.out.println(A * B);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02657_2P.java" startline="1" endline="12" pcid="56191">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        System.out.println(A * B);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02657_1P.java" startline="1" endline="12" pcid="56190">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        System.out.println(A * B);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02657_1P.java" startline="1" endline="12" pcid="41129">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        System.out.println(A * B);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02657_4P.java" startline="1" endline="12" pcid="56194">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        System.out.println(A * B);
        sc.close();
    }
}

</source>
</class>

<class classid="258" nclones="3" nlines="14" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02676_1P.java" startline="1" endline="16" pcid="41180">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int K = sc.nextInt();
        String S = sc.next();

        if (S.length() <= K) {
            System.out.println(S);
        } else {
            System.out.println(S.substring(0, K) + "...");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02676_4P.java" startline="1" endline="16" pcid="65435">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int K = sc.nextInt();
        String S = sc.next();

        if (S.length() <= K) {
            System.out.println(S);
        } else {
            System.out.println(S.substring(0, K) + "...");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02676_3P.java" startline="1" endline="16" pcid="41183">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int K = sc.nextInt();
        String S = sc.next();

        if (S.length() <= K) {
            System.out.println(S);
        } else {
            System.out.println(S.substring(0, K) + "...");
        }
    }
}

</source>
</class>

<class classid="259" nclones="4" nlines="14" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02681_1P.java" startline="1" endline="16" pcid="41202">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.nextLine();
        String T = sc.nextLine();

        if (T.startsWith(S) && T.length() == S.length() + 1) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p02681_1P.java" startline="1" endline="15" pcid="64592">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.nextLine();
        String T = sc.nextLine();
        if (T.startsWith(S) && T.length() == S.length() + 1) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02681_4P.java" startline="1" endline="16" pcid="41204">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.nextLine();
        String T = sc.nextLine();

        if (T.startsWith(S) && T.length() == S.length() + 1) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02681_3P.java" startline="1" endline="16" pcid="41203">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.nextLine();
        String T = sc.nextLine();

        if (T.startsWith(S) && T.length() == S.length() + 1) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
</class>

<class classid="260" nclones="2" nlines="31" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02684_0P.java" startline="1" endline="38" pcid="41212">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        long K = sc.nextLong();

        int[] A = new int[N + 1];
        for (int i = 1; i <= N; i++) {
            A[i] = sc.nextInt();
        }

        Map<Integer, Integer> visited = new HashMap<>();
        List<Integer> path = new ArrayList<>();

        int current = 1;
        int step = 0;

        while (!visited.containsKey(current)) {
            visited.put(current, step);
            path.add(current);
            current = A[current];
            step++;
        }

        int cycleStart = visited.get(current);
        int cycleLength = step - cycleStart;

        if (K < cycleStart) {
            System.out.println(path.get((int)K));
        } else {
            long remaining = (K - cycleStart) % cycleLength;
            System.out.println(path.get((int)(cycleStart + remaining)));
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02684_1P.java" startline="1" endline="38" pcid="65442">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        long K = sc.nextLong();

        int[] A = new int[N + 1];
        for (int i = 1; i <= N; i++) {
            A[i] = sc.nextInt();
        }

        Map<Integer, Integer> visited = new HashMap<>();
        List<Integer> path = new ArrayList<>();

        int current = 1;
        int step = 0;

        while (!visited.containsKey(current)) {
            visited.put(current, step);
            path.add(current);
            current = A[current];
            step++;
        }

        int cycleStart = visited.get(current);
        int cycleLength = step - cycleStart;

        if (K < cycleStart) {
            System.out.println(path.get((int)K));
        } else {
            long remaining = (K - cycleStart) % cycleLength;
            System.out.println(path.get((int)(cycleStart + remaining)));
        }
    }
}

</source>
</class>

<class classid="261" nclones="3" nlines="24" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02713_0P.java" startline="1" endline="29" pcid="41340">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int K = sc.nextInt();

        long sum = 0;
        for (int a = 1; a <= K; a++) {
            for (int b = 1; b <= K; b++) {
                for (int c = 1; c <= K; c++) {
                    sum += gcd(gcd(a, b), c);
                }
            }
        }

        System.out.println(sum);
    }

    private static int gcd(int a, int b) {
        while (b != 0) {
            int temp = b;
            b = a % b;
            a = temp;
        }
        return a;
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p02713_2P.java" startline="1" endline="29" pcid="66303">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int K = sc.nextInt();
        long sum = 0;

        for (int a = 1; a <= K; a++) {
            for (int b = 1; b <= K; b++) {
                for (int c = 1; c <= K; c++) {
                    sum += gcd(gcd(a, b), c);
                }
            }
        }

        System.out.println(sum);
    }

    private static int gcd(int a, int b) {
        while (b != 0) {
            int temp = b;
            b = a % b;
            a = temp;
        }
        return a;
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p02713_0P.java" startline="1" endline="29" pcid="48871">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int K = sc.nextInt();
        long sum = 0;

        for (int a = 1; a <= K; a++) {
            for (int b = 1; b <= K; b++) {
                for (int c = 1; c <= K; c++) {
                    sum += gcd(gcd(a, b), c);
                }
            }
        }

        System.out.println(sum);
    }

    private static int gcd(int a, int b) {
        while (b != 0) {
            int temp = b;
            b = a % b;
            a = temp;
        }
        return a;
    }
}

</source>
</class>

<class classid="262" nclones="3" nlines="17" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02717_2P.java" startline="1" endline="23" pcid="41359">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int X = sc.nextInt();
        int Y = sc.nextInt();
        int Z = sc.nextInt();

        int A = X, B = Y, C = Z;

        int temp = A;
        A = B;
        B = temp;

        temp = A;
        A = C;
        C = temp;

        System.out.println(A + " " + B + " " + C);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02717_1P.java" startline="1" endline="23" pcid="65452">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int X = sc.nextInt();
        int Y = sc.nextInt();
        int Z = sc.nextInt();

        int A = X, B = Y, C = Z;

        int temp = A;
        A = B;
        B = temp;

        temp = A;
        A = C;
        C = temp;

        System.out.println(A + " " + B + " " + C);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02717_3P.java" startline="1" endline="23" pcid="41362">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int X = sc.nextInt();
        int Y = sc.nextInt();
        int Z = sc.nextInt();

        int A = X, B = Y, C = Z;

        int temp = A;
        A = B;
        B = temp;

        temp = A;
        A = C;
        C = temp;

        System.out.println(A + " " + B + " " + C);
    }
}

</source>
</class>

<class classid="263" nclones="2" nlines="13" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02747_0P.java" startline="1" endline="15" pcid="41474">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();

        if (s.length() % 2 == 0 && s.matches("(hi)+")) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02747_3P.java" startline="1" endline="15" pcid="65460">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();

        if (s.length() % 2 == 0 && s.matches("(hi)+")) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
</class>

<class classid="264" nclones="3" nlines="17" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02754_1P.java" startline="1" endline="23" pcid="41489">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long N = sc.nextLong();
        long A = sc.nextLong();
        long B = sc.nextLong();

        long cycleLength = A + B;
        long completeCycles = N / cycleLength;
        long remainder = N % cycleLength;

        long blueBalls = completeCycles * A;

        if (remainder > 0) {
            blueBalls += Math.min(remainder, A);
        }

        System.out.println(blueBalls);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02754_2P.java" startline="1" endline="23" pcid="65467">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long N = sc.nextLong();
        long A = sc.nextLong();
        long B = sc.nextLong();

        long cycleLength = A + B;
        long completeCycles = N / cycleLength;
        long remainder = N % cycleLength;

        long blueBalls = completeCycles * A;

        if (remainder > 0) {
            blueBalls += Math.min(remainder, A);
        }

        System.out.println(blueBalls);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02754_3P.java" startline="1" endline="23" pcid="41490">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long N = sc.nextLong();
        long A = sc.nextLong();
        long B = sc.nextLong();

        long cycleLength = A + B;
        long completeCycles = N / cycleLength;
        long remainder = N % cycleLength;

        long blueBalls = completeCycles * A;

        if (remainder > 0) {
            blueBalls += Math.min(remainder, A);
        }

        System.out.println(blueBalls);
    }
}

</source>
</class>

<class classid="265" nclones="3" nlines="25" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02755_0P.java" startline="1" endline="34" pcid="41492">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();

        double min1 = A / 0.08;
        double max1 = (A + 1) / 0.08;

        double min2 = B / 0.10;
        double max2 = (B + 1) / 0.10;

        double minP = Math.max(min1, min2);
        double maxP = Math.min(max1, max2);

        if (minP >= maxP) {
            System.out.println(-1);
            return;
        }

        int candidate = (int) Math.ceil(minP);

        if (candidate < maxP &&
            (int)(candidate * 0.08) == A &&
            (int)(candidate * 0.10) == B) {
            System.out.println(candidate);
        } else {
            System.out.println(-1);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02755_4P.java" startline="1" endline="34" pcid="65469">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();

        double min1 = A / 0.08;
        double max1 = (A + 1) / 0.08;

        double min2 = B / 0.10;
        double max2 = (B + 1) / 0.10;

        double minP = Math.max(min1, min2);
        double maxP = Math.min(max1, max2);

        if (minP >= maxP) {
            System.out.println(-1);
            return;
        }

        int candidate = (int) Math.ceil(minP);

        if (candidate < maxP &&
            (int)(candidate * 0.08) == A &&
            (int)(candidate * 0.10) == B) {
            System.out.println(candidate);
        } else {
            System.out.println(-1);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02755_2P.java" startline="1" endline="34" pcid="41493">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();

        double min1 = A / 0.08;
        double max1 = (A + 1) / 0.08;

        double min2 = B / 0.10;
        double max2 = (B + 1) / 0.10;

        double minP = Math.max(min1, min2);
        double maxP = Math.min(max1, max2);

        if (minP >= maxP) {
            System.out.println(-1);
            return;
        }

        int candidate = (int) Math.ceil(minP);

        if (candidate < maxP &&
            (int)(candidate * 0.08) == A &&
            (int)(candidate * 0.10) == B) {
            System.out.println(candidate);
        } else {
            System.out.println(-1);
        }
    }
}

</source>
</class>

<class classid="266" nclones="5" nlines="14" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02766_2P.java" startline="1" endline="18" pcid="41535">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();

        int digits = 0;
        while (N > 0) {
            N /= K;
            digits++;
        }

        System.out.println(digits);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02766_1P.java" startline="1" endline="18" pcid="65474">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();

        int digits = 0;
        while (N > 0) {
            N /= K;
            digits++;
        }

        System.out.println(digits);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p02766_1P.java" startline="1" endline="18" pcid="49058">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        int digits = 0;

        while (N > 0) {
            N /= K;
            digits++;
        }

        System.out.println(digits);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p02766_2P.java" startline="1" endline="18" pcid="49059">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        int digits = 0;

        while (N > 0) {
            N /= K;
            digits++;
        }

        System.out.println(digits);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02766_4P.java" startline="1" endline="18" pcid="41538">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();

        int digits = 0;
        while (N > 0) {
            N /= K;
            digits++;
        }

        System.out.println(digits);
    }
}

</source>
</class>

<class classid="267" nclones="3" nlines="23" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02773_2P.java" startline="1" endline="31" pcid="41570">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        Map<String, Integer> count = new HashMap<>();

        for (int i = 0; i < n; i++) {
            String s = sc.next();
            count.put(s, count.getOrDefault(s, 0) + 1);
        }

        int maxCount = Collections.max(count.values());

        List<String> result = new ArrayList<>();
        for (Map.Entry<String, Integer> entry : count.entrySet()) {
            if (entry.getValue() == maxCount) {
                result.add(entry.getKey());
            }
        }

        Collections.sort(result);

        for (String s : result) {
            System.out.println(s);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02773_3P.java" startline="1" endline="31" pcid="65476">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        Map<String, Integer> count = new HashMap<>();

        for (int i = 0; i < n; i++) {
            String s = sc.next();
            count.put(s, count.getOrDefault(s, 0) + 1);
        }

        int maxCount = Collections.max(count.values());

        List<String> result = new ArrayList<>();
        for (Map.Entry<String, Integer> entry : count.entrySet()) {
            if (entry.getValue() == maxCount) {
                result.add(entry.getKey());
            }
        }

        Collections.sort(result);

        for (String s : result) {
            System.out.println(s);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02773_4P.java" startline="1" endline="31" pcid="41571">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        Map<String, Integer> count = new HashMap<>();

        for (int i = 0; i < n; i++) {
            String s = sc.next();
            count.put(s, count.getOrDefault(s, 0) + 1);
        }

        int maxCount = Collections.max(count.values());

        List<String> result = new ArrayList<>();
        for (Map.Entry<String, Integer> entry : count.entrySet()) {
            if (entry.getValue() == maxCount) {
                result.add(entry.getKey());
            }
        }

        Collections.sort(result);

        for (String s : result) {
            System.out.println(s);
        }
    }
}

</source>
</class>

<class classid="268" nclones="2" nlines="16" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02779_4P.java" startline="1" endline="20" pcid="41591">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        Set<Integer> seen = new HashSet<>();

        for (int i = 0; i < n; i++) {
            int a = sc.nextInt();
            if (!seen.add(a)) {
                System.out.println("NO");
                return;
            }
        }

        System.out.println("YES");
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02779_0P.java" startline="1" endline="20" pcid="65480">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        Set<Integer> seen = new HashSet<>();

        for (int i = 0; i < n; i++) {
            int a = sc.nextInt();
            if (!seen.add(a)) {
                System.out.println("NO");
                return;
            }
        }

        System.out.println("YES");
    }
}

</source>
</class>

<class classid="269" nclones="3" nlines="14" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02789_3P.java" startline="1" endline="16" pcid="41637">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int M = sc.nextInt();

        if (N == M) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/0/s876459454P.java" startline="1" endline="15" pcid="63832">
import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int N = sc.nextInt();
		int M = sc.nextInt();
		if (N==M) {
			System.out.println("Yes");
		} else {
			System.out.println("No");
		}
	}
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02789_4P.java" startline="1" endline="16" pcid="41641">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int M = sc.nextInt();

        if (N == M) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
</class>

<class classid="270" nclones="5" nlines="19" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02795_0P.java" startline="1" endline="24" pcid="41661">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int H = sc.nextInt();
        int W = sc.nextInt();
        int N = sc.nextInt();

        int minOps = Integer.MAX_VALUE;

        for (int r = 0; r <= H; r++) {
            for (int c = 0; c <= W; c++) {
                int blackSquares = r * W + c * H - r * c;
                if (blackSquares >= N) {
                    minOps = Math.min(minOps, r + c);
                }
            }
        }

        System.out.println(minOps);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02795_3P.java" startline="1" endline="24" pcid="65488">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int H = sc.nextInt();
        int W = sc.nextInt();
        int N = sc.nextInt();

        int minOps = Integer.MAX_VALUE;

        for (int r = 0; r <= H; r++) {
            for (int c = 0; c <= W; c++) {
                int blackSquares = r * W + c * H - r * c;
                if (blackSquares >= N) {
                    minOps = Math.min(minOps, r + c);
                }
            }
        }

        System.out.println(minOps);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02795_1P.java" startline="1" endline="24" pcid="41663">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int H = sc.nextInt();
        int W = sc.nextInt();
        int N = sc.nextInt();

        int minOps = Integer.MAX_VALUE;

        for (int r = 0; r <= H; r++) {
            for (int c = 0; c <= W; c++) {
                int blackSquares = r * W + c * H - r * c;
                if (blackSquares >= N) {
                    minOps = Math.min(minOps, r + c);
                }
            }
        }

        System.out.println(minOps);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02795_2P.java" startline="1" endline="25" pcid="41664">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int H = sc.nextInt();
        int W = sc.nextInt();
        int N = sc.nextInt();

        int minOps = Integer.MAX_VALUE;

        for (int r = 0; r <= H; r++) {
            for (int c = 0; c <= W; c++) {
                int blackSquares = r * W + c * H - r * c;

                if (blackSquares >= N) {
                    minOps = Math.min(minOps, r + c);
                }
            }
        }

        System.out.println(minOps);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02795_4P.java" startline="1" endline="24" pcid="41662">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int H = sc.nextInt();
        int W = sc.nextInt();
        int N = sc.nextInt();

        int minOps = Integer.MAX_VALUE;

        for (int r = 0; r <= H; r++) {
            for (int c = 0; c <= W; c++) {
                int blackSquares = r * W + c * H - r * c;
                if (blackSquares >= N) {
                    minOps = Math.min(minOps, r + c);
                }
            }
        }

        System.out.println(minOps);
    }
}

</source>
</class>

<class classid="271" nclones="3" nlines="16" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02812_1P.java" startline="1" endline="20" pcid="41713">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        String S = sc.next();

        int count = 0;
        for (int i = 0; i <= N - 3; i++) {
            if (S.substring(i, i + 3).equals("ABC")) {
                count++;
            }
        }

        System.out.println(count);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02812_0P.java" startline="1" endline="20" pcid="65495">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        String S = sc.next();

        int count = 0;
        for (int i = 0; i <= N - 3; i++) {
            if (S.substring(i, i + 3).equals("ABC")) {
                count++;
            }
        }

        System.out.println(count);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02812_3P.java" startline="1" endline="20" pcid="65496">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        String S = sc.next();

        int count = 0;
        for (int i = 0; i <= N - 3; i++) {
            if (S.substring(i, i + 3).equals("ABC")) {
                count++;
            }
        }

        System.out.println(count);
        sc.close();
    }
}

</source>
</class>

<class classid="272" nclones="7" nlines="10" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02817_0P.java" startline="1" endline="12" pcid="41736">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.next();
        String T = sc.next();
        System.out.println(T + S);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02817_3P.java" startline="1" endline="12" pcid="67190">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.next();
        String T = sc.next();
        System.out.println(T + S);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02817_2P.java" startline="1" endline="12" pcid="67189">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.next();
        String T = sc.next();
        System.out.println(T + S);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02817_4P.java" startline="1" endline="12" pcid="56802">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.next();
        String T = sc.next();
        System.out.println(T + S);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02817_1P.java" startline="1" endline="12" pcid="56799">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.next();
        String T = sc.next();
        System.out.println(T + S);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02817_0P.java" startline="1" endline="12" pcid="56801">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.next();
        String T = sc.next();
        System.out.println(T + S);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02817_2P.java" startline="1" endline="12" pcid="41738">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.next();
        String T = sc.next();
        System.out.println(T + S);
        sc.close();
    }
}

</source>
</class>

<class classid="273" nclones="3" nlines="17" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02818_2P.java" startline="1" endline="19" pcid="41741">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long A = sc.nextLong();
        long B = sc.nextLong();
        long K = sc.nextLong();

        if (K <= A) {
            System.out.println((A - K) + " " + B);
        } else {
            long remaining = K - A;
            long aokiLeft = Math.max(0, B - remaining);
            System.out.println("0 " + aokiLeft);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02818_0P.java" startline="1" endline="19" pcid="65498">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long A = sc.nextLong();
        long B = sc.nextLong();
        long K = sc.nextLong();

        if (K <= A) {
            System.out.println((A - K) + " " + B);
        } else {
            long remaining = K - A;
            long aokiLeft = Math.max(0, B - remaining);
            System.out.println("0 " + aokiLeft);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02818_4P.java" startline="1" endline="19" pcid="41744">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long A = sc.nextLong();
        long B = sc.nextLong();
        long K = sc.nextLong();

        if (K <= A) {
            System.out.println((A - K) + " " + B);
        } else {
            long remaining = K - A;
            long aokiLeft = Math.max(0, B - remaining);
            System.out.println("0 " + aokiLeft);
        }
    }
}

</source>
</class>

<class classid="274" nclones="3" nlines="15" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02836_3P.java" startline="1" endline="20" pcid="41804">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();

        int n = s.length();
        int hugs = 0;

        for (int i = 0; i < n / 2; i++) {
            if (s.charAt(i) != s.charAt(n - 1 - i)) {
                hugs++;
            }
        }

        System.out.println(hugs);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02836_1P.java" startline="1" endline="20" pcid="65502">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();

        int n = s.length();
        int hugs = 0;

        for (int i = 0; i < n / 2; i++) {
            if (s.charAt(i) != s.charAt(n - 1 - i)) {
                hugs++;
            }
        }

        System.out.println(hugs);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02836_1P.java" startline="1" endline="17" pcid="56859">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        int n = s.length();
        int hugs = 0;
        for (int i = 0; i < n / 2; i++) {
            if (s.charAt(i) != s.charAt(n - 1 - i)) {
                hugs++;
            }
        }
        System.out.println(hugs);
    }
}

</source>
</class>

<class classid="275" nclones="3" nlines="18" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02844_1P.java" startline="1" endline="23" pcid="41834">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String s = sc.next();

        Set<String> pinCodes = new HashSet<>();

        for (int i = 0; i < n - 2; i++) {
            for (int j = i + 1; j < n - 1; j++) {
                for (int k = j + 1; k < n; k++) {
                    String pin = "" + s.charAt(i) + s.charAt(j) + s.charAt(k);
                    pinCodes.add(pin);
                }
            }
        }

        System.out.println(pinCodes.size());
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02844_2P.java" startline="1" endline="23" pcid="65505">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String s = sc.next();

        Set<String> pinCodes = new HashSet<>();

        for (int i = 0; i < n - 2; i++) {
            for (int j = i + 1; j < n - 1; j++) {
                for (int k = j + 1; k < n; k++) {
                    String pin = "" + s.charAt(i) + s.charAt(j) + s.charAt(k);
                    pinCodes.add(pin);
                }
            }
        }

        System.out.println(pinCodes.size());
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02844_4P.java" startline="1" endline="23" pcid="41836">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String s = sc.next();

        Set<String> pinCodes = new HashSet<>();

        for (int i = 0; i < n - 2; i++) {
            for (int j = i + 1; j < n - 1; j++) {
                for (int k = j + 1; k < n; k++) {
                    String pin = "" + s.charAt(i) + s.charAt(j) + s.charAt(k);
                    pinCodes.add(pin);
                }
            }
        }

        System.out.println(pinCodes.size());
    }
}

</source>
</class>

<class classid="276" nclones="2" nlines="18" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02844_3P.java" startline="1" endline="23" pcid="41838">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        String S = sc.next();

        Set<String> pinCodes = new HashSet<>();

        for (int i = 0; i < N - 2; i++) {
            for (int j = i + 1; j < N - 1; j++) {
                for (int k = j + 1; k < N; k++) {
                    String pin = "" + S.charAt(i) + S.charAt(j) + S.charAt(k);
                    pinCodes.add(pin);
                }
            }
        }

        System.out.println(pinCodes.size());
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02844_0P.java" startline="1" endline="23" pcid="65504">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        String S = sc.next();

        Set<String> pinCodes = new HashSet<>();

        for (int i = 0; i < N - 2; i++) {
            for (int j = i + 1; j < N - 1; j++) {
                for (int k = j + 1; k < N; k++) {
                    String pin = "" + S.charAt(i) + S.charAt(j) + S.charAt(k);
                    pinCodes.add(pin);
                }
            }
        }

        System.out.println(pinCodes.size());
    }
}

</source>
</class>

<class classid="277" nclones="2" nlines="21" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02860_4P.java" startline="1" endline="23" pcid="41892">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        String S = sc.next();

        if (N % 2 == 1) {
            System.out.println("No");
        } else {
            String firstHalf = S.substring(0, N / 2);
            String secondHalf = S.substring(N / 2);

            if (firstHalf.equals(secondHalf)) {
                System.out.println("Yes");
            } else {
                System.out.println("No");
            }
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02860_1P.java" startline="1" endline="23" pcid="65511">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        String S = sc.next();

        if (N % 2 == 1) {
            System.out.println("No");
        } else {
            String firstHalf = S.substring(0, N / 2);
            String secondHalf = S.substring(N / 2);

            if (firstHalf.equals(secondHalf)) {
                System.out.println("Yes");
            } else {
                System.out.println("No");
            }
        }
    }
}

</source>
</class>

<class classid="278" nclones="4" nlines="16" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02881_0P.java" startline="1" endline="21" pcid="41957">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long N = sc.nextLong();

        long minMoves = Long.MAX_VALUE;

        for (long i = 1; i * i <= N; i++) {
            if (N % i == 0) {
                long j = N / i;
                long moves = i + j - 2;
                minMoves = Math.min(minMoves, moves);
            }
        }

        System.out.println(minMoves);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02881_1P.java" startline="1" endline="21" pcid="65515">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long N = sc.nextLong();

        long minMoves = Long.MAX_VALUE;

        for (long i = 1; i * i <= N; i++) {
            if (N % i == 0) {
                long j = N / i;
                long moves = i + j - 2;
                minMoves = Math.min(minMoves, moves);
            }
        }

        System.out.println(minMoves);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02881_4P.java" startline="1" endline="21" pcid="41959">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long N = sc.nextLong();

        long minMoves = Long.MAX_VALUE;

        for (long i = 1; i * i <= N; i++) {
            if (N % i == 0) {
                long j = N / i;
                long moves = i + j - 2;
                minMoves = Math.min(minMoves, moves);
            }
        }

        System.out.println(minMoves);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02881_3P.java" startline="1" endline="21" pcid="41960">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long N = sc.nextLong();

        long minMoves = Long.MAX_VALUE;

        for (long i = 1; i * i <= N; i++) {
            if (N % i == 0) {
                long j = N / i;
                long moves = i + j - 2;
                minMoves = Math.min(minMoves, moves);
            }
        }

        System.out.println(minMoves);
    }
}

</source>
</class>

<class classid="279" nclones="3" nlines="10" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02885_1P.java" startline="1" endline="13" pcid="41972">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();

        int uncovered = Math.max(0, A - 2 * B);
        System.out.println(uncovered);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02885_4P.java" startline="1" endline="13" pcid="65519">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();

        int uncovered = Math.max(0, A - 2 * B);
        System.out.println(uncovered);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02885_3P.java" startline="1" endline="13" pcid="41976">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();

        int uncovered = Math.max(0, A - 2 * B);
        System.out.println(uncovered);
    }
}

</source>
</class>

<class classid="280" nclones="3" nlines="19" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02886_0P.java" startline="1" endline="24" pcid="41977">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] d = new int[n];

        for (int i = 0; i < n; i++) {
            d[i] = sc.nextInt();
        }

        int sum = 0;
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                sum += d[i] * d[j];
            }
        }

        System.out.println(sum);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02886_1P.java" startline="1" endline="24" pcid="65520">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] d = new int[n];

        for (int i = 0; i < n; i++) {
            d[i] = sc.nextInt();
        }

        int sum = 0;
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                sum += d[i] * d[j];
            }
        }

        System.out.println(sum);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02886_4P.java" startline="1" endline="24" pcid="41985">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] d = new int[n];

        for (int i = 0; i < n; i++) {
            d[i] = sc.nextInt();
        }

        int sum = 0;
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                sum += d[i] * d[j];
            }
        }

        System.out.println(sum);
        sc.close();
    }
}

</source>
</class>

<class classid="281" nclones="2" nlines="22" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02890_3P.java" startline="1" endline="26" pcid="41996">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        Map<Integer, Integer> freq = new HashMap<>();
        for (int i = 0; i < n; i++) {
            int a = sc.nextInt();
            freq.put(a, freq.getOrDefault(a, 0) + 1);
        }

        List<Integer> frequencies = new ArrayList<>(freq.values());
        Collections.sort(frequencies, Collections.reverseOrder());

        for (int k = 1; k <= n; k++) {
            if (k > frequencies.size()) {
                System.out.println(0);
            } else {
                System.out.println(frequencies.get(k - 1));
            }
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02890_1P.java" startline="1" endline="26" pcid="65521">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        Map<Integer, Integer> freq = new HashMap<>();

        for (int i = 0; i < n; i++) {
            int a = sc.nextInt();
            freq.put(a, freq.getOrDefault(a, 0) + 1);
        }

        List<Integer> frequencies = new ArrayList<>(freq.values());
        Collections.sort(frequencies, Collections.reverseOrder());

        for (int k = 1; k <= n; k++) {
            if (k > frequencies.size()) {
                System.out.println(0);
            } else {
                System.out.println(frequencies.get(k - 1));
            }
        }
    }
}

</source>
</class>

<class classid="282" nclones="2" nlines="22" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02890_0P.java" startline="1" endline="26" pcid="41998">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        Map<Integer, Integer> freq = new HashMap<>();
        for (int i = 0; i < n; i++) {
            int a = sc.nextInt();
            freq.put(a, freq.getOrDefault(a, 0) + 1);
        }

        List<Integer> frequencies = new ArrayList<>(freq.values());
        frequencies.sort(Collections.reverseOrder());

        for (int k = 1; k <= n; k++) {
            if (k > frequencies.size()) {
                System.out.println(0);
            } else {
                System.out.println(frequencies.get(k - 1));
            }
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02890_2P.java" startline="1" endline="26" pcid="65522">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        Map<Integer, Integer> freq = new HashMap<>();
        for (int i = 0; i < n; i++) {
            int a = sc.nextInt();
            freq.put(a, freq.getOrDefault(a, 0) + 1);
        }

        List<Integer> frequencies = new ArrayList<>(freq.values());
        frequencies.sort(Collections.reverseOrder());

        for (int k = 1; k <= n; k++) {
            if (k > frequencies.size()) {
                System.out.println(0);
            } else {
                System.out.println(frequencies.get(k - 1));
            }
        }
    }
}

</source>
</class>

<class classid="283" nclones="2" nlines="23" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02904_2P.java" startline="1" endline="30" pcid="42042">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        int[] p = new int[n];
        for (int i = 0; i < n; i++) {
            p[i] = sc.nextInt();
        }

        Set<String> results = new HashSet<>();

        for (int start = 0; start <= n - k; start++) {
            int[] temp = p.clone();

            Arrays.sort(temp, start, start + k);

            StringBuilder sb = new StringBuilder();
            for (int i = 0; i < n; i++) {
                sb.append(temp[i]).append(",");
            }
            results.add(sb.toString());
        }

        System.out.println(results.size());
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02904_3P.java" startline="1" endline="30" pcid="65527">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        int[] p = new int[n];
        for (int i = 0; i < n; i++) {
            p[i] = sc.nextInt();
        }

        Set<String> results = new HashSet<>();

        for (int start = 0; start <= n - k; start++) {
            int[] temp = p.clone();

            Arrays.sort(temp, start, start + k);

            StringBuilder sb = new StringBuilder();
            for (int i = 0; i < n; i++) {
                sb.append(temp[i]).append(",");
            }
            results.add(sb.toString());
        }

        System.out.println(results.size());
    }
}

</source>
</class>

<class classid="284" nclones="3" nlines="18" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02917_2P.java" startline="1" endline="26" pcid="42081">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] B = new int[N-1];

        for (int i = 0; i < N-1; i++) {
            B[i] = sc.nextInt();
        }

        int sum = 0;

        sum += B[0];

        for (int i = 1; i < N-1; i++) {
            sum += Math.min(B[i-1], B[i]);
        }

        sum += B[N-2];

        System.out.println(sum);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02917_0P.java" startline="1" endline="26" pcid="65532">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] B = new int[N-1];

        for (int i = 0; i < N-1; i++) {
            B[i] = sc.nextInt();
        }

        int sum = 0;

        sum += B[0];

        for (int i = 1; i < N-1; i++) {
            sum += Math.min(B[i-1], B[i]);
        }

        sum += B[N-2];

        System.out.println(sum);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02917_4P.java" startline="1" endline="26" pcid="42083">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] B = new int[N-1];

        for (int i = 0; i < N-1; i++) {
            B[i] = sc.nextInt();
        }

        int sum = 0;

        sum += B[0];

        for (int i = 1; i < N-1; i++) {
            sum += Math.min(B[i-1], B[i]);
        }

        sum += B[N-2];

        System.out.println(sum);
    }
}

</source>
</class>

<class classid="285" nclones="4" nlines="10" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02922_0P.java" startline="1" endline="13" pcid="42097">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();

        int result = (B - 1 + A - 2) / (A - 1);
        System.out.println(result);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02922_2P.java" startline="1" endline="13" pcid="65538">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();

        int result = (B - 1 + A - 2) / (A - 1);
        System.out.println(result);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02922_4P.java" startline="1" endline="13" pcid="42101">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();

        int result = (B - 1 + A - 2) / (A - 1);
        System.out.println(result);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02922_3P.java" startline="1" endline="13" pcid="42100">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();

        int result = (B - 1 + A - 2) / (A - 1);
        System.out.println(result);
    }
}

</source>
</class>

<class classid="286" nclones="7" nlines="13" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02945_0P.java" startline="1" endline="17" pcid="42175">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();

        int sum = A + B;
        int diff = A - B;
        int product = A * B;

        int max = Math.max(sum, Math.max(diff, product));
        System.out.println(max);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02945_1P.java" startline="1" endline="17" pcid="65544">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();

        int sum = A + B;
        int diff = A - B;
        int product = A * B;

        int max = Math.max(sum, Math.max(diff, product));
        System.out.println(max);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02945_2P.java" startline="1" endline="17" pcid="42177">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();

        int sum = A + B;
        int diff = A - B;
        int product = A * B;

        int max = Math.max(sum, Math.max(diff, product));
        System.out.println(max);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p03337_1P.java" startline="1" endline="17" pcid="51062">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();

        int sum = A + B;
        int diff = A - B;
        int product = A * B;

        int max = Math.max(sum, Math.max(diff, product));
        System.out.println(max);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p03337_3P.java" startline="1" endline="17" pcid="60790">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();

        int sum = A + B;
        int diff = A - B;
        int product = A * B;

        int max = Math.max(sum, Math.max(diff, product));
        System.out.println(max);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03337_2P.java" startline="1" endline="18" pcid="43547">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();

        int sum = A + B;
        int diff = A - B;
        int product = A * B;

        int max = Math.max(sum, Math.max(diff, product));

        System.out.println(max);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p03337_2P.java" startline="1" endline="17" pcid="51064">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();

        int sum = A + B;
        int diff = A - B;
        int product = A * B;

        int max = Math.max(sum, Math.max(diff, product));
        System.out.println(max);
    }
}

</source>
</class>

<class classid="287" nclones="2" nlines="16" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02945_4P.java" startline="1" endline="21" pcid="42178">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();

        int[] results = {A + B, A - B, A * B};
        int max = results[0];

        for (int i = 1; i < results.length; i++) {
            if (results[i] > max) {
                max = results[i];
            }
        }

        System.out.println(max);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p02945_0P.java" startline="1" endline="19" pcid="64703">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();

        int[] results = {A + B, A - B, A * B};
        int max = results[0];
        for (int i = 1; i < results.length; i++) {
            if (results[i] > max) {
                max = results[i];
            }
        }
        System.out.println(max);
    }
}

</source>
</class>

<class classid="288" nclones="3" nlines="27" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02952_2P.java" startline="1" endline="32" pcid="42205">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();

        String nStr = String.valueOf(N);
        int digits = nStr.length();

        int count = 0;

        for (int d = 1; d < digits; d += 2) {
            if (d == 1) {
                count += 9;
            } else {
                count += 9 * (int)Math.pow(10, d - 1);
            }
        }

        if (digits % 2 == 1) {
            if (digits == 1) {
                count += N;
            } else {
                count += N - (int)Math.pow(10, digits - 1) + 1;
            }
        }

        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02952_0P.java" startline="1" endline="32" pcid="65548">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();

        String nStr = String.valueOf(N);
        int digits = nStr.length();

        int count = 0;

        for (int d = 1; d < digits; d += 2) {
            if (d == 1) {
                count += 9;
            } else {
                count += 9 * (int)Math.pow(10, d - 1);
            }
        }

        if (digits % 2 == 1) {
            if (digits == 1) {
                count += N;
            } else {
                count += N - (int)Math.pow(10, digits - 1) + 1;
            }
        }

        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02952_3P.java" startline="1" endline="32" pcid="42206">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();

        String nStr = String.valueOf(N);
        int digits = nStr.length();

        int count = 0;

        for (int d = 1; d < digits; d += 2) {
            if (d == 1) {
                count += 9;
            } else {
                count += 9 * (int)Math.pow(10, d - 1);
            }
        }

        if (digits % 2 == 1) {
            if (digits == 1) {
                count += N;
            } else {
                count += N - (int)Math.pow(10, digits - 1) + 1;
            }
        }

        System.out.println(count);
    }
}

</source>
</class>

<class classid="289" nclones="2" nlines="10" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02969_4P.java" startline="1" endline="12" pcid="42262">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int r = sc.nextInt();
        int area = 3 * r * r;
        System.out.println(area);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02969_3P.java" startline="1" endline="14" pcid="65552">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int r = sc.nextInt();

        int area = 3 * r * r;

        System.out.println(area);
        sc.close();
    }
}

</source>
</class>

<class classid="290" nclones="2" nlines="12" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02981_4P.java" startline="1" endline="16" pcid="42300">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int A = sc.nextInt();
        int B = sc.nextInt();

        int trainCost = N * A;
        int taxiCost = B;

        System.out.println(Math.min(trainCost, taxiCost));
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02981_2P.java" startline="1" endline="16" pcid="65554">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int A = sc.nextInt();
        int B = sc.nextInt();

        int trainCost = N * A;
        int taxiCost = B;

        System.out.println(Math.min(trainCost, taxiCost));
    }
}

</source>
</class>

<class classid="291" nclones="5" nlines="20" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02988_0P.java" startline="1" endline="27" pcid="42328">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] p = new int[n];

        for (int i = 0; i < n; i++) {
            p[i] = sc.nextInt();
        }

        int count = 0;

        for (int i = 1; i < n - 1; i++) {
            int[] three = {p[i-1], p[i], p[i+1]};
            Arrays.sort(three);

            if (p[i] == three[1]) {
                count++;
            }
        }

        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02988_1P.java" startline="1" endline="25" pcid="65557">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] p = new int[n];

        for (int i = 0; i < n; i++) {
            p[i] = sc.nextInt();
        }

        int count = 0;
        for (int i = 1; i < n - 1; i++) {
            int[] three = {p[i-1], p[i], p[i+1]};
            Arrays.sort(three);
            if (p[i] == three[1]) {
                count++;
            }
        }

        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02988_4P.java" startline="1" endline="26" pcid="65558">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] p = new int[n];

        for (int i = 0; i < n; i++) {
            p[i] = sc.nextInt();
        }

        int count = 0;
        for (int i = 1; i < n - 1; i++) {
            int[] three = {p[i-1], p[i], p[i+1]};
            Arrays.sort(three);

            if (p[i] == three[1]) {
                count++;
            }
        }

        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02988_3P.java" startline="1" endline="26" pcid="42329">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] p = new int[n];

        for (int i = 0; i < n; i++) {
            p[i] = sc.nextInt();
        }

        int count = 0;
        for (int i = 1; i < n - 1; i++) {
            int[] three = {p[i-1], p[i], p[i+1]};
            Arrays.sort(three);

            if (p[i] == three[1]) {
                count++;
            }
        }

        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02988_2P.java" startline="1" endline="26" pcid="42334">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] p = new int[n];

        for (int i = 0; i < n; i++) {
            p[i] = sc.nextInt();
        }

        int count = 0;
        for (int i = 1; i < n - 1; i++) {
            int[] three = {p[i-1], p[i], p[i+1]};
            Arrays.sort(three);

            if (p[i] == three[1]) {
                count++;
            }
        }

        System.out.println(count);
    }
}

</source>
</class>

<class classid="292" nclones="3" nlines="14" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02989_1P.java" startline="1" endline="19" pcid="42331">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] d = new int[n];

        for (int i = 0; i < n; i++) {
            d[i] = sc.nextInt();
        }

        Arrays.sort(d);

        int result = d[n/2] - d[n/2 - 1];
        System.out.println(result);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02989_2P.java" startline="1" endline="19" pcid="65559">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] d = new int[n];

        for (int i = 0; i < n; i++) {
            d[i] = sc.nextInt();
        }

        Arrays.sort(d);

        int result = d[n/2] - d[n/2 - 1];
        System.out.println(result);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02989_4P.java" startline="1" endline="19" pcid="65560">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] d = new int[n];

        for (int i = 0; i < n; i++) {
            d[i] = sc.nextInt();
        }

        Arrays.sort(d);

        int result = d[n/2] - d[n/2 - 1];
        System.out.println(result);
    }
}

</source>
</class>

<class classid="293" nclones="5" nlines="22" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02996_0P.java" startline="1" endline="28" pcid="42358">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        int[][] jobs = new int[n][2];
        for (int i = 0; i < n; i++) {
            jobs[i][0] = sc.nextInt();
            jobs[i][1] = sc.nextInt();
        }

        Arrays.sort(jobs, (a, b) -> Integer.compare(a[1], b[1]));

        long currentTime = 0;
        for (int i = 0; i < n; i++) {
            currentTime += jobs[i][0];
            if (currentTime > jobs[i][1]) {
                System.out.println("No");
                return;
            }
        }

        System.out.println("Yes");
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02996_2P.java" startline="1" endline="28" pcid="65563">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        int[][] jobs = new int[n][2];
        for (int i = 0; i < n; i++) {
            jobs[i][0] = sc.nextInt();
            jobs[i][1] = sc.nextInt();
        }

        Arrays.sort(jobs, (a, b) -> Integer.compare(a[1], b[1]));

        long currentTime = 0;
        for (int i = 0; i < n; i++) {
            currentTime += jobs[i][0];
            if (currentTime > jobs[i][1]) {
                System.out.println("No");
                return;
            }
        }

        System.out.println("Yes");
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02996_3P.java" startline="1" endline="28" pcid="42364">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        int[][] jobs = new int[n][2];
        for (int i = 0; i < n; i++) {
            jobs[i][0] = sc.nextInt();
            jobs[i][1] = sc.nextInt();
        }

        Arrays.sort(jobs, (a, b) -> Integer.compare(a[1], b[1]));

        long currentTime = 0;
        for (int i = 0; i < n; i++) {
            currentTime += jobs[i][0];
            if (currentTime > jobs[i][1]) {
                System.out.println("No");
                return;
            }
        }

        System.out.println("Yes");
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02996_1P.java" startline="1" endline="28" pcid="42363">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        int[][] jobs = new int[n][2];
        for (int i = 0; i < n; i++) {
            jobs[i][0] = sc.nextInt();
            jobs[i][1] = sc.nextInt();
        }

        Arrays.sort(jobs, (a, b) -> Integer.compare(a[1], b[1]));

        long currentTime = 0;
        for (int i = 0; i < n; i++) {
            currentTime += jobs[i][0];
            if (currentTime > jobs[i][1]) {
                System.out.println("No");
                return;
            }
        }

        System.out.println("Yes");
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p02996_4P.java" startline="1" endline="28" pcid="42365">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        int[][] jobs = new int[n][2];
        for (int i = 0; i < n; i++) {
            jobs[i][0] = sc.nextInt();
            jobs[i][1] = sc.nextInt();
        }

        Arrays.sort(jobs, (a, b) -> Integer.compare(a[1], b[1]));

        long currentTime = 0;
        for (int i = 0; i < n; i++) {
            currentTime += jobs[i][0];
            if (currentTime > jobs[i][1]) {
                System.out.println("No");
                return;
            }
        }

        System.out.println("Yes");
    }
}

</source>
</class>

<class classid="294" nclones="2" nlines="28" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p02997_0P.java" startline="1" endline="37" pcid="42366">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();

        int maxK = (N - 1) * (N - 2) / 2;

        if (K > maxK) {
            System.out.println(-1);
            return;
        }

        List<int[]> edges = new ArrayList<>();

        for (int i = 2; i <= N; i++) {
            edges.add(new int[]{1, i});
        }

        int currentK = maxK;

        for (int i = 2; i <= N && currentK > K; i++) {
            for (int j = i + 1; j <= N && currentK > K; j++) {
                edges.add(new int[]{i, j});
                currentK--;
            }
        }

        System.out.println(edges.size());
        for (int[] edge : edges) {
            System.out.println(edge[0] + " " + edge[1]);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02997_1P.java" startline="1" endline="37" pcid="65564">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();

        int maxK = (N - 1) * (N - 2) / 2;

        if (K > maxK) {
            System.out.println(-1);
            return;
        }

        List<int[]> edges = new ArrayList<>();

        for (int i = 2; i <= N; i++) {
            edges.add(new int[]{1, i});
        }

        int currentK = maxK;

        for (int i = 2; i <= N && currentK > K; i++) {
            for (int j = i + 1; j <= N && currentK > K; j++) {
                edges.add(new int[]{i, j});
                currentK--;
            }
        }

        System.out.println(edges.size());
        for (int[] edge : edges) {
            System.out.println(edge[0] + " " + edge[1]);
        }
    }
}

</source>
</class>

<class classid="295" nclones="2" nlines="33" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03030_4P.java" startline="1" endline="40" pcid="42477">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        List<Restaurant> restaurants = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            String city = sc.next();
            int score = sc.nextInt();
            restaurants.add(new Restaurant(i + 1, city, score));
        }

        restaurants.sort((a, b) -> {
            int cityCompare = a.city.compareTo(b.city);
            if (cityCompare != 0) {
                return cityCompare;
            }
            return Integer.compare(b.score, a.score);
        });

        for (Restaurant r : restaurants) {
            System.out.println(r.id);
        }
    }

    static class Restaurant {
        int id;
        String city;
        int score;

        Restaurant(int id, String city, int score) {
            this.id = id;
            this.city = city;
            this.score = score;
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03030_1P.java" startline="1" endline="40" pcid="65572">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        List<Restaurant> restaurants = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            String city = sc.next();
            int score = sc.nextInt();
            restaurants.add(new Restaurant(i + 1, city, score));
        }

        restaurants.sort((a, b) -> {
            int cityCompare = a.city.compareTo(b.city);
            if (cityCompare != 0) {
                return cityCompare;
            }
            return Integer.compare(b.score, a.score);
        });

        for (Restaurant r : restaurants) {
            System.out.println(r.id);
        }
    }

    static class Restaurant {
        int id;
        String city;
        int score;

        Restaurant(int id, String city, int score) {
            this.id = id;
            this.city = city;
            this.score = score;
        }
    }
}

</source>
</class>

<class classid="296" nclones="2" nlines="14" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03036_0P.java" startline="1" endline="18" pcid="42503">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int r = sc.nextInt();
        int D = sc.nextInt();
        long x = sc.nextLong();

        for (int i = 0; i < 10; i++) {
            x = r * x - D;
            System.out.println(x);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03036_3P.java" startline="1" endline="18" pcid="65577">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int r = sc.nextInt();
        int D = sc.nextInt();
        long x = sc.nextLong();

        for (int i = 0; i < 10; i++) {
            x = r * x - D;
            System.out.println(x);
        }

        sc.close();
    }
}

</source>
</class>

<class classid="297" nclones="3" nlines="19" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03041_1P.java" startline="1" endline="22" pcid="42525">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        String S = sc.next();

        StringBuilder result = new StringBuilder();
        for (int i = 0; i < N; i++) {
            if (i == K - 1) {
                result.append(Character.toLowerCase(S.charAt(i)));
            } else {
                result.append(S.charAt(i));
            }
        }

        System.out.println(result.toString());
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03041_3P.java" startline="1" endline="22" pcid="65579">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        String S = sc.next();

        StringBuilder result = new StringBuilder();
        for (int i = 0; i < N; i++) {
            if (i == K - 1) {
                result.append(Character.toLowerCase(S.charAt(i)));
            } else {
                result.append(S.charAt(i));
            }
        }

        System.out.println(result.toString());
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03041_4P.java" startline="1" endline="22" pcid="42530">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        String S = sc.next();

        StringBuilder result = new StringBuilder();
        for (int i = 0; i < N; i++) {
            if (i == K - 1) {
                result.append(Character.toLowerCase(S.charAt(i)));
            } else {
                result.append(S.charAt(i));
            }
        }

        System.out.println(result.toString());
    }
}

</source>
</class>

<class classid="298" nclones="5" nlines="20" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03048_0P.java" startline="1" endline="25" pcid="42557">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int R = sc.nextInt();
        int G = sc.nextInt();
        int B = sc.nextInt();
        int N = sc.nextInt();

        int count = 0;

        for (int r = 0; r * R <= N; r++) {
            for (int g = 0; r * R + g * G <= N; g++) {
                int remaining = N - r * R - g * G;
                if (remaining >= 0 && remaining % B == 0) {
                    count++;
                }
            }
        }

        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03048_3P.java" startline="1" endline="25" pcid="65582">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int R = sc.nextInt();
        int G = sc.nextInt();
        int B = sc.nextInt();
        int N = sc.nextInt();

        int count = 0;

        for (int r = 0; r * R <= N; r++) {
            for (int g = 0; r * R + g * G <= N; g++) {
                int remaining = N - r * R - g * G;
                if (remaining >= 0 && remaining % B == 0) {
                    count++;
                }
            }
        }

        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03048_2P.java" startline="1" endline="25" pcid="42560">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int R = sc.nextInt();
        int G = sc.nextInt();
        int B = sc.nextInt();
        int N = sc.nextInt();

        int count = 0;

        for (int r = 0; r * R <= N; r++) {
            for (int g = 0; r * R + g * G <= N; g++) {
                int remaining = N - r * R - g * G;
                if (remaining >= 0 && remaining % B == 0) {
                    count++;
                }
            }
        }

        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03048_4P.java" startline="1" endline="25" pcid="42559">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int R = sc.nextInt();
        int G = sc.nextInt();
        int B = sc.nextInt();
        int N = sc.nextInt();

        int count = 0;

        for (int r = 0; r * R <= N; r++) {
            for (int g = 0; r * R + g * G <= N; g++) {
                int remaining = N - r * R - g * G;
                if (remaining >= 0 && remaining % B == 0) {
                    count++;
                }
            }
        }

        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03048_1P.java" startline="1" endline="25" pcid="42558">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int R = sc.nextInt();
        int G = sc.nextInt();
        int B = sc.nextInt();
        int N = sc.nextInt();

        int count = 0;

        for (int r = 0; r * R <= N; r++) {
            for (int g = 0; r * R + g * G <= N; g++) {
                int remaining = N - r * R - g * G;
                if (remaining >= 0 && remaining % B == 0) {
                    count++;
                }
            }
        }

        System.out.println(count);
    }
}

</source>
</class>

<class classid="299" nclones="3" nlines="13" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03059_2P.java" startline="1" endline="18" pcid="42585">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int T = sc.nextInt();

        int productions = T / A;

        int totalBiscuits = productions * B;

        System.out.println(totalBiscuits);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03059_1P.java" startline="1" endline="18" pcid="65584">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int T = sc.nextInt();

        int productions = T / A;

        int totalBiscuits = productions * B;

        System.out.println(totalBiscuits);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03059_4P.java" startline="1" endline="19" pcid="42586">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int T = sc.nextInt();

        int productions = T / A;

        int totalBiscuits = productions * B;

        System.out.println(totalBiscuits);

        sc.close();
    }
}

</source>
</class>

<class classid="300" nclones="4" nlines="23" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03075_1P.java" startline="1" endline="29" pcid="42638">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int a = sc.nextInt();
        int b = sc.nextInt();
        int c = sc.nextInt();
        int d = sc.nextInt();
        int e = sc.nextInt();
        int k = sc.nextInt();

        int[] antennas = {a, b, c, d, e};

        for (int i = 0; i < 5; i++) {
            for (int j = i + 1; j < 5; j++) {
                int distance = antennas[j] - antennas[i];
                if (distance > k) {
                    System.out.println(":(");
                    return;
                }
            }
        }

        System.out.println("Yay!");
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03075_2P.java" startline="1" endline="29" pcid="65592">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int a = sc.nextInt();
        int b = sc.nextInt();
        int c = sc.nextInt();
        int d = sc.nextInt();
        int e = sc.nextInt();
        int k = sc.nextInt();

        int[] antennas = {a, b, c, d, e};

        for (int i = 0; i < 5; i++) {
            for (int j = i + 1; j < 5; j++) {
                int distance = antennas[j] - antennas[i];
                if (distance > k) {
                    System.out.println(":(");
                    return;
                }
            }
        }

        System.out.println("Yay!");
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03075_3P.java" startline="1" endline="29" pcid="42639">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int a = sc.nextInt();
        int b = sc.nextInt();
        int c = sc.nextInt();
        int d = sc.nextInt();
        int e = sc.nextInt();
        int k = sc.nextInt();

        int[] antennas = {a, b, c, d, e};

        for (int i = 0; i < 5; i++) {
            for (int j = i + 1; j < 5; j++) {
                int distance = antennas[j] - antennas[i];
                if (distance > k) {
                    System.out.println(":(");
                    return;
                }
            }
        }

        System.out.println("Yay!");
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03075_4P.java" startline="1" endline="29" pcid="42640">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int a = sc.nextInt();
        int b = sc.nextInt();
        int c = sc.nextInt();
        int d = sc.nextInt();
        int e = sc.nextInt();
        int k = sc.nextInt();

        int[] antennas = {a, b, c, d, e};

        for (int i = 0; i < 5; i++) {
            for (int j = i + 1; j < 5; j++) {
                int distance = antennas[j] - antennas[i];
                if (distance > k) {
                    System.out.println(":(");
                    return;
                }
            }
        }

        System.out.println("Yay!");
    }
}

</source>
</class>

<class classid="301" nclones="2" nlines="64" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03078_3P.java" startline="1" endline="75" pcid="42652">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int X = sc.nextInt();
        int Y = sc.nextInt();
        int Z = sc.nextInt();
        int K = sc.nextInt();

        long[] A = new long[X];
        long[] B = new long[Y];
        long[] C = new long[Z];

        for (int i = 0; i < X; i++) {
            A[i] = sc.nextLong();
        }
        for (int i = 0; i < Y; i++) {
            B[i] = sc.nextLong();
        }
        for (int i = 0; i < Z; i++) {
            C[i] = sc.nextLong();
        }

        Arrays.sort(A);
        Arrays.sort(B);
        Arrays.sort(C);
        for (int i = 0; i < X / 2; i++) {
            long temp = A[i];
            A[i] = A[X - 1 - i];
            A[X - 1 - i] = temp;
        }
        for (int i = 0; i < Y / 2; i++) {
            long temp = B[i];
            B[i] = B[Y - 1 - i];
            B[Y - 1 - i] = temp;
        }
        for (int i = 0; i < Z / 2; i++) {
            long temp = C[i];
            C[i] = C[Z - 1 - i];
            C[Z - 1 - i] = temp;
        }

        PriorityQueue<long[]> pq = new PriorityQueue<>((a, b) -> Long.compare(b[0], a[0]));
        Set<String> visited = new HashSet<>();

        pq.offer(new long[]{A[0] + B[0] + C[0], 0, 0, 0});
        visited.add("0,0,0");

        for (int count = 0; count < K; count++) {
            long[] current = pq.poll();
            long sum = current[0];
            int i = (int)current[1];
            int j = (int)current[2];
            int k = (int)current[3];

            System.out.println(sum);

            if (i + 1 < X && !visited.contains((i + 1) + "," + j + "," + k)) {
                pq.offer(new long[]{A[i + 1] + B[j] + C[k], i + 1, j, k});
                visited.add((i + 1) + "," + j + "," + k);
            }
            if (j + 1 < Y && !visited.contains(i + "," + (j + 1) + "," + k)) {
                pq.offer(new long[]{A[i] + B[j + 1] + C[k], i, j + 1, k});
                visited.add(i + "," + (j + 1) + "," + k);
            }
            if (k + 1 < Z && !visited.contains(i + "," + j + "," + (k + 1))) {
                pq.offer(new long[]{A[i] + B[j] + C[k + 1], i, j, k + 1});
                visited.add(i + "," + j + "," + (k + 1));
            }
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03078_2P.java" startline="1" endline="75" pcid="65594">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int X = sc.nextInt();
        int Y = sc.nextInt();
        int Z = sc.nextInt();
        int K = sc.nextInt();

        long[] A = new long[X];
        long[] B = new long[Y];
        long[] C = new long[Z];

        for (int i = 0; i < X; i++) {
            A[i] = sc.nextLong();
        }
        for (int i = 0; i < Y; i++) {
            B[i] = sc.nextLong();
        }
        for (int i = 0; i < Z; i++) {
            C[i] = sc.nextLong();
        }

        Arrays.sort(A);
        Arrays.sort(B);
        Arrays.sort(C);
        for (int i = 0; i < X / 2; i++) {
            long temp = A[i];
            A[i] = A[X - 1 - i];
            A[X - 1 - i] = temp;
        }
        for (int i = 0; i < Y / 2; i++) {
            long temp = B[i];
            B[i] = B[Y - 1 - i];
            B[Y - 1 - i] = temp;
        }
        for (int i = 0; i < Z / 2; i++) {
            long temp = C[i];
            C[i] = C[Z - 1 - i];
            C[Z - 1 - i] = temp;
        }

        PriorityQueue<long[]> pq = new PriorityQueue<>((a, b) -> Long.compare(b[0], a[0]));
        Set<String> visited = new HashSet<>();

        pq.offer(new long[]{A[0] + B[0] + C[0], 0, 0, 0});
        visited.add("0,0,0");

        for (int count = 0; count < K; count++) {
            long[] current = pq.poll();
            long sum = current[0];
            int i = (int)current[1];
            int j = (int)current[2];
            int k = (int)current[3];

            System.out.println(sum);

            if (i + 1 < X && !visited.contains((i + 1) + "," + j + "," + k)) {
                pq.offer(new long[]{A[i + 1] + B[j] + C[k], i + 1, j, k});
                visited.add((i + 1) + "," + j + "," + k);
            }
            if (j + 1 < Y && !visited.contains(i + "," + (j + 1) + "," + k)) {
                pq.offer(new long[]{A[i] + B[j + 1] + C[k], i, j + 1, k});
                visited.add(i + "," + (j + 1) + "," + k);
            }
            if (k + 1 < Z && !visited.contains(i + "," + j + "," + (k + 1))) {
                pq.offer(new long[]{A[i] + B[j] + C[k + 1], i, j, k + 1});
                visited.add(i + "," + j + "," + (k + 1));
            }
        }
    }
}

</source>
</class>

<class classid="302" nclones="3" nlines="11" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03080_2P.java" startline="1" endline="18" pcid="42658">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String s = sc.next();

        long redCount = s.chars()
                         .filter(c -> c == 'R')
                         .count();

        System.out.println(redCount > n / 2.0 ? "Yes" : "No");

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03080_0P.java" startline="1" endline="18" pcid="65596">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String s = sc.next();

        long redCount = s.chars()
                        .filter(c -> c == 'R')
                        .count();

        System.out.println(redCount > n / 2.0 ? "Yes" : "No");

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03080_3P.java" startline="1" endline="18" pcid="65597">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String s = sc.next();

        long redCount = s.chars()
                        .filter(c -> c == 'R')
                        .count();

        System.out.println(redCount > n / 2.0 ? "Yes" : "No");

        sc.close();
    }
}

</source>
</class>

<class classid="303" nclones="2" nlines="14" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03101_3P.java" startline="1" endline="20" pcid="42713">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int H = sc.nextInt();
        int W = sc.nextInt();
        int h = sc.nextInt();
        int w = sc.nextInt();

        int total = H * W;

        int painted = h * W + w * H - h * w;

        int remaining = total - painted;

        System.out.println(remaining);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p03101_3P.java" startline="1" endline="18" pcid="66463">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int H = sc.nextInt();
        int W = sc.nextInt();
        int h = sc.nextInt();
        int w = sc.nextInt();

        int total = H * W;
        int painted = h * W + w * H - h * w;
        int remaining = total - painted;

        System.out.println(remaining);
    }
}

</source>
</class>

<class classid="304" nclones="6" nlines="26" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03106_3P.java" startline="1" endline="33" pcid="42734">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int K = sc.nextInt();

        int gcd = gcd(A, B);

        List<Integer> divisors = new ArrayList<>();
        for (int i = 1; i <= gcd; i++) {
            if (gcd % i == 0) {
                divisors.add(i);
            }
        }

        Collections.sort(divisors, Collections.reverseOrder());

        System.out.println(divisors.get(K - 1));
    }

    private static int gcd(int a, int b) {
        while (b != 0) {
            int temp = b;
            b = a % b;
            a = temp;
        }
        return a;
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03106_2P.java" startline="1" endline="33" pcid="65605">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int K = sc.nextInt();

        int gcd = gcd(A, B);

        List<Integer> divisors = new ArrayList<>();
        for (int i = 1; i <= gcd; i++) {
            if (gcd % i == 0) {
                divisors.add(i);
            }
        }

        Collections.sort(divisors, Collections.reverseOrder());

        System.out.println(divisors.get(K - 1));
    }

    private static int gcd(int a, int b) {
        while (b != 0) {
            int temp = b;
            b = a % b;
            a = temp;
        }
        return a;
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p03106_2P.java" startline="1" endline="33" pcid="50249">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int K = sc.nextInt();

        int gcd = gcd(A, B);

        List<Integer> divisors = new ArrayList<>();
        for (int i = 1; i <= gcd; i++) {
            if (gcd % i == 0) {
                divisors.add(i);
            }
        }

        Collections.sort(divisors, Collections.reverseOrder());

        System.out.println(divisors.get(K - 1));
    }

    private static int gcd(int a, int b) {
        while (b != 0) {
            int temp = b;
            b = a % b;
            a = temp;
        }
        return a;
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03106_4P.java" startline="1" endline="33" pcid="42737">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int K = sc.nextInt();

        int gcd = gcd(A, B);

        List<Integer> divisors = new ArrayList<>();
        for (int i = 1; i <= gcd; i++) {
            if (gcd % i == 0) {
                divisors.add(i);
            }
        }

        Collections.sort(divisors, Collections.reverseOrder());

        System.out.println(divisors.get(K - 1));
    }

    private static int gcd(int a, int b) {
        while (b != 0) {
            int temp = b;
            b = a % b;
            a = temp;
        }
        return a;
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03106_1P.java" startline="1" endline="33" pcid="42736">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int K = sc.nextInt();

        int gcd = gcd(A, B);

        List<Integer> divisors = new ArrayList<>();
        for (int i = 1; i <= gcd; i++) {
            if (gcd % i == 0) {
                divisors.add(i);
            }
        }

        Collections.sort(divisors, Collections.reverseOrder());

        System.out.println(divisors.get(K - 1));
    }

    private static int gcd(int a, int b) {
        while (b != 0) {
            int temp = b;
            b = a % b;
            a = temp;
        }
        return a;
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03106_0P.java" startline="1" endline="33" pcid="42735">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int K = sc.nextInt();

        int gcd = gcd(A, B);

        List<Integer> divisors = new ArrayList<>();
        for (int i = 1; i <= gcd; i++) {
            if (gcd % i == 0) {
                divisors.add(i);
            }
        }

        Collections.sort(divisors, Collections.reverseOrder());

        System.out.println(divisors.get(K - 1));
    }

    private static int gcd(int a, int b) {
        while (b != 0) {
            int temp = b;
            b = a % b;
            a = temp;
        }
        return a;
    }
}

</source>
</class>

<class classid="305" nclones="7" nlines="15" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03125_1P.java" startline="1" endline="18" pcid="42765">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();

        if (B % A == 0) {
            System.out.println(A + B);
        } else {
            System.out.println(B - A);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03125_3P.java" startline="1" endline="18" pcid="65610">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();

        if (B % A == 0) {
            System.out.println(A + B);
        } else {
            System.out.println(B - A);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03125_3P.java" startline="1" endline="17" pcid="67306">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();

        if (B % A == 0) {
            System.out.println(A + B);
        } else {
            System.out.println(B - A);
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03125_4P.java" startline="1" endline="18" pcid="57827">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();

        if (B % A == 0) {
            System.out.println(A + B);
        } else {
            System.out.println(B - A);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03125_4P.java" startline="1" endline="18" pcid="42766">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();

        if (B % A == 0) {
            System.out.println(A + B);
        } else {
            System.out.println(B - A);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03125_2P.java" startline="1" endline="18" pcid="42767">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();

        if (B % A == 0) {
            System.out.println(A + B);
        } else {
            System.out.println(B - A);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03125_2P.java" startline="1" endline="17" pcid="57825">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();

        if (B % A == 0) {
            System.out.println(A + B);
        } else {
            System.out.println(B - A);
        }
        sc.close();
    }
}

</source>
</class>

<class classid="306" nclones="2" nlines="24" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03126_4P.java" startline="1" endline="31" pcid="42770">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        int M = sc.nextInt();

        int[] foodCount = new int[M + 1];

        for (int i = 0; i < N; i++) {
            int K = sc.nextInt();
            for (int j = 0; j < K; j++) {
                int food = sc.nextInt();
                foodCount[food]++;
            }
        }

        int result = 0;
        for (int i = 1; i <= M; i++) {
            if (foodCount[i] == N) {
                result++;
            }
        }

        System.out.println(result);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03126_3P.java" startline="1" endline="31" pcid="65611">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        int M = sc.nextInt();

        int[] foodCount = new int[M + 1];

        for (int i = 0; i < N; i++) {
            int K = sc.nextInt();
            for (int j = 0; j < K; j++) {
                int food = sc.nextInt();
                foodCount[food]++;
            }
        }

        int result = 0;
        for (int i = 1; i <= M; i++) {
            if (foodCount[i] == N) {
                result++;
            }
        }

        System.out.println(result);
        sc.close();
    }
}

</source>
</class>

<class classid="307" nclones="2" nlines="11" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03135_0P.java" startline="1" endline="16" pcid="42799">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int T = sc.nextInt();
        int X = sc.nextInt();

        double timeInWorldA = (double) T / X;

        System.out.println(timeInWorldA);

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03135_3P.java" startline="1" endline="15" pcid="65618">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int T = sc.nextInt();
        int X = sc.nextInt();

        double timeInWorldA = (double) T / X;

        System.out.println(timeInWorldA);
        sc.close();
    }
}

</source>
</class>

<class classid="308" nclones="3" nlines="25" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03136_1P.java" startline="1" endline="33" pcid="42806">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        int[] sides = new int[n];

        for (int i = 0; i < n; i++) {
            sides[i] = sc.nextInt();
        }

        int maxSide = 0;
        int totalSum = 0;

        for (int i = 0; i < n; i++) {
            maxSide = Math.max(maxSide, sides[i]);
            totalSum += sides[i];
        }

        int sumOfOthers = totalSum - maxSide;

        if (maxSide < sumOfOthers) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03136_0P.java" startline="1" endline="33" pcid="65619">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        int[] sides = new int[n];

        for (int i = 0; i < n; i++) {
            sides[i] = sc.nextInt();
        }

        int maxSide = 0;
        int totalSum = 0;

        for (int i = 0; i < n; i++) {
            maxSide = Math.max(maxSide, sides[i]);
            totalSum += sides[i];
        }

        int sumOfOthers = totalSum - maxSide;

        if (maxSide < sumOfOthers) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03136_3P.java" startline="1" endline="33" pcid="42808">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        int[] sides = new int[n];

        for (int i = 0; i < n; i++) {
            sides[i] = sc.nextInt();
        }

        int maxSide = 0;
        int totalSum = 0;

        for (int i = 0; i < n; i++) {
            maxSide = Math.max(maxSide, sides[i]);
            totalSum += sides[i];
        }

        int sumOfOthers = totalSum - maxSide;

        if (maxSide < sumOfOthers) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }

        sc.close();
    }
}

</source>
</class>

<class classid="309" nclones="3" nlines="12" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03139_2P.java" startline="1" endline="16" pcid="42818">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int A = sc.nextInt();
        int B = sc.nextInt();

        int max = Math.min(A, B);
        int min = Math.max(0, A + B - N);

        System.out.println(max + " " + min);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p03139_1P.java" startline="1" endline="16" pcid="66480">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int A = sc.nextInt();
        int B = sc.nextInt();

        int max = Math.min(A, B);
        int min = Math.max(0, A + B - N);

        System.out.println(max + " " + min);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03139_4P.java" startline="1" endline="17" pcid="42820">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int A = sc.nextInt();
        int B = sc.nextInt();

        int max = Math.min(A, B);

        int min = Math.max(0, A + B - N);

        System.out.println(max + " " + min);
    }
}

</source>
</class>

<class classid="310" nclones="3" nlines="13" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03139_1P.java" startline="1" endline="18" pcid="42819">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int A = sc.nextInt();
        int B = sc.nextInt();

        int max = Math.min(A, B);

        int min = Math.max(0, A + B - N);

        System.out.println(max + " " + min);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03139_0P.java" startline="1" endline="17" pcid="65621">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int A = sc.nextInt();
        int B = sc.nextInt();

        int max = Math.min(A, B);
        int min = Math.max(0, A + B - N);

        System.out.println(max + " " + min);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03139_3P.java" startline="1" endline="18" pcid="42823">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int A = sc.nextInt();
        int B = sc.nextInt();

        int max = Math.min(A, B);

        int min = Math.max(0, A + B - N);

        System.out.println(max + " " + min);
        sc.close();
    }
}

</source>
</class>

<class classid="311" nclones="3" nlines="25" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03162_2P.java" startline="1" endline="33" pcid="42908">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        int[][] activities = new int[n][3];
        for (int i = 0; i < n; i++) {
            activities[i][0] = sc.nextInt();
            activities[i][1] = sc.nextInt();
            activities[i][2] = sc.nextInt();
        }

        int[][] dp = new int[n][3];

        dp[0][0] = activities[0][0];
        dp[0][1] = activities[0][1];
        dp[0][2] = activities[0][2];

        for (int i = 1; i < n; i++) {
            dp[i][0] = activities[i][0] + Math.max(dp[i-1][1], dp[i-1][2]);
            dp[i][1] = activities[i][1] + Math.max(dp[i-1][0], dp[i-1][2]);
            dp[i][2] = activities[i][2] + Math.max(dp[i-1][0], dp[i-1][1]);
        }

        int result = Math.max(Math.max(dp[n-1][0], dp[n-1][1]), dp[n-1][2]);
        System.out.println(result);

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03162_3P.java" startline="1" endline="33" pcid="65626">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        int[][] activities = new int[n][3];
        for (int i = 0; i < n; i++) {
            activities[i][0] = sc.nextInt();
            activities[i][1] = sc.nextInt();
            activities[i][2] = sc.nextInt();
        }

        int[][] dp = new int[n][3];

        dp[0][0] = activities[0][0];
        dp[0][1] = activities[0][1];
        dp[0][2] = activities[0][2];

        for (int i = 1; i < n; i++) {
            dp[i][0] = activities[i][0] + Math.max(dp[i-1][1], dp[i-1][2]);
            dp[i][1] = activities[i][1] + Math.max(dp[i-1][0], dp[i-1][2]);
            dp[i][2] = activities[i][2] + Math.max(dp[i-1][0], dp[i-1][1]);
        }

        int result = Math.max(Math.max(dp[n-1][0], dp[n-1][1]), dp[n-1][2]);
        System.out.println(result);

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03162_4P.java" startline="1" endline="33" pcid="42909">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        int[][] activities = new int[n][3];
        for (int i = 0; i < n; i++) {
            activities[i][0] = sc.nextInt();
            activities[i][1] = sc.nextInt();
            activities[i][2] = sc.nextInt();
        }

        int[][] dp = new int[n][3];

        dp[0][0] = activities[0][0];
        dp[0][1] = activities[0][1];
        dp[0][2] = activities[0][2];

        for (int i = 1; i < n; i++) {
            dp[i][0] = activities[i][0] + Math.max(dp[i-1][1], dp[i-1][2]);
            dp[i][1] = activities[i][1] + Math.max(dp[i-1][0], dp[i-1][2]);
            dp[i][2] = activities[i][2] + Math.max(dp[i-1][0], dp[i-1][1]);
        }

        int result = Math.max(Math.max(dp[n-1][0], dp[n-1][1]), dp[n-1][2]);
        System.out.println(result);

        sc.close();
    }
}

</source>
</class>

<class classid="312" nclones="3" nlines="38" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03164_3P.java" startline="1" endline="49" pcid="42915">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        long W = sc.nextLong();

        int[] w = new int[N];
        int[] v = new int[N];
        int totalValue = 0;

        for (int i = 0; i < N; i++) {
            w[i] = sc.nextInt();
            v[i] = sc.nextInt();
            totalValue += v[i];
        }

        long[][] dp = new long[N + 1][totalValue + 1];

        for (int i = 0; i <= N; i++) {
            Arrays.fill(dp[i], Long.MAX_VALUE);
        }

        for (int i = 0; i <= N; i++) {
            dp[i][0] = 0;
        }

        for (int i = 1; i <= N; i++) {
            for (int j = 0; j <= totalValue; j++) {
                dp[i][j] = dp[i-1][j];

                if (j >= v[i-1] && dp[i-1][j - v[i-1]] != Long.MAX_VALUE) {
                    dp[i][j] = Math.min(dp[i][j], dp[i-1][j - v[i-1]] + w[i-1]);
                }
            }
        }

        int maxValue = 0;
        for (int j = 0; j <= totalValue; j++) {
            if (dp[N][j] <= W) {
                maxValue = j;
            }
        }

        System.out.println(maxValue);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03164_2P.java" startline="1" endline="49" pcid="65627">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        long W = sc.nextLong();

        int[] w = new int[N];
        int[] v = new int[N];
        int totalValue = 0;

        for (int i = 0; i < N; i++) {
            w[i] = sc.nextInt();
            v[i] = sc.nextInt();
            totalValue += v[i];
        }

        long[][] dp = new long[N + 1][totalValue + 1];

        for (int i = 0; i <= N; i++) {
            Arrays.fill(dp[i], Long.MAX_VALUE);
        }

        for (int i = 0; i <= N; i++) {
            dp[i][0] = 0;
        }

        for (int i = 1; i <= N; i++) {
            for (int j = 0; j <= totalValue; j++) {
                dp[i][j] = dp[i-1][j];

                if (j >= v[i-1] && dp[i-1][j - v[i-1]] != Long.MAX_VALUE) {
                    dp[i][j] = Math.min(dp[i][j], dp[i-1][j - v[i-1]] + w[i-1]);
                }
            }
        }

        int maxValue = 0;
        for (int j = 0; j <= totalValue; j++) {
            if (dp[N][j] <= W) {
                maxValue = j;
            }
        }

        System.out.println(maxValue);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03164_0P.java" startline="1" endline="49" pcid="42919">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        long W = sc.nextLong();

        int[] w = new int[N];
        int[] v = new int[N];
        int totalValue = 0;

        for (int i = 0; i < N; i++) {
            w[i] = sc.nextInt();
            v[i] = sc.nextInt();
            totalValue += v[i];
        }

        long[][] dp = new long[N + 1][totalValue + 1];

        for (int i = 0; i <= N; i++) {
            Arrays.fill(dp[i], Long.MAX_VALUE);
        }

        for (int i = 0; i <= N; i++) {
            dp[i][0] = 0;
        }

        for (int i = 1; i <= N; i++) {
            for (int j = 0; j <= totalValue; j++) {
                dp[i][j] = dp[i-1][j];

                if (j >= v[i-1] && dp[i-1][j - v[i-1]] != Long.MAX_VALUE) {
                    dp[i][j] = Math.min(dp[i][j], dp[i-1][j - v[i-1]] + w[i-1]);
                }
            }
        }

        int maxValue = 0;
        for (int j = 0; j <= totalValue; j++) {
            if (dp[N][j] <= W) {
                maxValue = j;
            }
        }

        System.out.println(maxValue);
    }
}

</source>
</class>

<class classid="313" nclones="6" nlines="37" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03165_2P.java" startline="1" endline="42" pcid="42918">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.nextLine();
        String t = sc.nextLine();

        int m = s.length();
        int n = t.length();

        int[][] dp = new int[m + 1][n + 1];

        for (int i = 1; i <= m; i++) {
            for (int j = 1; j <= n; j++) {
                if (s.charAt(i - 1) == t.charAt(j - 1)) {
                    dp[i][j] = dp[i - 1][j - 1] + 1;
                } else {
                    dp[i][j] = Math.max(dp[i - 1][j], dp[i][j - 1]);
                }
            }
        }

        StringBuilder lcs = new StringBuilder();
        int i = m, j = n;

        while (i > 0 && j > 0) {
            if (s.charAt(i - 1) == t.charAt(j - 1)) {
                lcs.append(s.charAt(i - 1));
                i--;
                j--;
            } else if (dp[i - 1][j] > dp[i][j - 1]) {
                i--;
            } else {
                j--;
            }
        }

        System.out.println(lcs.reverse().toString());
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p03165_1P.java" startline="1" endline="41" pcid="66489">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.nextLine();
        String t = sc.nextLine();

        int m = s.length();
        int n = t.length();

        int[][] dp = new int[m + 1][n + 1];

        for (int i = 1; i <= m; i++) {
            for (int j = 1; j <= n; j++) {
                if (s.charAt(i - 1) == t.charAt(j - 1)) {
                    dp[i][j] = dp[i - 1][j - 1] + 1;
                } else {
                    dp[i][j] = Math.max(dp[i - 1][j], dp[i][j - 1]);
                }
            }
        }

        StringBuilder lcs = new StringBuilder();
        int i = m, j = n;
        while (i > 0 && j > 0) {
            if (s.charAt(i - 1) == t.charAt(j - 1)) {
                lcs.append(s.charAt(i - 1));
                i--;
                j--;
            } else if (dp[i - 1][j] > dp[i][j - 1]) {
                i--;
            } else {
                j--;
            }
        }

        System.out.println(lcs.reverse().toString());
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p03165_4P.java" startline="1" endline="41" pcid="50432">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.nextLine();
        String t = sc.nextLine();

        int m = s.length();
        int n = t.length();

        int[][] dp = new int[m + 1][n + 1];

        for (int i = 1; i <= m; i++) {
            for (int j = 1; j <= n; j++) {
                if (s.charAt(i - 1) == t.charAt(j - 1)) {
                    dp[i][j] = dp[i - 1][j - 1] + 1;
                } else {
                    dp[i][j] = Math.max(dp[i - 1][j], dp[i][j - 1]);
                }
            }
        }

        StringBuilder lcs = new StringBuilder();
        int i = m, j = n;
        while (i > 0 && j > 0) {
            if (s.charAt(i - 1) == t.charAt(j - 1)) {
                lcs.append(s.charAt(i - 1));
                i--;
                j--;
            } else if (dp[i - 1][j] > dp[i][j - 1]) {
                i--;
            } else {
                j--;
            }
        }

        System.out.println(lcs.reverse().toString());
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03165_4P.java" startline="1" endline="42" pcid="42920">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.nextLine();
        String t = sc.nextLine();

        int m = s.length();
        int n = t.length();

        int[][] dp = new int[m + 1][n + 1];

        for (int i = 1; i <= m; i++) {
            for (int j = 1; j <= n; j++) {
                if (s.charAt(i - 1) == t.charAt(j - 1)) {
                    dp[i][j] = dp[i - 1][j - 1] + 1;
                } else {
                    dp[i][j] = Math.max(dp[i - 1][j], dp[i][j - 1]);
                }
            }
        }

        StringBuilder lcs = new StringBuilder();
        int i = m, j = n;

        while (i > 0 && j > 0) {
            if (s.charAt(i - 1) == t.charAt(j - 1)) {
                lcs.append(s.charAt(i - 1));
                i--;
                j--;
            } else if (dp[i - 1][j] > dp[i][j - 1]) {
                i--;
            } else {
                j--;
            }
        }

        System.out.println(lcs.reverse().toString());
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03165_1P.java" startline="1" endline="42" pcid="42922">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.nextLine();
        String t = sc.nextLine();

        int m = s.length();
        int n = t.length();

        int[][] dp = new int[m + 1][n + 1];

        for (int i = 1; i <= m; i++) {
            for (int j = 1; j <= n; j++) {
                if (s.charAt(i - 1) == t.charAt(j - 1)) {
                    dp[i][j] = dp[i - 1][j - 1] + 1;
                } else {
                    dp[i][j] = Math.max(dp[i - 1][j], dp[i][j - 1]);
                }
            }
        }

        StringBuilder lcs = new StringBuilder();
        int i = m, j = n;

        while (i > 0 && j > 0) {
            if (s.charAt(i - 1) == t.charAt(j - 1)) {
                lcs.append(s.charAt(i - 1));
                i--;
                j--;
            } else if (dp[i - 1][j] > dp[i][j - 1]) {
                i--;
            } else {
                j--;
            }
        }

        System.out.println(lcs.reverse().toString());
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p03165_2P.java" startline="1" endline="40" pcid="50427">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.nextLine();
        String t = sc.nextLine();
        int m = s.length();
        int n = t.length();

        int[][] dp = new int[m + 1][n + 1];

        for (int i = 1; i <= m; i++) {
            for (int j = 1; j <= n; j++) {
                if (s.charAt(i - 1) == t.charAt(j - 1)) {
                    dp[i][j] = dp[i - 1][j - 1] + 1;
                } else {
                    dp[i][j] = Math.max(dp[i - 1][j], dp[i][j - 1]);
                }
            }
        }

        StringBuilder lcs = new StringBuilder();
        int i = m, j = n;
        while (i > 0 && j > 0) {
            if (s.charAt(i - 1) == t.charAt(j - 1)) {
                lcs.append(s.charAt(i - 1));
                i--;
                j--;
            } else if (dp[i - 1][j] > dp[i][j - 1]) {
                i--;
            } else {
                j--;
            }
        }

        System.out.println(lcs.reverse().toString());
    }
}

</source>
</class>

<class classid="314" nclones="2" nlines="25" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03171_1P.java" startline="1" endline="32" pcid="42948">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        long[] a = new long[n];

        for (int i = 0; i < n; i++) {
            a[i] = sc.nextLong();
        }

        long[][] dp = new long[n][n];

        for (int i = 0; i < n; i++) {
            dp[i][i] = a[i];
        }

        for (int len = 2; len <= n; len++) {
            for (int i = 0; i <= n - len; i++) {
                int j = i + len - 1;
                long takeLeft = a[i] - dp[i + 1][j];
                long takeRight = a[j] - dp[i][j - 1];
                dp[i][j] = Math.max(takeLeft, takeRight);
            }
        }

        System.out.println(dp[0][n - 1]);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03171_3P.java" startline="1" endline="32" pcid="65631">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        long[] a = new long[n];

        for (int i = 0; i < n; i++) {
            a[i] = sc.nextLong();
        }

        long[][] dp = new long[n][n];

        for (int i = 0; i < n; i++) {
            dp[i][i] = a[i];
        }

        for (int len = 2; len <= n; len++) {
            for (int i = 0; i <= n - len; i++) {
                int j = i + len - 1;
                long takeLeft = a[i] - dp[i + 1][j];
                long takeRight = a[j] - dp[i][j - 1];
                dp[i][j] = Math.max(takeLeft, takeRight);
            }
        }

        System.out.println(dp[0][n - 1]);
        sc.close();
    }
}

</source>
</class>

<class classid="315" nclones="6" nlines="19" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03193_0P.java" startline="1" endline="26" pcid="43026">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        int H = sc.nextInt();
        int W = sc.nextInt();

        int count = 0;

        for (int i = 0; i < N; i++) {
            int A = sc.nextInt();
            int B = sc.nextInt();

            if (A >= H && B >= W) {
                count++;
            }
        }

        System.out.println(count);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p03193_4P.java" startline="1" endline="23" pcid="66501">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int H = sc.nextInt();
        int W = sc.nextInt();
        int count = 0;

        for (int i = 0; i < N; i++) {
            int A = sc.nextInt();
            int B = sc.nextInt();
            if (A >= H && B >= W) {
                count++;
            }
        }

        System.out.println(count);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03193_2P.java" startline="1" endline="26" pcid="65636">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        int H = sc.nextInt();
        int W = sc.nextInt();

        int count = 0;

        for (int i = 0; i < N; i++) {
            int A = sc.nextInt();
            int B = sc.nextInt();

            if (A >= H && B >= W) {
                count++;
            }
        }

        System.out.println(count);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p03193_3P.java" startline="1" endline="23" pcid="50538">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int H = sc.nextInt();
        int W = sc.nextInt();
        int count = 0;

        for (int i = 0; i < N; i++) {
            int A = sc.nextInt();
            int B = sc.nextInt();
            if (A >= H && B >= W) {
                count++;
            }
        }

        System.out.println(count);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p03193_1P.java" startline="1" endline="23" pcid="50536">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int H = sc.nextInt();
        int W = sc.nextInt();
        int count = 0;

        for (int i = 0; i < N; i++) {
            int A = sc.nextInt();
            int B = sc.nextInt();
            if (A >= H && B >= W) {
                count++;
            }
        }

        System.out.println(count);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03193_1P.java" startline="1" endline="26" pcid="43033">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        int H = sc.nextInt();
        int W = sc.nextInt();

        int count = 0;

        for (int i = 0; i < N; i++) {
            int A = sc.nextInt();
            int B = sc.nextInt();

            if (A >= H && B >= W) {
                count++;
            }
        }

        System.out.println(count);
        sc.close();
    }
}

</source>
</class>

<class classid="316" nclones="3" nlines="24" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03207_0P.java" startline="1" endline="31" pcid="43074">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        int[] prices = new int[n];

        for (int i = 0; i < n; i++) {
            prices[i] = sc.nextInt();
        }

        int maxPrice = prices[0];
        for (int i = 1; i < n; i++) {
            if (prices[i] > maxPrice) {
                maxPrice = prices[i];
            }
        }

        int total = 0;
        for (int i = 0; i < n; i++) {
            total += prices[i];
        }
        total -= maxPrice / 2;

        System.out.println(total);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03207_2P.java" startline="1" endline="31" pcid="65642">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        int[] prices = new int[n];

        for (int i = 0; i < n; i++) {
            prices[i] = sc.nextInt();
        }

        int maxPrice = prices[0];
        for (int i = 1; i < n; i++) {
            if (prices[i] > maxPrice) {
                maxPrice = prices[i];
            }
        }

        int total = 0;
        for (int i = 0; i < n; i++) {
            total += prices[i];
        }
        total -= maxPrice / 2;

        System.out.println(total);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03207_3P.java" startline="1" endline="31" pcid="43076">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        int[] prices = new int[n];

        for (int i = 0; i < n; i++) {
            prices[i] = sc.nextInt();
        }

        int maxPrice = prices[0];
        for (int i = 1; i < n; i++) {
            if (prices[i] > maxPrice) {
                maxPrice = prices[i];
            }
        }

        int total = 0;
        for (int i = 0; i < n; i++) {
            total += prices[i];
        }
        total -= maxPrice / 2;

        System.out.println(total);
        sc.close();
    }
}

</source>
</class>

<class classid="317" nclones="7" nlines="14" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03210_0P.java" startline="1" endline="17" pcid="43086">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int X = sc.nextInt();

        if (X == 3 || X == 5 || X == 7) {
            System.out.println("YES");
        } else {
            System.out.println("NO");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03210_4P.java" startline="1" endline="16" pcid="67342">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int X = sc.nextInt();

        if (X == 3 || X == 5 || X == 7) {
            System.out.println("YES");
        } else {
            System.out.println("NO");
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03210_4P.java" startline="1" endline="17" pcid="65644">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int X = sc.nextInt();

        if (X == 3 || X == 5 || X == 7) {
            System.out.println("YES");
        } else {
            System.out.println("NO");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03210_2P.java" startline="1" endline="16" pcid="58142">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int X = sc.nextInt();

        if (X == 3 || X == 5 || X == 7) {
            System.out.println("YES");
        } else {
            System.out.println("NO");
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03210_1P.java" startline="1" endline="17" pcid="43088">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int X = sc.nextInt();

        if (X == 3 || X == 5 || X == 7) {
            System.out.println("YES");
        } else {
            System.out.println("NO");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03210_2P.java" startline="1" endline="17" pcid="43089">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int X = sc.nextInt();

        if (X == 3 || X == 5 || X == 7) {
            System.out.println("YES");
        } else {
            System.out.println("NO");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03210_3P.java" startline="1" endline="17" pcid="43090">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int X = sc.nextInt();

        if (X == 3 || X == 5 || X == 7) {
            System.out.println("YES");
        } else {
            System.out.println("NO");
        }

        sc.close();
    }
}

</source>
</class>

<class classid="318" nclones="5" nlines="16" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03238_0P.java" startline="1" endline="20" pcid="43178">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();

        if (N == 1) {
            System.out.println("Hello World");
        } else {
            int A = sc.nextInt();
            int B = sc.nextInt();
            System.out.println(A + B);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03238_1P.java" startline="1" endline="20" pcid="65648">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();

        if (N == 1) {
            System.out.println("Hello World");
        } else {
            int A = sc.nextInt();
            int B = sc.nextInt();
            System.out.println(A + B);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03238_2P.java" startline="1" endline="19" pcid="43179">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();

        if (N == 1) {
            System.out.println("Hello World");
        } else {
            int A = sc.nextInt();
            int B = sc.nextInt();
            System.out.println(A + B);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03238_3P.java" startline="1" endline="20" pcid="43181">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();

        if (N == 1) {
            System.out.println("Hello World");
        } else {
            int A = sc.nextInt();
            int B = sc.nextInt();
            System.out.println(A + B);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03238_4P.java" startline="1" endline="20" pcid="43180">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();

        if (N == 1) {
            System.out.println("Hello World");
        } else {
            int A = sc.nextInt();
            int B = sc.nextInt();
            System.out.println(A + B);
        }

        sc.close();
    }
}

</source>
</class>

<class classid="319" nclones="3" nlines="25" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03239_1P.java" startline="1" endline="32" pcid="43182">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        int T = sc.nextInt();

        int minCost = Integer.MAX_VALUE;
        boolean found = false;

        for (int i = 0; i < N; i++) {
            int cost = sc.nextInt();
            int time = sc.nextInt();

            if (time <= T) {
                found = true;
                minCost = Math.min(minCost, cost);
            }
        }

        if (found) {
            System.out.println(minCost);
        } else {
            System.out.println("TLE");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03239_0P.java" startline="1" endline="32" pcid="65649">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        int T = sc.nextInt();

        int minCost = Integer.MAX_VALUE;
        boolean found = false;

        for (int i = 0; i < N; i++) {
            int cost = sc.nextInt();
            int time = sc.nextInt();

            if (time <= T) {
                found = true;
                minCost = Math.min(minCost, cost);
            }
        }

        if (found) {
            System.out.println(minCost);
        } else {
            System.out.println("TLE");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03239_2P.java" startline="1" endline="31" pcid="65650">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int T = sc.nextInt();

        int minCost = Integer.MAX_VALUE;
        boolean found = false;

        for (int i = 0; i < N; i++) {
            int cost = sc.nextInt();
            int time = sc.nextInt();

            if (time <= T) {
                found = true;
                minCost = Math.min(minCost, cost);
            }
        }

        if (found) {
            System.out.println(minCost);
        } else {
            System.out.println("TLE");
        }

        sc.close();
    }
}

</source>
</class>

<class classid="320" nclones="4" nlines="11" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03264_1P.java" startline="1" endline="16" pcid="43277">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int K = sc.nextInt();

        int evenCount = K / 2;
        int oddCount = (K + 1) / 2;

        System.out.println(evenCount * oddCount);

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03264_4P.java" startline="1" endline="16" pcid="67361">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int K = sc.nextInt();

        int evenCount = K / 2;
        int oddCount = (K + 1) / 2;

        System.out.println(evenCount * oddCount);

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03264_3P.java" startline="1" endline="16" pcid="43278">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int K = sc.nextInt();

        int evenCount = K / 2;
        int oddCount = (K + 1) / 2;

        System.out.println(evenCount * oddCount);

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03264_2P.java" startline="1" endline="15" pcid="58327">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int K = sc.nextInt();

        int evenCount = K / 2;
        int oddCount = (K + 1) / 2;

        System.out.println(evenCount * oddCount);
        sc.close();
    }
}

</source>
</class>

<class classid="321" nclones="8" nlines="11" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03272_1P.java" startline="1" endline="15" pcid="43307">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int i = sc.nextInt();

        int j = N - i + 1;
        System.out.println(j);

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03272_1P.java" startline="1" endline="15" pcid="67367">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int i = sc.nextInt();

        int j = N - i + 1;

        System.out.println(j);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03272_0P.java" startline="1" endline="16" pcid="67366">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int i = sc.nextInt();

        int j = N - i + 1;

        System.out.println(j);

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03272_2P.java" startline="1" endline="15" pcid="43308">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int i = sc.nextInt();

        int j = N - i + 1;
        System.out.println(j);

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03272_4P.java" startline="1" endline="15" pcid="60689">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int i = sc.nextInt();

        int j = N - i + 1;
        System.out.println(j);

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03272_4P.java" startline="1" endline="16" pcid="58352">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int i = sc.nextInt();

        int j = N - i + 1;

        System.out.println(j);

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03272_3P.java" startline="1" endline="15" pcid="60688">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int i = sc.nextInt();

        int j = N - i + 1;
        System.out.println(j);

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03272_3P.java" startline="1" endline="15" pcid="58351">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int i = sc.nextInt();

        int j = N - i + 1;

        System.out.println(j);
        sc.close();
    }
}

</source>
</class>

<class classid="322" nclones="2" nlines="22" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03274_4P.java" startline="1" endline="31" pcid="43316">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();

        int[] x = new int[N];
        for (int i = 0; i < N; i++) {
            x[i] = sc.nextInt();
        }

        int minTime = Integer.MAX_VALUE;

        for (int i = 0; i <= N - K; i++) {
            int left = x[i];
            int right = x[i + K - 1];

            int time1 = Math.abs(left) + Math.abs(right - left);

            int time2 = Math.abs(right) + Math.abs(right - left);

            minTime = Math.min(minTime, Math.min(time1, time2));
        }

        System.out.println(minTime);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03274_1P.java" startline="1" endline="31" pcid="65665">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        int[] x = new int[N];

        for (int i = 0; i < N; i++) {
            x[i] = sc.nextInt();
        }

        int minTime = Integer.MAX_VALUE;

        for (int i = 0; i <= N - K; i++) {
            int left = x[i];
            int right = x[i + K - 1];

            int time1 = Math.abs(left) + Math.abs(right - left);

            int time2 = Math.abs(right) + Math.abs(right - left);

            minTime = Math.min(minTime, Math.min(time1, time2));
        }

        System.out.println(minTime);
        sc.close();
    }
}

</source>
</class>

<class classid="323" nclones="3" nlines="25" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03283_4P.java" startline="1" endline="33" pcid="43347">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        int M = sc.nextInt();
        int Q = sc.nextInt();

        int[][] count = new int[N + 1][N + 1];

        for (int i = 0; i < M; i++) {
            int L = sc.nextInt();
            int R = sc.nextInt();

            for (int p = 1; p <= L; p++) {
                for (int q = R; q <= N; q++) {
                    count[p][q]++;
                }
            }
        }

        for (int i = 0; i < Q; i++) {
            int p = sc.nextInt();
            int q = sc.nextInt();
            System.out.println(count[p][q]);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03283_2P.java" startline="1" endline="33" pcid="65669">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        int M = sc.nextInt();
        int Q = sc.nextInt();

        int[][] count = new int[N + 1][N + 1];

        for (int i = 0; i < M; i++) {
            int L = sc.nextInt();
            int R = sc.nextInt();

            for (int p = 1; p <= L; p++) {
                for (int q = R; q <= N; q++) {
                    count[p][q]++;
                }
            }
        }

        for (int i = 0; i < Q; i++) {
            int p = sc.nextInt();
            int q = sc.nextInt();
            System.out.println(count[p][q]);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03283_3P.java" startline="1" endline="33" pcid="43348">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        int M = sc.nextInt();
        int Q = sc.nextInt();

        int[][] count = new int[N + 1][N + 1];

        for (int i = 0; i < M; i++) {
            int L = sc.nextInt();
            int R = sc.nextInt();

            for (int p = 1; p <= L; p++) {
                for (int q = R; q <= N; q++) {
                    count[p][q]++;
                }
            }
        }

        for (int i = 0; i < Q; i++) {
            int p = sc.nextInt();
            int q = sc.nextInt();
            System.out.println(count[p][q]);
        }

        sc.close();
    }
}

</source>
</class>

<class classid="324" nclones="7" nlines="17" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03288_1P.java" startline="1" endline="19" pcid="43366">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int R = sc.nextInt();

        if (R < 1200) {
            System.out.println("ABC");
        } else if (R < 2800) {
            System.out.println("ARC");
        } else {
            System.out.println("AGC");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03288_3P.java" startline="1" endline="19" pcid="67374">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int R = sc.nextInt();

        if (R < 1200) {
            System.out.println("ABC");
        } else if (R < 2800) {
            System.out.println("ARC");
        } else {
            System.out.println("AGC");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03288_0P.java" startline="1" endline="19" pcid="65671">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int R = sc.nextInt();

        if (R < 1200) {
            System.out.println("ABC");
        } else if (R < 2800) {
            System.out.println("ARC");
        } else {
            System.out.println("AGC");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03288_1P.java" startline="1" endline="19" pcid="67373">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int R = sc.nextInt();

        if (R < 1200) {
            System.out.println("ABC");
        } else if (R < 2800) {
            System.out.println("ARC");
        } else {
            System.out.println("AGC");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03288_2P.java" startline="1" endline="18" pcid="58415">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int R = sc.nextInt();

        if (R < 1200) {
            System.out.println("ABC");
        } else if (R < 2800) {
            System.out.println("ARC");
        } else {
            System.out.println("AGC");
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03288_4P.java" startline="1" endline="19" pcid="58414">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int R = sc.nextInt();

        if (R < 1200) {
            System.out.println("ABC");
        } else if (R < 2800) {
            System.out.println("ARC");
        } else {
            System.out.println("AGC");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03288_0P.java" startline="1" endline="18" pcid="58416">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int R = sc.nextInt();

        if (R < 1200) {
            System.out.println("ABC");
        } else if (R < 2800) {
            System.out.println("ARC");
        } else {
            System.out.println("AGC");
        }
        sc.close();
    }
}

</source>
</class>

<class classid="325" nclones="3" nlines="24" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03296_1P.java" startline="1" endline="32" pcid="43401">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];

        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }

        int spells = 0;
        int i = 0;

        while (i < n) {
            int j = i;
            while (j < n && a[j] == a[i]) {
                j++;
            }

            int groupSize = j - i;
            spells += groupSize / 2;

            i = j;
        }

        System.out.println(spells);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03296_0P.java" startline="1" endline="32" pcid="65676">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];

        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }

        int spells = 0;
        int i = 0;

        while (i < n) {
            int j = i;
            while (j < n && a[j] == a[i]) {
                j++;
            }

            int groupSize = j - i;
            spells += groupSize / 2;

            i = j;
        }

        System.out.println(spells);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03296_2P.java" startline="1" endline="32" pcid="43402">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];

        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }

        int spells = 0;
        int i = 0;

        while (i < n) {
            int j = i;
            while (j < n && a[j] == a[i]) {
                j++;
            }

            int groupSize = j - i;
            spells += groupSize / 2;

            i = j;
        }

        System.out.println(spells);
        sc.close();
    }
}

</source>
</class>

<class classid="326" nclones="2" nlines="23" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03308_2P.java" startline="1" endline="31" pcid="43439">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        int[] a = new int[n];

        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }

        int max = a[0];
        int min = a[0];

        for (int i = 1; i < n; i++) {
            if (a[i] > max) {
                max = a[i];
            }
            if (a[i] < min) {
                min = a[i];
            }
        }

        System.out.println(max - min);

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03308_0P.java" startline="1" endline="31" pcid="65682">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        int[] a = new int[n];

        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }

        int max = a[0];
        int min = a[0];

        for (int i = 1; i < n; i++) {
            if (a[i] > max) {
                max = a[i];
            }
            if (a[i] < min) {
                min = a[i];
            }
        }

        System.out.println(max - min);

        sc.close();
    }
}

</source>
</class>

<class classid="327" nclones="3" nlines="19" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03309_4P.java" startline="1" endline="26" pcid="43448">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] b = new int[n];

        for (int i = 0; i < n; i++) {
            int a = sc.nextInt();
            b[i] = a - (i + 1);
        }

        Arrays.sort(b);

        int median = b[(n - 1) / 2];

        long sadness = 0;
        for (int i = 0; i < n; i++) {
            sadness += Math.abs(b[i] - median);
        }

        System.out.println(sadness);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03311_2P.java" startline="1" endline="26" pcid="65684">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] b = new int[n];

        for (int i = 0; i < n; i++) {
            int a = sc.nextInt();
            b[i] = a - (i + 1);
        }

        Arrays.sort(b);

        int median = b[(n - 1) / 2];

        long sadness = 0;
        for (int i = 0; i < n; i++) {
            sadness += Math.abs(b[i] - median);
        }

        System.out.println(sadness);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03311_4P.java" startline="1" endline="26" pcid="43455">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] b = new int[n];

        for (int i = 0; i < n; i++) {
            int a = sc.nextInt();
            b[i] = a - (i + 1);
        }

        Arrays.sort(b);

        int median = b[(n - 1) / 2];

        long sadness = 0;
        for (int i = 0; i < n; i++) {
            sadness += Math.abs(b[i] - median);
        }

        System.out.println(sadness);
    }
}

</source>
</class>

<class classid="328" nclones="5" nlines="30" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03310_1P.java" startline="1" endline="38" pcid="43449">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        long[] a = new long[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextLong();
        }

        long[] prefix = new long[n + 1];
        for (int i = 0; i < n; i++) {
            prefix[i + 1] = prefix[i] + a[i];
        }

        long minDiff = Long.MAX_VALUE;

        for (int i = 1; i < n - 2; i++) {
            for (int j = i + 1; j < n - 1; j++) {
                for (int k = j + 1; k < n; k++) {
                    long p = prefix[i] - prefix[0];
                    long q = prefix[j] - prefix[i];
                    long r = prefix[k] - prefix[j];
                    long s = prefix[n] - prefix[k];

                    long max = Math.max(Math.max(p, q), Math.max(r, s));
                    long min = Math.min(Math.min(p, q), Math.min(r, s));

                    minDiff = Math.min(minDiff, max - min);
                }
            }
        }

        System.out.println(minDiff);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03312_4P.java" startline="1" endline="39" pcid="65685">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        long[] a = new long[n];

        for (int i = 0; i < n; i++) {
            a[i] = sc.nextLong();
        }

        long[] prefix = new long[n + 1];
        for (int i = 0; i < n; i++) {
            prefix[i + 1] = prefix[i] + a[i];
        }

        long minDiff = Long.MAX_VALUE;

        for (int i = 1; i < n - 2; i++) {
            for (int j = i + 1; j < n - 1; j++) {
                for (int k = j + 1; k < n; k++) {
                    long p = prefix[i] - prefix[0];
                    long q = prefix[j] - prefix[i];
                    long r = prefix[k] - prefix[j];
                    long s = prefix[n] - prefix[k];

                    long max = Math.max(Math.max(p, q), Math.max(r, s));
                    long min = Math.min(Math.min(p, q), Math.min(r, s));

                    minDiff = Math.min(minDiff, max - min);
                }
            }
        }

        System.out.println(minDiff);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03310_3P.java" startline="1" endline="39" pcid="43453">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        long[] a = new long[n];

        for (int i = 0; i < n; i++) {
            a[i] = sc.nextLong();
        }

        long[] prefix = new long[n + 1];
        for (int i = 0; i < n; i++) {
            prefix[i + 1] = prefix[i] + a[i];
        }

        long minDiff = Long.MAX_VALUE;

        for (int i = 1; i < n - 2; i++) {
            for (int j = i + 1; j < n - 1; j++) {
                for (int k = j + 1; k < n; k++) {
                    long p = prefix[i] - prefix[0];
                    long q = prefix[j] - prefix[i];
                    long r = prefix[k] - prefix[j];
                    long s = prefix[n] - prefix[k];

                    long max = Math.max(Math.max(p, q), Math.max(r, s));
                    long min = Math.min(Math.min(p, q), Math.min(r, s));

                    minDiff = Math.min(minDiff, max - min);
                }
            }
        }

        System.out.println(minDiff);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03312_3P.java" startline="1" endline="38" pcid="43459">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        long[] a = new long[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextLong();
        }

        long[] prefix = new long[n + 1];
        for (int i = 0; i < n; i++) {
            prefix[i + 1] = prefix[i] + a[i];
        }

        long minDiff = Long.MAX_VALUE;

        for (int i = 1; i < n - 2; i++) {
            for (int j = i + 1; j < n - 1; j++) {
                for (int k = j + 1; k < n; k++) {
                    long p = prefix[i] - prefix[0];
                    long q = prefix[j] - prefix[i];
                    long r = prefix[k] - prefix[j];
                    long s = prefix[n] - prefix[k];

                    long max = Math.max(Math.max(p, q), Math.max(r, s));
                    long min = Math.min(Math.min(p, q), Math.min(r, s));

                    minDiff = Math.min(minDiff, max - min);
                }
            }
        }

        System.out.println(minDiff);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03312_0P.java" startline="1" endline="38" pcid="43461">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        long[] a = new long[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextLong();
        }

        long[] prefix = new long[n + 1];
        for (int i = 0; i < n; i++) {
            prefix[i + 1] = prefix[i] + a[i];
        }

        long minDiff = Long.MAX_VALUE;

        for (int i = 1; i < n - 2; i++) {
            for (int j = i + 1; j < n - 1; j++) {
                for (int k = j + 1; k < n; k++) {
                    long p = prefix[i] - prefix[0];
                    long q = prefix[j] - prefix[i];
                    long r = prefix[k] - prefix[j];
                    long s = prefix[n] - prefix[k];

                    long max = Math.max(Math.max(p, q), Math.max(r, s));
                    long min = Math.min(Math.min(p, q), Math.min(r, s));

                    minDiff = Math.min(minDiff, max - min);
                }
            }
        }

        System.out.println(minDiff);
    }
}

</source>
</class>

<class classid="329" nclones="2" nlines="48" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03326_0P.java" startline="1" endline="60" pcid="43512">
import java.util.*;

public class Main {
    static class Cake {
        long x, y, z;

        Cake(long x, long y, long z) {
            this.x = x;
            this.y = y;
            this.z = z;
        }
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int M = sc.nextInt();

        Cake[] cakes = new Cake[N];
        for (int i = 0; i < N; i++) {
            long x = sc.nextLong();
            long y = sc.nextLong();
            long z = sc.nextLong();
            cakes[i] = new Cake(x, y, z);
        }

        long maxValue = 0;

        for (int mask = 0; mask < 8; mask++) {
            int sx = (mask & 1) == 0 ? 1 : -1;
            int sy = (mask & 2) == 0 ? 1 : -1;
            int sz = (mask & 4) == 0 ? 1 : -1;

            long[] scores = new long[N];
            for (int i = 0; i < N; i++) {
                scores[i] = sx * cakes[i].x + sy * cakes[i].y + sz * cakes[i].z;
            }

            Integer[] indices = new Integer[N];
            for (int i = 0; i < N; i++) {
                indices[i] = i;
            }
            Arrays.sort(indices, (a, b) -> Long.compare(scores[b], scores[a]));

            long totalX = 0, totalY = 0, totalZ = 0;
            for (int i = 0; i < M; i++) {
                int idx = indices[i];
                totalX += cakes[idx].x;
                totalY += cakes[idx].y;
                totalZ += cakes[idx].z;
            }

            long value = Math.abs(totalX) + Math.abs(totalY) + Math.abs(totalZ);
            maxValue = Math.max(maxValue, value);
        }

        System.out.println(maxValue);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03326_3P.java" startline="1" endline="59" pcid="65690">
import java.util.*;

public class Main {
    static class Cake {
        long x, y, z;
        Cake(long x, long y, long z) {
            this.x = x;
            this.y = y;
            this.z = z;
        }
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int M = sc.nextInt();

        Cake[] cakes = new Cake[N];
        for (int i = 0; i < N; i++) {
            long x = sc.nextLong();
            long y = sc.nextLong();
            long z = sc.nextLong();
            cakes[i] = new Cake(x, y, z);
        }

        long maxValue = 0;

        for (int mask = 0; mask < 8; mask++) {
            int sx = (mask & 1) == 0 ? 1 : -1;
            int sy = (mask & 2) == 0 ? 1 : -1;
            int sz = (mask & 4) == 0 ? 1 : -1;

            long[] scores = new long[N];
            for (int i = 0; i < N; i++) {
                scores[i] = sx * cakes[i].x + sy * cakes[i].y + sz * cakes[i].z;
            }

            Integer[] indices = new Integer[N];
            for (int i = 0; i < N; i++) {
                indices[i] = i;
            }
            Arrays.sort(indices, (a, b) -> Long.compare(scores[b], scores[a]));

            long totalX = 0, totalY = 0, totalZ = 0;
            for (int i = 0; i < M; i++) {
                int idx = indices[i];
                totalX += cakes[idx].x;
                totalY += cakes[idx].y;
                totalZ += cakes[idx].z;
            }

            long value = Math.abs(totalX) + Math.abs(totalY) + Math.abs(totalZ);
            maxValue = Math.max(maxValue, value);
        }

        System.out.println(maxValue);
    }
}

</source>
</class>

<class classid="330" nclones="3" nlines="24" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03341_1P.java" startline="1" endline="31" pcid="43563">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        String S = sc.next();

        int[] leftW = new int[N];
        leftW[0] = 0;
        for (int i = 1; i < N; i++) {
            leftW[i] = leftW[i-1] + (S.charAt(i-1) == 'W' ? 1 : 0);
        }

        int[] rightE = new int[N];
        rightE[N-1] = 0;
        for (int i = N-2; i >= 0; i--) {
            rightE[i] = rightE[i+1] + (S.charAt(i+1) == 'E' ? 1 : 0);
        }

        int minChanges = Integer.MAX_VALUE;

        for (int i = 0; i < N; i++) {
            int changes = leftW[i] + rightE[i];
            minChanges = Math.min(minChanges, changes);
        }

        System.out.println(minChanges);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03341_0P.java" startline="1" endline="31" pcid="65699">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        String S = sc.next();

        int[] leftW = new int[N];
        leftW[0] = 0;
        for (int i = 1; i < N; i++) {
            leftW[i] = leftW[i-1] + (S.charAt(i-1) == 'W' ? 1 : 0);
        }

        int[] rightE = new int[N];
        rightE[N-1] = 0;
        for (int i = N-2; i >= 0; i--) {
            rightE[i] = rightE[i+1] + (S.charAt(i+1) == 'E' ? 1 : 0);
        }

        int minChanges = Integer.MAX_VALUE;

        for (int i = 0; i < N; i++) {
            int changes = leftW[i] + rightE[i];
            minChanges = Math.min(minChanges, changes);
        }

        System.out.println(minChanges);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03341_3P.java" startline="1" endline="31" pcid="43565">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        String S = sc.next();

        int[] leftW = new int[N];
        leftW[0] = 0;
        for (int i = 1; i < N; i++) {
            leftW[i] = leftW[i-1] + (S.charAt(i-1) == 'W' ? 1 : 0);
        }

        int[] rightE = new int[N];
        rightE[N-1] = 0;
        for (int i = N-2; i >= 0; i--) {
            rightE[i] = rightE[i+1] + (S.charAt(i+1) == 'E' ? 1 : 0);
        }

        int minChanges = Integer.MAX_VALUE;

        for (int i = 0; i < N; i++) {
            int changes = leftW[i] + rightE[i];
            minChanges = Math.min(minChanges, changes);
        }

        System.out.println(minChanges);
    }
}

</source>
</class>

<class classid="331" nclones="4" nlines="19" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03386_0P.java" startline="1" endline="25" pcid="43718">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long A = sc.nextLong();
        long B = sc.nextLong();
        int K = sc.nextInt();

        Set<Long> result = new TreeSet<>();

        for (int i = 0; i < K && A + i <= B; i++) {
            result.add(A + i);
        }

        for (int i = 0; i < K && B - i >= A; i++) {
            result.add(B - i);
        }

        for (long num : result) {
            System.out.println(num);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03386_2P.java" startline="1" endline="25" pcid="65714">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long A = sc.nextLong();
        long B = sc.nextLong();
        int K = sc.nextInt();

        Set<Long> result = new TreeSet<>();

        for (int i = 0; i < K && A + i <= B; i++) {
            result.add(A + i);
        }

        for (int i = 0; i < K && B - i >= A; i++) {
            result.add(B - i);
        }

        for (long num : result) {
            System.out.println(num);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03386_3P.java" startline="1" endline="25" pcid="43719">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long A = sc.nextLong();
        long B = sc.nextLong();
        int K = sc.nextInt();

        Set<Long> result = new TreeSet<>();

        for (int i = 0; i < K && A + i <= B; i++) {
            result.add(A + i);
        }

        for (int i = 0; i < K && B - i >= A; i++) {
            result.add(B - i);
        }

        for (long num : result) {
            System.out.println(num);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03386_4P.java" startline="1" endline="25" pcid="43721">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long A = sc.nextLong();
        long B = sc.nextLong();
        int K = sc.nextInt();

        Set<Long> result = new TreeSet<>();

        for (int i = 0; i < K && A + i <= B; i++) {
            result.add(A + i);
        }

        for (int i = 0; i < K && B - i >= A; i++) {
            result.add(B - i);
        }

        for (long num : result) {
            System.out.println(num);
        }
    }
}

</source>
</class>

<class classid="332" nclones="2" nlines="17" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03400_0P.java" startline="1" endline="24" pcid="43763">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        int D = sc.nextInt();
        int X = sc.nextInt();

        int totalEaten = 0;

        for (int i = 0; i < N; i++) {
            int A = sc.nextInt();

            int chocolatesEaten = (D - 1) / A + 1;
            totalEaten += chocolatesEaten;
        }

        System.out.println(totalEaten + X);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03400_4P.java" startline="1" endline="24" pcid="65719">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        int D = sc.nextInt();
        int X = sc.nextInt();

        int totalEaten = 0;

        for (int i = 0; i < N; i++) {
            int A = sc.nextInt();
            int chocolatesEaten = (D - 1) / A + 1;
            totalEaten += chocolatesEaten;
        }

        System.out.println(totalEaten + X);

        sc.close();
    }
}

</source>
</class>

<class classid="333" nclones="4" nlines="16" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03407_1P.java" startline="1" endline="19" pcid="43786">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();

        if (A >= C || B >= C || A + B >= C) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03407_2P.java" startline="1" endline="19" pcid="65722">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();

        if (A >= C || B >= C || A + B >= C) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03407_0P.java" startline="1" endline="19" pcid="65721">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();

        if (A >= C || B >= C || A + B >= C) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03407_4P.java" startline="1" endline="19" pcid="43788">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();

        if (A >= C || B >= C || A + B >= C) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }

        sc.close();
    }
}

</source>
</class>

<class classid="334" nclones="5" nlines="16" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03415_0P.java" startline="1" endline="21" pcid="43806">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        String[] grid = new String[3];
        for (int i = 0; i < 3; i++) {
            grid[i] = sc.nextLine();
        }

        StringBuilder result = new StringBuilder();
        for (int i = 0; i < 3; i++) {
            result.append(grid[i].charAt(i));
        }

        System.out.println(result.toString());
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03415_4P.java" startline="1" endline="21" pcid="65724">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        String[] grid = new String[3];
        for (int i = 0; i < 3; i++) {
            grid[i] = sc.nextLine();
        }

        StringBuilder result = new StringBuilder();
        for (int i = 0; i < 3; i++) {
            result.append(grid[i].charAt(i));
        }

        System.out.println(result.toString());
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03415_2P.java" startline="1" endline="21" pcid="43809">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        String[] grid = new String[3];
        for (int i = 0; i < 3; i++) {
            grid[i] = sc.nextLine();
        }

        StringBuilder result = new StringBuilder();
        for (int i = 0; i < 3; i++) {
            result.append(grid[i].charAt(i));
        }

        System.out.println(result.toString());
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03415_1P.java" startline="1" endline="21" pcid="43808">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        String[] grid = new String[3];
        for (int i = 0; i < 3; i++) {
            grid[i] = sc.nextLine();
        }

        StringBuilder result = new StringBuilder();
        for (int i = 0; i < 3; i++) {
            result.append(grid[i].charAt(i));
        }

        System.out.println(result.toString());
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03415_3P.java" startline="1" endline="21" pcid="43811">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        String[] grid = new String[3];
        for (int i = 0; i < 3; i++) {
            grid[i] = sc.nextLine();
        }

        StringBuilder result = new StringBuilder();
        for (int i = 0; i < 3; i++) {
            result.append(grid[i].charAt(i));
        }

        System.out.println(result.toString());
        sc.close();
    }
}

</source>
</class>

<class classid="335" nclones="2" nlines="25" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03416_4P.java" startline="1" endline="31" pcid="43815">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();

        int count = 0;
        for (int i = A; i <= B; i++) {
            if (isPalindrome(i)) {
                count++;
            }
        }

        System.out.println(count);
    }

    private static boolean isPalindrome(int num) {
        String str = String.valueOf(num);
        int len = str.length();

        for (int i = 0; i < len / 2; i++) {
            if (str.charAt(i) != str.charAt(len - 1 - i)) {
                return false;
            }
        }
        return true;
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03416_2P.java" startline="1" endline="31" pcid="65725">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();

        int count = 0;
        for (int i = A; i <= B; i++) {
            if (isPalindrome(i)) {
                count++;
            }
        }

        System.out.println(count);
    }

    private static boolean isPalindrome(int num) {
        String str = String.valueOf(num);
        int len = str.length();

        for (int i = 0; i < len / 2; i++) {
            if (str.charAt(i) != str.charAt(len - 1 - i)) {
                return false;
            }
        }
        return true;
    }
}

</source>
</class>

<class classid="336" nclones="2" nlines="10" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03423_1P.java" startline="1" endline="15" pcid="43837">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();

        int maxGroups = N / 3;

        System.out.println(maxGroups);

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03423_2P.java" startline="1" endline="16" pcid="67427">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();

        int maxGroups = N / 3;

        System.out.println(maxGroups);

        sc.close();
    }
}

</source>
</class>

<class classid="337" nclones="3" nlines="19" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03424_0P.java" startline="1" endline="24" pcid="43839">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        Set<Character> colors = new HashSet<>();

        for (int i = 0; i < n; i++) {
            String color = sc.next();
            colors.add(color.charAt(0));
        }

        if (colors.size() == 3) {
            System.out.println("Three");
        } else {
            System.out.println("Four");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03424_3P.java" startline="1" endline="24" pcid="65731">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        Set<Character> colors = new HashSet<>();

        for (int i = 0; i < n; i++) {
            String color = sc.next();
            colors.add(color.charAt(0));
        }

        if (colors.size() == 3) {
            System.out.println("Three");
        } else {
            System.out.println("Four");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03424_2P.java" startline="1" endline="24" pcid="43845">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        Set<Character> colors = new HashSet<>();

        for (int i = 0; i < n; i++) {
            String color = sc.next();
            colors.add(color.charAt(0));
        }

        if (colors.size() == 3) {
            System.out.println("Three");
        } else {
            System.out.println("Four");
        }

        sc.close();
    }
}

</source>
</class>

<class classid="338" nclones="3" nlines="22" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03448_0P.java" startline="1" endline="28" pcid="43911">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();
        int X = sc.nextInt();

        int count = 0;

        for (int i = 0; i <= A; i++) {
            for (int j = 0; j <= B; j++) {
                for (int k = 0; k <= C; k++) {
                    if (500 * i + 100 * j + 50 * k == X) {
                        count++;
                    }
                }
            }
        }

        System.out.println(count);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03448_4P.java" startline="1" endline="27" pcid="65738">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();
        int X = sc.nextInt();

        int count = 0;

        for (int i = 0; i <= A; i++) {
            for (int j = 0; j <= B; j++) {
                for (int k = 0; k <= C; k++) {
                    if (500 * i + 100 * j + 50 * k == X) {
                        count++;
                    }
                }
            }
        }

        System.out.println(count);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03448_3P.java" startline="1" endline="27" pcid="43915">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();
        int X = sc.nextInt();

        int count = 0;

        for (int i = 0; i <= A; i++) {
            for (int j = 0; j <= B; j++) {
                for (int k = 0; k <= C; k++) {
                    if (500 * i + 100 * j + 50 * k == X) {
                        count++;
                    }
                }
            }
        }

        System.out.println(count);
        sc.close();
    }
}

</source>
</class>

<class classid="339" nclones="6" nlines="24" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03449_0P.java" startline="1" endline="32" pcid="43916">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();

        int[][] A = new int[2][N];
        for (int i = 0; i < 2; i++) {
            for (int j = 0; j < N; j++) {
                A[i][j] = sc.nextInt();
            }
        }

        int[][] dp = new int[2][N];

        dp[0][0] = A[0][0];

        for (int j = 1; j < N; j++) {
            dp[0][j] = dp[0][j-1] + A[0][j];
        }

        dp[1][0] = dp[0][0] + A[1][0];
        for (int j = 1; j < N; j++) {
            dp[1][j] = Math.max(dp[0][j], dp[1][j-1]) + A[1][j];
        }

        System.out.println(dp[1][N-1]);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03451_2P.java" startline="1" endline="33" pcid="65739">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();

        int[][] A = new int[2][N];
        for (int i = 0; i < 2; i++) {
            for (int j = 0; j < N; j++) {
                A[i][j] = sc.nextInt();
            }
        }

        int[][] dp = new int[2][N];

        dp[0][0] = A[0][0];

        for (int j = 1; j < N; j++) {
            dp[0][j] = dp[0][j-1] + A[0][j];
        }

        dp[1][0] = dp[0][0] + A[1][0];

        for (int j = 1; j < N; j++) {
            dp[1][j] = Math.max(dp[0][j], dp[1][j-1]) + A[1][j];
        }

        System.out.println(dp[1][N-1]);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03449_2P.java" startline="1" endline="32" pcid="43919">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();

        int[][] A = new int[2][N];
        for (int i = 0; i < 2; i++) {
            for (int j = 0; j < N; j++) {
                A[i][j] = sc.nextInt();
            }
        }

        int[][] dp = new int[2][N];

        dp[0][0] = A[0][0];

        for (int j = 1; j < N; j++) {
            dp[0][j] = dp[0][j-1] + A[0][j];
        }

        dp[1][0] = dp[0][0] + A[1][0];
        for (int j = 1; j < N; j++) {
            dp[1][j] = Math.max(dp[0][j], dp[1][j-1]) + A[1][j];
        }

        System.out.println(dp[1][N-1]);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03449_3P.java" startline="1" endline="32" pcid="43918">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();

        int[][] A = new int[2][N];
        for (int i = 0; i < 2; i++) {
            for (int j = 0; j < N; j++) {
                A[i][j] = sc.nextInt();
            }
        }

        int[][] dp = new int[2][N];

        dp[0][0] = A[0][0];

        for (int j = 1; j < N; j++) {
            dp[0][j] = dp[0][j-1] + A[0][j];
        }

        dp[1][0] = dp[0][0] + A[1][0];
        for (int j = 1; j < N; j++) {
            dp[1][j] = Math.max(dp[0][j], dp[1][j-1]) + A[1][j];
        }

        System.out.println(dp[1][N-1]);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03451_0P.java" startline="1" endline="33" pcid="43930">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();

        int[][] A = new int[2][N];
        for (int i = 0; i < 2; i++) {
            for (int j = 0; j < N; j++) {
                A[i][j] = sc.nextInt();
            }
        }

        int[][] dp = new int[2][N];

        dp[0][0] = A[0][0];

        for (int j = 1; j < N; j++) {
            dp[0][j] = dp[0][j-1] + A[0][j];
        }

        dp[1][0] = dp[0][0] + A[1][0];

        for (int j = 1; j < N; j++) {
            dp[1][j] = Math.max(dp[0][j], dp[1][j-1]) + A[1][j];
        }

        System.out.println(dp[1][N-1]);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03449_4P.java" startline="1" endline="32" pcid="43920">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();

        int[][] A = new int[2][N];
        for (int i = 0; i < 2; i++) {
            for (int j = 0; j < N; j++) {
                A[i][j] = sc.nextInt();
            }
        }

        int[][] dp = new int[2][N];

        dp[0][0] = A[0][0];

        for (int j = 1; j < N; j++) {
            dp[0][j] = dp[0][j-1] + A[0][j];
        }

        dp[1][0] = dp[0][0] + A[1][0];
        for (int j = 1; j < N; j++) {
            dp[1][j] = Math.max(dp[0][j], dp[1][j-1]) + A[1][j];
        }

        System.out.println(dp[1][N-1]);
        sc.close();
    }
}

</source>
</class>

<class classid="340" nclones="4" nlines="18" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03456_0P.java" startline="1" endline="23" pcid="43944">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();

        String concatenated = String.valueOf(a) + String.valueOf(b);
        long number = Long.parseLong(concatenated);

        long sqrt = (long) Math.sqrt(number);

        if (sqrt * sqrt == number) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03456_1P.java" startline="1" endline="23" pcid="65741">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();

        String concatenated = String.valueOf(a) + String.valueOf(b);
        long number = Long.parseLong(concatenated);

        long sqrt = (long) Math.sqrt(number);

        if (sqrt * sqrt == number) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03456_4P.java" startline="1" endline="23" pcid="43947">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();

        String concatenated = String.valueOf(a) + String.valueOf(b);
        long number = Long.parseLong(concatenated);

        long sqrt = (long) Math.sqrt(number);

        if (sqrt * sqrt == number) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03456_3P.java" startline="1" endline="23" pcid="43945">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();

        String concatenated = String.valueOf(a) + String.valueOf(b);
        long number = Long.parseLong(concatenated);

        long sqrt = (long) Math.sqrt(number);

        if (sqrt * sqrt == number) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }

        sc.close();
    }
}

</source>
</class>

<class classid="341" nclones="2" nlines="25" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03487_4P.java" startline="1" endline="31" pcid="44057">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        Map<Integer, Integer> freq = new HashMap<>();
        for (int i = 0; i < n; i++) {
            int a = sc.nextInt();
            freq.put(a, freq.getOrDefault(a, 0) + 1);
        }

        int toRemove = 0;

        for (Map.Entry<Integer, Integer> entry : freq.entrySet()) {
            int value = entry.getKey();
            int count = entry.getValue();

            if (count > value) {
                toRemove += count - value;
            } else if (count < value) {
                toRemove += count;
            }
        }

        System.out.println(toRemove);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03487_2P.java" startline="1" endline="32" pcid="65749">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        Map<Integer, Integer> freq = new HashMap<>();

        for (int i = 0; i < n; i++) {
            int a = sc.nextInt();
            freq.put(a, freq.getOrDefault(a, 0) + 1);
        }

        int toRemove = 0;

        for (Map.Entry<Integer, Integer> entry : freq.entrySet()) {
            int value = entry.getKey();
            int count = entry.getValue();

            if (count > value) {
                toRemove += count - value;
            } else if (count < value) {
                toRemove += count;
            }
        }

        System.out.println(toRemove);
        sc.close();
    }
}

</source>
</class>

<class classid="342" nclones="4" nlines="20" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03502_0P.java" startline="1" endline="24" pcid="44108">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();

        int digitSum = 0;
        int temp = N;
        while (temp > 0) {
            digitSum += temp % 10;
            temp /= 10;
        }

        if (N % digitSum == 0) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03502_2P.java" startline="1" endline="24" pcid="65751">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();

        int digitSum = 0;
        int temp = N;
        while (temp > 0) {
            digitSum += temp % 10;
            temp /= 10;
        }

        if (N % digitSum == 0) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03502_4P.java" startline="1" endline="24" pcid="44113">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();

        int digitSum = 0;
        int temp = N;
        while (temp > 0) {
            digitSum += temp % 10;
            temp /= 10;
        }

        if (N % digitSum == 0) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03502_3P.java" startline="1" endline="25" pcid="44111">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();

        int digitSum = 0;
        int temp = N;

        while (temp > 0) {
            digitSum += temp % 10;
            temp /= 10;
        }

        if (N % digitSum == 0) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }

        sc.close();
    }
}

</source>
</class>

<class classid="343" nclones="2" nlines="26" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03533_4P.java" startline="1" endline="32" pcid="44137">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();

        String target = "AKIHABARA";

        StringBuilder sNonA = new StringBuilder();
        StringBuilder targetNonA = new StringBuilder();

        for (char c : s.toCharArray()) {
            if (c != 'A') {
                sNonA.append(c);
            }
        }

        for (char c : target.toCharArray()) {
            if (c != 'A') {
                targetNonA.append(c);
            }
        }

        if (sNonA.toString().equals(targetNonA.toString())) {
            System.out.println("YES");
        } else {
            System.out.println("NO");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03523_1P.java" startline="1" endline="32" pcid="65752">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();

        String target = "AKIHABARA";

        StringBuilder sNonA = new StringBuilder();
        StringBuilder targetNonA = new StringBuilder();

        for (char c : s.toCharArray()) {
            if (c != 'A') {
                sNonA.append(c);
            }
        }

        for (char c : target.toCharArray()) {
            if (c != 'A') {
                targetNonA.append(c);
            }
        }

        if (sNonA.toString().equals(targetNonA.toString())) {
            System.out.println("YES");
        } else {
            System.out.println("NO");
        }
    }
}

</source>
</class>

<class classid="344" nclones="3" nlines="24" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03544_4P.java" startline="1" endline="30" pcid="44148">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();

        if (N == 0) {
            System.out.println(2);
            return;
        }
        if (N == 1) {
            System.out.println(1);
            return;
        }

        long prev2 = 2;
        long prev1 = 1;
        long current = 0;

        for (int i = 2; i <= N; i++) {
            current = prev1 + prev2;
            prev2 = prev1;
            prev1 = current;
        }

        System.out.println(current);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03544_2P.java" startline="1" endline="30" pcid="65757">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();

        if (N == 0) {
            System.out.println(2);
            return;
        }
        if (N == 1) {
            System.out.println(1);
            return;
        }

        long prev2 = 2;
        long prev1 = 1;
        long current = 0;

        for (int i = 2; i <= N; i++) {
            current = prev1 + prev2;
            prev2 = prev1;
            prev1 = current;
        }

        System.out.println(current);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03544_1P.java" startline="1" endline="30" pcid="44149">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();

        if (N == 0) {
            System.out.println(2);
            return;
        }
        if (N == 1) {
            System.out.println(1);
            return;
        }

        long prev2 = 2;
        long prev1 = 1;
        long current = 0;

        for (int i = 2; i <= N; i++) {
            current = prev1 + prev2;
            prev2 = prev1;
            prev1 = current;
        }

        System.out.println(current);
    }
}

</source>
</class>

<class classid="345" nclones="4" nlines="12" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03548_0P.java" startline="1" endline="16" pcid="44166">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int X = sc.nextInt();
        int Y = sc.nextInt();
        int Z = sc.nextInt();

        int maxPeople = (X - Z) / (Y + Z);

        System.out.println(maxPeople);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03548_2P.java" startline="1" endline="16" pcid="65758">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int X = sc.nextInt();
        int Y = sc.nextInt();
        int Z = sc.nextInt();

        int maxPeople = (X - Z) / (Y + Z);

        System.out.println(maxPeople);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03548_4P.java" startline="1" endline="16" pcid="44169">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int X = sc.nextInt();
        int Y = sc.nextInt();
        int Z = sc.nextInt();

        int maxPeople = (X - Z) / (Y + Z);

        System.out.println(maxPeople);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03548_3P.java" startline="1" endline="16" pcid="44167">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int X = sc.nextInt();
        int Y = sc.nextInt();
        int Z = sc.nextInt();

        int maxPeople = (X - Z) / (Y + Z);

        System.out.println(maxPeople);
        sc.close();
    }
}

</source>
</class>

<class classid="346" nclones="4" nlines="11" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03548_1P.java" startline="1" endline="15" pcid="44168">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int X = sc.nextInt();
        int Y = sc.nextInt();
        int Z = sc.nextInt();

        int maxPeople = (X - Z) / (Y + Z);

        System.out.println(maxPeople);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p03548_1P.java" startline="1" endline="15" pcid="64942">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int X = sc.nextInt();
        int Y = sc.nextInt();
        int Z = sc.nextInt();

        int maxPeople = (X - Z) / (Y + Z);

        System.out.println(maxPeople);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p03548_0P.java" startline="1" endline="14" pcid="51675">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int X = sc.nextInt();
        int Y = sc.nextInt();
        int Z = sc.nextInt();

        int maxPeople = (X - Z) / (Y + Z);
        System.out.println(maxPeople);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p03548_1P.java" startline="1" endline="14" pcid="51677">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int X = sc.nextInt();
        int Y = sc.nextInt();
        int Z = sc.nextInt();

        int maxPeople = (X - Z) / (Y + Z);
        System.out.println(maxPeople);
    }
}

</source>
</class>

<class classid="347" nclones="3" nlines="14" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03555_1P.java" startline="1" endline="18" pcid="44194">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String row1 = sc.nextLine();
        String row2 = sc.nextLine();

        if (row1.charAt(0) == row2.charAt(2) &&
            row1.charAt(1) == row2.charAt(1) &&
            row1.charAt(2) == row2.charAt(0)) {
            System.out.println("YES");
        } else {
            System.out.println("NO");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p03555_0P.java" startline="1" endline="18" pcid="66620">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String row1 = sc.nextLine();
        String row2 = sc.nextLine();

        if (row1.charAt(0) == row2.charAt(2) &&
            row1.charAt(1) == row2.charAt(1) &&
            row1.charAt(2) == row2.charAt(0)) {
            System.out.println("YES");
        } else {
            System.out.println("NO");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p03555_4P.java" startline="1" endline="18" pcid="51707">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String row1 = sc.nextLine();
        String row2 = sc.nextLine();

        if (row1.charAt(0) == row2.charAt(2) &&
            row1.charAt(1) == row2.charAt(1) &&
            row1.charAt(2) == row2.charAt(0)) {
            System.out.println("YES");
        } else {
            System.out.println("NO");
        }
    }
}

</source>
</class>

<class classid="348" nclones="2" nlines="10" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03555_2P.java" startline="1" endline="16" pcid="44195">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String row1 = sc.nextLine();
        String row2 = sc.nextLine();

        boolean same = row1.charAt(0) == row2.charAt(2) &&
                      row1.charAt(1) == row2.charAt(1) &&
                      row1.charAt(2) == row2.charAt(0);

        System.out.println(same ? "YES" : "NO");
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03555_4P.java" startline="1" endline="16" pcid="65761">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String row1 = sc.nextLine();
        String row2 = sc.nextLine();

        boolean same = row1.charAt(0) == row2.charAt(2) &&
                      row1.charAt(1) == row2.charAt(1) &&
                      row1.charAt(2) == row2.charAt(0);

        System.out.println(same ? "YES" : "NO");
    }
}

</source>
</class>

<class classid="349" nclones="2" nlines="55" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03557_1P.java" startline="1" endline="66" pcid="44202">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        int[] a = new int[n];
        int[] b = new int[n];
        int[] c = new int[n];

        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        for (int i = 0; i < n; i++) {
            b[i] = sc.nextInt();
        }
        for (int i = 0; i < n; i++) {
            c[i] = sc.nextInt();
        }

        Arrays.sort(a);
        Arrays.sort(c);

        long result = 0;

        for (int j = 0; j < n; j++) {
            int middle = b[j];

            int upperCount = countSmaller(a, middle);

            int lowerCount = countLarger(c, middle);

            result += (long) upperCount * lowerCount;
        }

        System.out.println(result);
    }

    private static int countSmaller(int[] arr, int target) {
        int left = 0, right = arr.length;
        while (left < right) {
            int mid = (left + right) / 2;
            if (arr[mid] < target) {
                left = mid + 1;
            } else {
                right = mid;
            }
        }
        return left;
    }

    private static int countLarger(int[] arr, int target) {
        int left = 0, right = arr.length;
        while (left < right) {
            int mid = (left + right) / 2;
            if (arr[mid] <= target) {
                left = mid + 1;
            } else {
                right = mid;
            }
        }
        return arr.length - left;
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03559_3P.java" startline="1" endline="66" pcid="65763">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        int[] a = new int[n];
        int[] b = new int[n];
        int[] c = new int[n];

        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        for (int i = 0; i < n; i++) {
            b[i] = sc.nextInt();
        }
        for (int i = 0; i < n; i++) {
            c[i] = sc.nextInt();
        }

        Arrays.sort(a);
        Arrays.sort(c);

        long result = 0;

        for (int j = 0; j < n; j++) {
            int middle = b[j];

            int upperCount = countSmaller(a, middle);

            int lowerCount = countLarger(c, middle);

            result += (long) upperCount * lowerCount;
        }

        System.out.println(result);
    }

    private static int countSmaller(int[] arr, int target) {
        int left = 0, right = arr.length;
        while (left < right) {
            int mid = (left + right) / 2;
            if (arr[mid] < target) {
                left = mid + 1;
            } else {
                right = mid;
            }
        }
        return left;
    }

    private static int countLarger(int[] arr, int target) {
        int left = 0, right = arr.length;
        while (left < right) {
            int mid = (left + right) / 2;
            if (arr[mid] <= target) {
                left = mid + 1;
            } else {
                right = mid;
            }
        }
        return arr.length - left;
    }
}

</source>
</class>

<class classid="350" nclones="2" nlines="12" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03573_3P.java" startline="1" endline="16" pcid="44261">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();

        int result = A ^ B ^ C;

        System.out.println(result);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03573_1P.java" startline="1" endline="16" pcid="65765">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();

        int result = A ^ B ^ C;
        System.out.println(result);

        sc.close();
    }
}

</source>
</class>

<class classid="351" nclones="2" nlines="14" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03591_3P.java" startline="1" endline="17" pcid="44314">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();

        if (s.startsWith("YAKI")) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03591_2P.java" startline="1" endline="17" pcid="65771">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();

        if (s.startsWith("YAKI")) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }

        sc.close();
    }
}

</source>
</class>

<class classid="352" nclones="4" nlines="19" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03592_2P.java" startline="1" endline="23" pcid="44316">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int M = sc.nextInt();
        int K = sc.nextInt();

        for (int r = 0; r <= N; r++) {
            for (int c = 0; c <= M; c++) {
                int blackSquares = r * M + c * N - 2 * r * c;
                if (blackSquares == K) {
                    System.out.println("Yes");
                    return;
                }
            }
        }

        System.out.println("No");
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03592_1P.java" startline="1" endline="23" pcid="65772">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int M = sc.nextInt();
        int K = sc.nextInt();

        for (int r = 0; r <= N; r++) {
            for (int c = 0; c <= M; c++) {
                int blackSquares = r * M + c * N - 2 * r * c;
                if (blackSquares == K) {
                    System.out.println("Yes");
                    return;
                }
            }
        }

        System.out.println("No");
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03592_3P.java" startline="1" endline="23" pcid="44319">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int M = sc.nextInt();
        int K = sc.nextInt();

        for (int r = 0; r <= N; r++) {
            for (int c = 0; c <= M; c++) {
                int blackSquares = r * M + c * N - 2 * r * c;
                if (blackSquares == K) {
                    System.out.println("Yes");
                    return;
                }
            }
        }

        System.out.println("No");
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03592_4P.java" startline="1" endline="23" pcid="44318">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int M = sc.nextInt();
        int K = sc.nextInt();

        for (int r = 0; r <= N; r++) {
            for (int c = 0; c <= M; c++) {
                int blackSquares = r * M + c * N - 2 * r * c;
                if (blackSquares == K) {
                    System.out.println("Yes");
                    return;
                }
            }
        }

        System.out.println("No");
    }
}

</source>
</class>

<class classid="353" nclones="3" nlines="17" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03598_2P.java" startline="1" endline="26" pcid="44331">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        int K = sc.nextInt();

        int totalDistance = 0;

        for (int i = 0; i < N; i++) {
            int x = sc.nextInt();

            int costA = 2 * x;

            int costB = 2 * (K - x);

            totalDistance += Math.min(costA, costB);
        }

        System.out.println(totalDistance);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03598_0P.java" startline="1" endline="26" pcid="65773">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        int K = sc.nextInt();

        int totalDistance = 0;

        for (int i = 0; i < N; i++) {
            int x = sc.nextInt();

            int costA = 2 * x;

            int costB = 2 * (K - x);

            totalDistance += Math.min(costA, costB);
        }

        System.out.println(totalDistance);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03598_3P.java" startline="1" endline="26" pcid="65774">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        int K = sc.nextInt();

        int totalDistance = 0;

        for (int i = 0; i < N; i++) {
            int x = sc.nextInt();

            int costA = 2 * x;

            int costB = 2 * (K - x);

            totalDistance += Math.min(costA, costB);
        }

        System.out.println(totalDistance);
        sc.close();
    }
}

</source>
</class>

<class classid="354" nclones="3" nlines="44" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03600_1P.java" startline="1" endline="51" pcid="44336">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        long[][] a = new long[n][n];

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                a[i][j] = sc.nextLong();
            }
        }

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                for (int k = 0; k < n; k++) {
                    if (a[i][j] > a[i][k] + a[k][j]) {
                        System.out.println(-1);
                        return;
                    }
                }
            }
        }

        boolean[][] necessary = new boolean[n][n];
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                necessary[i][j] = true;
                for (int k = 0; k < n; k++) {
                    if (k != i && k != j && a[i][j] == a[i][k] + a[k][j]) {
                        necessary[i][j] = false;
                        break;
                    }
                }
            }
        }

        long totalLength = 0;
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                if (necessary[i][j]) {
                    totalLength += a[i][j];
                }
            }
        }

        System.out.println(totalLength);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03602_3P.java" startline="1" endline="51" pcid="65776">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        long[][] a = new long[n][n];

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                a[i][j] = sc.nextLong();
            }
        }

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                for (int k = 0; k < n; k++) {
                    if (a[i][j] > a[i][k] + a[k][j]) {
                        System.out.println(-1);
                        return;
                    }
                }
            }
        }

        boolean[][] necessary = new boolean[n][n];
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                necessary[i][j] = true;
                for (int k = 0; k < n; k++) {
                    if (k != i && k != j && a[i][j] == a[i][k] + a[k][j]) {
                        necessary[i][j] = false;
                        break;
                    }
                }
            }
        }

        long totalLength = 0;
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                if (necessary[i][j]) {
                    totalLength += a[i][j];
                }
            }
        }

        System.out.println(totalLength);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03602_2P.java" startline="1" endline="51" pcid="44347">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        long[][] a = new long[n][n];

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                a[i][j] = sc.nextLong();
            }
        }

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                for (int k = 0; k < n; k++) {
                    if (a[i][j] > a[i][k] + a[k][j]) {
                        System.out.println(-1);
                        return;
                    }
                }
            }
        }

        boolean[][] necessary = new boolean[n][n];
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                necessary[i][j] = true;
                for (int k = 0; k < n; k++) {
                    if (k != i && k != j && a[i][j] == a[i][k] + a[k][j]) {
                        necessary[i][j] = false;
                        break;
                    }
                }
            }
        }

        long totalLength = 0;
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                if (necessary[i][j]) {
                    totalLength += a[i][j];
                }
            }
        }

        System.out.println(totalLength);
    }
}

</source>
</class>

<class classid="355" nclones="5" nlines="14" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03605_0P.java" startline="1" endline="17" pcid="44356">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();

        if (N / 10 == 9 || N % 10 == 9) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03605_0P.java" startline="1" endline="15" pcid="67471">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        if (N / 10 == 9 || N % 10 == 9) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03605_3P.java" startline="1" endline="17" pcid="59388">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();

        if (N / 10 == 9 || N % 10 == 9) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03605_4P.java" startline="1" endline="18" pcid="59395">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();

        if (N / 10 == 9 || N % 10 == 9) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03605_2P.java" startline="1" endline="17" pcid="44357">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();

        if (N / 10 == 9 || N % 10 == 9) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }

        sc.close();
    }
}

</source>
</class>

<class classid="356" nclones="4" nlines="13" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03610_3P.java" startline="1" endline="18" pcid="44379">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String s = scanner.nextLine();

        StringBuilder result = new StringBuilder();

        for (int i = 0; i < s.length(); i += 2) {
            result.append(s.charAt(i));
        }

        System.out.println(result.toString());
        scanner.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03610_2P.java" startline="1" endline="18" pcid="65779">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String s = scanner.nextLine();

        StringBuilder result = new StringBuilder();

        for (int i = 0; i < s.length(); i += 2) {
            result.append(s.charAt(i));
        }

        System.out.println(result.toString());
        scanner.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03610_4P.java" startline="1" endline="18" pcid="44381">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String s = scanner.nextLine();

        StringBuilder result = new StringBuilder();

        for (int i = 0; i < s.length(); i += 2) {
            result.append(s.charAt(i));
        }

        System.out.println(result.toString());
        scanner.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03610_1P.java" startline="1" endline="18" pcid="44380">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String s = scanner.nextLine();

        StringBuilder result = new StringBuilder();

        for (int i = 0; i < s.length(); i += 2) {
            result.append(s.charAt(i));
        }

        System.out.println(result.toString());
        scanner.close();
    }
}

</source>
</class>

<class classid="357" nclones="2" nlines="26" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03611_1P.java" startline="1" endline="33" pcid="44383">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];

        Set<Integer> candidates = new HashSet<>();

        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
            candidates.add(a[i] - 1);
            candidates.add(a[i]);
            candidates.add(a[i] + 1);
        }

        int maxCount = 0;

        for (int x : candidates) {
            int count = 0;
            for (int i = 0; i < n; i++) {
                if (Math.abs(a[i] - x) <= 1) {
                    count++;
                }
            }
            maxCount = Math.max(maxCount, count);
        }

        System.out.println(maxCount);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03611_2P.java" startline="1" endline="33" pcid="65780">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];

        Set<Integer> candidates = new HashSet<>();

        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
            candidates.add(a[i] - 1);
            candidates.add(a[i]);
            candidates.add(a[i] + 1);
        }

        int maxCount = 0;

        for (int x : candidates) {
            int count = 0;
            for (int i = 0; i < n; i++) {
                if (Math.abs(a[i] - x) <= 1) {
                    count++;
                }
            }
            maxCount = Math.max(maxCount, count);
        }

        System.out.println(maxCount);
    }
}

</source>
</class>

<class classid="358" nclones="2" nlines="28" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03614_0P.java" startline="1" endline="33" pcid="44394">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] p = new int[n + 1];

        for (int i = 1; i <= n; i++) {
            p[i] = sc.nextInt();
        }

        int operations = 0;
        int i = 1;

        while (i <= n) {
            if (p[i] == i) {
                int segmentLength = 0;
                while (i <= n && p[i] == i) {
                    segmentLength++;
                    i++;
                }
                operations += (segmentLength + 1) / 2;
            } else {
                i++;
            }
        }

        System.out.println(operations);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03612_2P.java" startline="1" endline="33" pcid="65782">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] p = new int[n + 1];

        for (int i = 1; i <= n; i++) {
            p[i] = sc.nextInt();
        }

        int operations = 0;
        int i = 1;

        while (i <= n) {
            if (p[i] == i) {
                int segmentLength = 0;
                while (i <= n && p[i] == i) {
                    segmentLength++;
                    i++;
                }
                operations += (segmentLength + 1) / 2;
            } else {
                i++;
            }
        }

        System.out.println(operations);
        sc.close();
    }
}

</source>
</class>

<class classid="359" nclones="2" nlines="27" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03614_4P.java" startline="1" endline="32" pcid="44399">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] p = new int[n];

        for (int i = 0; i < n; i++) {
            p[i] = sc.nextInt();
        }

        int operations = 0;
        int i = 0;

        while (i < n) {
            if (p[i] == i + 1) {
                int segmentLength = 0;
                while (i < n && p[i] == i + 1) {
                    segmentLength++;
                    i++;
                }
                operations += (segmentLength + 1) / 2;
            } else {
                i++;
            }
        }

        System.out.println(operations);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03612_1P.java" startline="1" endline="32" pcid="65781">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] p = new int[n];

        for (int i = 0; i < n; i++) {
            p[i] = sc.nextInt();
        }

        int operations = 0;
        int i = 0;

        while (i < n) {
            if (p[i] == i + 1) {
                int segmentLength = 0;
                while (i < n && p[i] == i + 1) {
                    segmentLength++;
                    i++;
                }
                operations += (segmentLength + 1) / 2;
            } else {
                i++;
            }
        }

        System.out.println(operations);
    }
}

</source>
</class>

<class classid="360" nclones="2" nlines="22" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03618_1P.java" startline="1" endline="32" pcid="44412">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String A = sc.next();
        int n = A.length();

        Set<String> uniqueStrings = new HashSet<>();

        uniqueStrings.add(A);

        for (int i = 0; i < n; i++) {
            for (int j = i; j < n; j++) {
                StringBuilder sb = new StringBuilder();

                sb.append(A.substring(0, i));

                for (int k = j; k >= i; k--) {
                    sb.append(A.charAt(k));
                }

                sb.append(A.substring(j + 1));

                uniqueStrings.add(sb.toString());
            }
        }

        System.out.println(uniqueStrings.size());
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03618_0P.java" startline="1" endline="32" pcid="65785">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String A = sc.next();
        int n = A.length();

        Set<String> uniqueStrings = new HashSet<>();

        uniqueStrings.add(A);

        for (int i = 0; i < n; i++) {
            for (int j = i; j < n; j++) {
                StringBuilder sb = new StringBuilder();

                sb.append(A.substring(0, i));

                for (int k = j; k >= i; k--) {
                    sb.append(A.charAt(k));
                }

                sb.append(A.substring(j + 1));

                uniqueStrings.add(sb.toString());
            }
        }

        System.out.println(uniqueStrings.size());
    }
}

</source>
</class>

<class classid="361" nclones="3" nlines="15" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03632_1P.java" startline="1" endline="20" pcid="44455">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();
        int D = sc.nextInt();

        int start = Math.max(A, C);
        int end = Math.min(B, D);

        int overlap = Math.max(0, end - start);

        System.out.println(overlap);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03632_2P.java" startline="1" endline="20" pcid="65793">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();
        int D = sc.nextInt();

        int start = Math.max(A, C);
        int end = Math.min(B, D);

        int overlap = Math.max(0, end - start);

        System.out.println(overlap);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03632_3P.java" startline="1" endline="20" pcid="44457">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();
        int D = sc.nextInt();

        int start = Math.max(A, C);
        int end = Math.min(B, D);

        int overlap = Math.max(0, end - start);

        System.out.println(overlap);
        sc.close();
    }
}

</source>
</class>

<class classid="362" nclones="4" nlines="11" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03635_0P.java" startline="1" endline="15" pcid="44467">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();

        int blocks = (n - 1) * (m - 1);

        System.out.println(blocks);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03635_1P.java" startline="1" endline="15" pcid="65794">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();

        int blocks = (n - 1) * (m - 1);

        System.out.println(blocks);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03635_2P.java" startline="1" endline="15" pcid="44469">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();

        int blocks = (n - 1) * (m - 1);
        System.out.println(blocks);

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03635_4P.java" startline="1" endline="15" pcid="44471">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();

        int blocks = (n - 1) * (m - 1);

        System.out.println(blocks);
        sc.close();
    }
}

</source>
</class>

<class classid="363" nclones="2" nlines="23" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03661_0P.java" startline="1" endline="29" pcid="44563">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        long[] a = new long[n];
        long totalSum = 0;

        for (int i = 0; i < n; i++) {
            a[i] = sc.nextLong();
            totalSum += a[i];
        }

        long minDiff = Long.MAX_VALUE;
        long snukeSum = 0;

        for (int k = 1; k < n; k++) {
            snukeSum += a[k-1];
            long raccoonSum = totalSum - snukeSum;
            long diff = Math.abs(snukeSum - raccoonSum);
            minDiff = Math.min(minDiff, diff);
        }

        System.out.println(minDiff);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03661_2P.java" startline="1" endline="29" pcid="65804">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        long[] a = new long[n];

        long totalSum = 0;
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextLong();
            totalSum += a[i];
        }

        long minDiff = Long.MAX_VALUE;
        long snukeSum = 0;

        for (int k = 1; k < n; k++) {
            snukeSum += a[k-1];
            long raccoonSum = totalSum - snukeSum;
            long diff = Math.abs(snukeSum - raccoonSum);
            minDiff = Math.min(minDiff, diff);
        }

        System.out.println(minDiff);
        sc.close();
    }
}

</source>
</class>

<class classid="364" nclones="2" nlines="35" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03675_1P.java" startline="1" endline="41" pcid="44606">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        Deque<Integer> deque = new ArrayDeque<>();
        boolean reversed = false;

        for (int i = 0; i < n; i++) {
            int a = sc.nextInt();

            if (!reversed) {
                deque.addLast(a);
            } else {
                deque.addFirst(a);
            }

            reversed = !reversed;
        }

        List<Integer> result = new ArrayList<>();
        if (!reversed) {
            while (!deque.isEmpty()) {
                result.add(deque.removeFirst());
            }
        } else {
            while (!deque.isEmpty()) {
                result.add(deque.removeLast());
            }
        }

        for (int i = 0; i < result.size(); i++) {
            if (i > 0) System.out.print(" ");
            System.out.print(result.get(i));
        }
        System.out.println();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03673_4P.java" startline="1" endline="41" pcid="65807">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        Deque<Integer> deque = new ArrayDeque<>();
        boolean reversed = false;

        for (int i = 0; i < n; i++) {
            int a = sc.nextInt();

            if (!reversed) {
                deque.addLast(a);
            } else {
                deque.addFirst(a);
            }

            reversed = !reversed;
        }

        List<Integer> result = new ArrayList<>();
        if (!reversed) {
            while (!deque.isEmpty()) {
                result.add(deque.removeFirst());
            }
        } else {
            while (!deque.isEmpty()) {
                result.add(deque.removeLast());
            }
        }

        for (int i = 0; i < result.size(); i++) {
            if (i > 0) System.out.print(" ");
            System.out.print(result.get(i));
        }
        System.out.println();
    }
}

</source>
</class>

<class classid="365" nclones="2" nlines="25" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03677_0P.java" startline="1" endline="35" pcid="44614">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }

        int minCost = Integer.MAX_VALUE;

        for (int x = 1; x <= m; x++) {
            int totalCost = 0;

            for (int i = 0; i < n - 1; i++) {
                int current = a[i];
                int target = a[i + 1];

                int forwardOnly = (target - current + m) % m;

                int favoriteFirst = 1 + (target - x + m) % m;

                totalCost += Math.min(forwardOnly, favoriteFirst);
            }

            minCost = Math.min(minCost, totalCost);
        }

        System.out.println(minCost);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03677_2P.java" startline="1" endline="35" pcid="65808">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }

        int minCost = Integer.MAX_VALUE;

        for (int x = 1; x <= m; x++) {
            int totalCost = 0;

            for (int i = 0; i < n - 1; i++) {
                int current = a[i];
                int target = a[i + 1];

                int forwardOnly = (target - current + m) % m;

                int favoriteFirst = 1 + (target - x + m) % m;

                totalCost += Math.min(forwardOnly, favoriteFirst);
            }

            minCost = Math.min(minCost, totalCost);
        }

        System.out.println(minCost);
    }
}

</source>
</class>

<class classid="366" nclones="8" nlines="78" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03682_0P.java" startline="1" endline="95" pcid="44633">
import java.util.*;

public class Main {
    static class Edge implements Comparable<Edge> {
        int u, v, cost;

        Edge(int u, int v, int cost) {
            this.u = u;
            this.v = v;
            this.cost = cost;
        }

        public int compareTo(Edge other) {
            return Integer.compare(this.cost, other.cost);
        }
    }

    static class UnionFind {
        int[] parent, rank;

        UnionFind(int n) {
            parent = new int[n];
            rank = new int[n];
            for (int i = 0; i < n; i++) {
                parent[i] = i;
            }
        }

        int find(int x) {
            if (parent[x] != x) {
                parent[x] = find(parent[x]);
            }
            return parent[x];
        }

        boolean union(int x, int y) {
            int px = find(x), py = find(y);
            if (px == py) return false;

            if (rank[px] < rank[py]) {
                parent[px] = py;
            } else if (rank[px] > rank[py]) {
                parent[py] = px;
            } else {
                parent[py] = px;
                rank[px]++;
            }
            return true;
        }
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        int[][] towns = new int[n][3];
        for (int i = 0; i < n; i++) {
            towns[i][0] = sc.nextInt();
            towns[i][1] = sc.nextInt();
            towns[i][2] = i;
        }

        List<Edge> edges = new ArrayList<>();

        Arrays.sort(towns, (a, b) -> Integer.compare(a[0], b[0]));
        for (int i = 0; i < n - 1; i++) {
            int cost = Math.min(Math.abs(towns[i][0] - towns[i+1][0]),
                               Math.abs(towns[i][1] - towns[i+1][1]));
            edges.add(new Edge(towns[i][2], towns[i+1][2], cost));
        }

        Arrays.sort(towns, (a, b) -> Integer.compare(a[1], b[1]));
        for (int i = 0; i < n - 1; i++) {
            int cost = Math.min(Math.abs(towns[i][0] - towns[i+1][0]),
                               Math.abs(towns[i][1] - towns[i+1][1]));
            edges.add(new Edge(towns[i][2], towns[i+1][2], cost));
        }

        Collections.sort(edges);
        UnionFind uf = new UnionFind(n);
        long totalCost = 0;
        int edgesUsed = 0;

        for (Edge edge : edges) {
            if (uf.union(edge.u, edge.v)) {
                totalCost += edge.cost;
                edgesUsed++;
                if (edgesUsed == n - 1) break;
            }
        }

        System.out.println(totalCost);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03684_1P.java" startline="1" endline="95" pcid="65809">
import java.util.*;

public class Main {
    static class Edge implements Comparable<Edge> {
        int u, v, cost;

        Edge(int u, int v, int cost) {
            this.u = u;
            this.v = v;
            this.cost = cost;
        }

        public int compareTo(Edge other) {
            return Integer.compare(this.cost, other.cost);
        }
    }

    static class UnionFind {
        int[] parent, rank;

        UnionFind(int n) {
            parent = new int[n];
            rank = new int[n];
            for (int i = 0; i < n; i++) {
                parent[i] = i;
            }
        }

        int find(int x) {
            if (parent[x] != x) {
                parent[x] = find(parent[x]);
            }
            return parent[x];
        }

        boolean union(int x, int y) {
            int px = find(x), py = find(y);
            if (px == py) return false;

            if (rank[px] < rank[py]) {
                parent[px] = py;
            } else if (rank[px] > rank[py]) {
                parent[py] = px;
            } else {
                parent[py] = px;
                rank[px]++;
            }
            return true;
        }
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        int[][] towns = new int[n][3];
        for (int i = 0; i < n; i++) {
            towns[i][0] = sc.nextInt();
            towns[i][1] = sc.nextInt();
            towns[i][2] = i;
        }

        List<Edge> edges = new ArrayList<>();

        Arrays.sort(towns, (a, b) -> Integer.compare(a[0], b[0]));
        for (int i = 0; i < n - 1; i++) {
            int cost = Math.min(Math.abs(towns[i][0] - towns[i+1][0]),
                               Math.abs(towns[i][1] - towns[i+1][1]));
            edges.add(new Edge(towns[i][2], towns[i+1][2], cost));
        }

        Arrays.sort(towns, (a, b) -> Integer.compare(a[1], b[1]));
        for (int i = 0; i < n - 1; i++) {
            int cost = Math.min(Math.abs(towns[i][0] - towns[i+1][0]),
                               Math.abs(towns[i][1] - towns[i+1][1]));
            edges.add(new Edge(towns[i][2], towns[i+1][2], cost));
        }

        Collections.sort(edges);
        UnionFind uf = new UnionFind(n);
        long totalCost = 0;
        int edgesUsed = 0;

        for (Edge edge : edges) {
            if (uf.union(edge.u, edge.v)) {
                totalCost += edge.cost;
                edgesUsed++;
                if (edgesUsed == n - 1) break;
            }
        }

        System.out.println(totalCost);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03684_2P.java" startline="1" endline="95" pcid="65810">
import java.util.*;

public class Main {
    static class Edge implements Comparable<Edge> {
        int u, v, cost;

        Edge(int u, int v, int cost) {
            this.u = u;
            this.v = v;
            this.cost = cost;
        }

        public int compareTo(Edge other) {
            return Integer.compare(this.cost, other.cost);
        }
    }

    static class UnionFind {
        int[] parent, rank;

        UnionFind(int n) {
            parent = new int[n];
            rank = new int[n];
            for (int i = 0; i < n; i++) {
                parent[i] = i;
            }
        }

        int find(int x) {
            if (parent[x] != x) {
                parent[x] = find(parent[x]);
            }
            return parent[x];
        }

        boolean union(int x, int y) {
            int px = find(x), py = find(y);
            if (px == py) return false;

            if (rank[px] < rank[py]) {
                parent[px] = py;
            } else if (rank[px] > rank[py]) {
                parent[py] = px;
            } else {
                parent[py] = px;
                rank[px]++;
            }
            return true;
        }
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        int[][] towns = new int[n][3];
        for (int i = 0; i < n; i++) {
            towns[i][0] = sc.nextInt();
            towns[i][1] = sc.nextInt();
            towns[i][2] = i;
        }

        List<Edge> edges = new ArrayList<>();

        Arrays.sort(towns, (a, b) -> Integer.compare(a[0], b[0]));
        for (int i = 0; i < n - 1; i++) {
            int cost = Math.min(Math.abs(towns[i][0] - towns[i+1][0]),
                               Math.abs(towns[i][1] - towns[i+1][1]));
            edges.add(new Edge(towns[i][2], towns[i+1][2], cost));
        }

        Arrays.sort(towns, (a, b) -> Integer.compare(a[1], b[1]));
        for (int i = 0; i < n - 1; i++) {
            int cost = Math.min(Math.abs(towns[i][0] - towns[i+1][0]),
                               Math.abs(towns[i][1] - towns[i+1][1]));
            edges.add(new Edge(towns[i][2], towns[i+1][2], cost));
        }

        Collections.sort(edges);
        UnionFind uf = new UnionFind(n);
        long totalCost = 0;
        int edgesUsed = 0;

        for (Edge edge : edges) {
            if (uf.union(edge.u, edge.v)) {
                totalCost += edge.cost;
                edgesUsed++;
                if (edgesUsed == n - 1) break;
            }
        }

        System.out.println(totalCost);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03682_4P.java" startline="1" endline="95" pcid="44636">
import java.util.*;

public class Main {
    static class Edge implements Comparable<Edge> {
        int u, v, cost;

        Edge(int u, int v, int cost) {
            this.u = u;
            this.v = v;
            this.cost = cost;
        }

        public int compareTo(Edge other) {
            return Integer.compare(this.cost, other.cost);
        }
    }

    static class UnionFind {
        int[] parent, rank;

        UnionFind(int n) {
            parent = new int[n];
            rank = new int[n];
            for (int i = 0; i < n; i++) {
                parent[i] = i;
            }
        }

        int find(int x) {
            if (parent[x] != x) {
                parent[x] = find(parent[x]);
            }
            return parent[x];
        }

        boolean union(int x, int y) {
            int px = find(x), py = find(y);
            if (px == py) return false;

            if (rank[px] < rank[py]) {
                parent[px] = py;
            } else if (rank[px] > rank[py]) {
                parent[py] = px;
            } else {
                parent[py] = px;
                rank[px]++;
            }
            return true;
        }
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        int[][] towns = new int[n][3];
        for (int i = 0; i < n; i++) {
            towns[i][0] = sc.nextInt();
            towns[i][1] = sc.nextInt();
            towns[i][2] = i;
        }

        List<Edge> edges = new ArrayList<>();

        Arrays.sort(towns, (a, b) -> Integer.compare(a[0], b[0]));
        for (int i = 0; i < n - 1; i++) {
            int cost = Math.min(Math.abs(towns[i][0] - towns[i+1][0]),
                               Math.abs(towns[i][1] - towns[i+1][1]));
            edges.add(new Edge(towns[i][2], towns[i+1][2], cost));
        }

        Arrays.sort(towns, (a, b) -> Integer.compare(a[1], b[1]));
        for (int i = 0; i < n - 1; i++) {
            int cost = Math.min(Math.abs(towns[i][0] - towns[i+1][0]),
                               Math.abs(towns[i][1] - towns[i+1][1]));
            edges.add(new Edge(towns[i][2], towns[i+1][2], cost));
        }

        Collections.sort(edges);
        UnionFind uf = new UnionFind(n);
        long totalCost = 0;
        int edgesUsed = 0;

        for (Edge edge : edges) {
            if (uf.union(edge.u, edge.v)) {
                totalCost += edge.cost;
                edgesUsed++;
                if (edgesUsed == n - 1) break;
            }
        }

        System.out.println(totalCost);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03682_3P.java" startline="1" endline="95" pcid="44638">
import java.util.*;

public class Main {
    static class Edge implements Comparable<Edge> {
        int u, v, cost;

        Edge(int u, int v, int cost) {
            this.u = u;
            this.v = v;
            this.cost = cost;
        }

        public int compareTo(Edge other) {
            return Integer.compare(this.cost, other.cost);
        }
    }

    static class UnionFind {
        int[] parent, rank;

        UnionFind(int n) {
            parent = new int[n];
            rank = new int[n];
            for (int i = 0; i < n; i++) {
                parent[i] = i;
            }
        }

        int find(int x) {
            if (parent[x] != x) {
                parent[x] = find(parent[x]);
            }
            return parent[x];
        }

        boolean union(int x, int y) {
            int px = find(x), py = find(y);
            if (px == py) return false;

            if (rank[px] < rank[py]) {
                parent[px] = py;
            } else if (rank[px] > rank[py]) {
                parent[py] = px;
            } else {
                parent[py] = px;
                rank[px]++;
            }
            return true;
        }
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        int[][] towns = new int[n][3];
        for (int i = 0; i < n; i++) {
            towns[i][0] = sc.nextInt();
            towns[i][1] = sc.nextInt();
            towns[i][2] = i;
        }

        List<Edge> edges = new ArrayList<>();

        Arrays.sort(towns, (a, b) -> Integer.compare(a[0], b[0]));
        for (int i = 0; i < n - 1; i++) {
            int cost = Math.min(Math.abs(towns[i][0] - towns[i+1][0]),
                               Math.abs(towns[i][1] - towns[i+1][1]));
            edges.add(new Edge(towns[i][2], towns[i+1][2], cost));
        }

        Arrays.sort(towns, (a, b) -> Integer.compare(a[1], b[1]));
        for (int i = 0; i < n - 1; i++) {
            int cost = Math.min(Math.abs(towns[i][0] - towns[i+1][0]),
                               Math.abs(towns[i][1] - towns[i+1][1]));
            edges.add(new Edge(towns[i][2], towns[i+1][2], cost));
        }

        Collections.sort(edges);
        UnionFind uf = new UnionFind(n);
        long totalCost = 0;
        int edgesUsed = 0;

        for (Edge edge : edges) {
            if (uf.union(edge.u, edge.v)) {
                totalCost += edge.cost;
                edgesUsed++;
                if (edgesUsed == n - 1) break;
            }
        }

        System.out.println(totalCost);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03682_2P.java" startline="1" endline="95" pcid="44635">
import java.util.*;

public class Main {
    static class Edge implements Comparable<Edge> {
        int u, v, cost;

        Edge(int u, int v, int cost) {
            this.u = u;
            this.v = v;
            this.cost = cost;
        }

        public int compareTo(Edge other) {
            return Integer.compare(this.cost, other.cost);
        }
    }

    static class UnionFind {
        int[] parent, rank;

        UnionFind(int n) {
            parent = new int[n];
            rank = new int[n];
            for (int i = 0; i < n; i++) {
                parent[i] = i;
            }
        }

        int find(int x) {
            if (parent[x] != x) {
                parent[x] = find(parent[x]);
            }
            return parent[x];
        }

        boolean union(int x, int y) {
            int px = find(x), py = find(y);
            if (px == py) return false;

            if (rank[px] < rank[py]) {
                parent[px] = py;
            } else if (rank[px] > rank[py]) {
                parent[py] = px;
            } else {
                parent[py] = px;
                rank[px]++;
            }
            return true;
        }
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        int[][] towns = new int[n][3];
        for (int i = 0; i < n; i++) {
            towns[i][0] = sc.nextInt();
            towns[i][1] = sc.nextInt();
            towns[i][2] = i;
        }

        List<Edge> edges = new ArrayList<>();

        Arrays.sort(towns, (a, b) -> Integer.compare(a[0], b[0]));
        for (int i = 0; i < n - 1; i++) {
            int cost = Math.min(Math.abs(towns[i][0] - towns[i+1][0]),
                               Math.abs(towns[i][1] - towns[i+1][1]));
            edges.add(new Edge(towns[i][2], towns[i+1][2], cost));
        }

        Arrays.sort(towns, (a, b) -> Integer.compare(a[1], b[1]));
        for (int i = 0; i < n - 1; i++) {
            int cost = Math.min(Math.abs(towns[i][0] - towns[i+1][0]),
                               Math.abs(towns[i][1] - towns[i+1][1]));
            edges.add(new Edge(towns[i][2], towns[i+1][2], cost));
        }

        Collections.sort(edges);
        UnionFind uf = new UnionFind(n);
        long totalCost = 0;
        int edgesUsed = 0;

        for (Edge edge : edges) {
            if (uf.union(edge.u, edge.v)) {
                totalCost += edge.cost;
                edgesUsed++;
                if (edgesUsed == n - 1) break;
            }
        }

        System.out.println(totalCost);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03682_1P.java" startline="1" endline="95" pcid="44634">
import java.util.*;

public class Main {
    static class Edge implements Comparable<Edge> {
        int u, v, cost;

        Edge(int u, int v, int cost) {
            this.u = u;
            this.v = v;
            this.cost = cost;
        }

        public int compareTo(Edge other) {
            return Integer.compare(this.cost, other.cost);
        }
    }

    static class UnionFind {
        int[] parent, rank;

        UnionFind(int n) {
            parent = new int[n];
            rank = new int[n];
            for (int i = 0; i < n; i++) {
                parent[i] = i;
            }
        }

        int find(int x) {
            if (parent[x] != x) {
                parent[x] = find(parent[x]);
            }
            return parent[x];
        }

        boolean union(int x, int y) {
            int px = find(x), py = find(y);
            if (px == py) return false;

            if (rank[px] < rank[py]) {
                parent[px] = py;
            } else if (rank[px] > rank[py]) {
                parent[py] = px;
            } else {
                parent[py] = px;
                rank[px]++;
            }
            return true;
        }
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        int[][] towns = new int[n][3];
        for (int i = 0; i < n; i++) {
            towns[i][0] = sc.nextInt();
            towns[i][1] = sc.nextInt();
            towns[i][2] = i;
        }

        List<Edge> edges = new ArrayList<>();

        Arrays.sort(towns, (a, b) -> Integer.compare(a[0], b[0]));
        for (int i = 0; i < n - 1; i++) {
            int cost = Math.min(Math.abs(towns[i][0] - towns[i+1][0]),
                               Math.abs(towns[i][1] - towns[i+1][1]));
            edges.add(new Edge(towns[i][2], towns[i+1][2], cost));
        }

        Arrays.sort(towns, (a, b) -> Integer.compare(a[1], b[1]));
        for (int i = 0; i < n - 1; i++) {
            int cost = Math.min(Math.abs(towns[i][0] - towns[i+1][0]),
                               Math.abs(towns[i][1] - towns[i+1][1]));
            edges.add(new Edge(towns[i][2], towns[i+1][2], cost));
        }

        Collections.sort(edges);
        UnionFind uf = new UnionFind(n);
        long totalCost = 0;
        int edgesUsed = 0;

        for (Edge edge : edges) {
            if (uf.union(edge.u, edge.v)) {
                totalCost += edge.cost;
                edgesUsed++;
                if (edgesUsed == n - 1) break;
            }
        }

        System.out.println(totalCost);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03684_4P.java" startline="1" endline="95" pcid="44645">
import java.util.*;

public class Main {
    static class Edge implements Comparable<Edge> {
        int u, v, cost;

        Edge(int u, int v, int cost) {
            this.u = u;
            this.v = v;
            this.cost = cost;
        }

        public int compareTo(Edge other) {
            return Integer.compare(this.cost, other.cost);
        }
    }

    static class UnionFind {
        int[] parent, rank;

        UnionFind(int n) {
            parent = new int[n];
            rank = new int[n];
            for (int i = 0; i < n; i++) {
                parent[i] = i;
            }
        }

        int find(int x) {
            if (parent[x] != x) {
                parent[x] = find(parent[x]);
            }
            return parent[x];
        }

        boolean union(int x, int y) {
            int px = find(x), py = find(y);
            if (px == py) return false;

            if (rank[px] < rank[py]) {
                parent[px] = py;
            } else if (rank[px] > rank[py]) {
                parent[py] = px;
            } else {
                parent[py] = px;
                rank[px]++;
            }
            return true;
        }
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        int[][] towns = new int[n][3];
        for (int i = 0; i < n; i++) {
            towns[i][0] = sc.nextInt();
            towns[i][1] = sc.nextInt();
            towns[i][2] = i;
        }

        List<Edge> edges = new ArrayList<>();

        Arrays.sort(towns, (a, b) -> Integer.compare(a[0], b[0]));
        for (int i = 0; i < n - 1; i++) {
            int cost = Math.min(Math.abs(towns[i][0] - towns[i+1][0]),
                               Math.abs(towns[i][1] - towns[i+1][1]));
            edges.add(new Edge(towns[i][2], towns[i+1][2], cost));
        }

        Arrays.sort(towns, (a, b) -> Integer.compare(a[1], b[1]));
        for (int i = 0; i < n - 1; i++) {
            int cost = Math.min(Math.abs(towns[i][0] - towns[i+1][0]),
                               Math.abs(towns[i][1] - towns[i+1][1]));
            edges.add(new Edge(towns[i][2], towns[i+1][2], cost));
        }

        Collections.sort(edges);
        UnionFind uf = new UnionFind(n);
        long totalCost = 0;
        int edgesUsed = 0;

        for (Edge edge : edges) {
            if (uf.union(edge.u, edge.v)) {
                totalCost += edge.cost;
                edgesUsed++;
                if (edgesUsed == n - 1) break;
            }
        }

        System.out.println(totalCost);
    }
}

</source>
</class>

<class classid="367" nclones="2" nlines="16" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03694_3P.java" startline="1" endline="21" pcid="44671">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        int min = Integer.MAX_VALUE;
        int max = Integer.MIN_VALUE;

        for (int i = 0; i < n; i++) {
            int a = sc.nextInt();
            min = Math.min(min, a);
            max = Math.max(max, a);
        }

        System.out.println(max - min);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03308_4P.java" startline="1" endline="21" pcid="65683">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        int min = Integer.MAX_VALUE;
        int max = Integer.MIN_VALUE;

        for (int i = 0; i < n; i++) {
            int a = sc.nextInt();
            min = Math.min(min, a);
            max = Math.max(max, a);
        }

        System.out.println(max - min);
        sc.close();
    }
}

</source>
</class>

<class classid="368" nclones="2" nlines="17" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03698_2P.java" startline="1" endline="22" pcid="44689">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();

        boolean[] seen = new boolean[26];

        for (char c : s.toCharArray()) {
            int index = c - 'a';
            if (seen[index]) {
                System.out.println("no");
                return;
            }
            seen[index] = true;
        }

        System.out.println("yes");
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03698_1P.java" startline="1" endline="22" pcid="65814">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();

        boolean[] seen = new boolean[26];

        for (char c : s.toCharArray()) {
            int index = c - 'a';
            if (seen[index]) {
                System.out.println("no");
                return;
            }
            seen[index] = true;
        }

        System.out.println("yes");
    }
}

</source>
</class>

<class classid="369" nclones="2" nlines="25" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03712_2P.java" startline="1" endline="33" pcid="44730">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int H = sc.nextInt();
        int W = sc.nextInt();
        sc.nextLine();

        String[] image = new String[H];
        for (int i = 0; i < H; i++) {
            image[i] = sc.nextLine();
        }

        for (int i = 0; i < W + 2; i++) {
            System.out.print("#");
        }
        System.out.println();

        for (int i = 0; i < H; i++) {
            System.out.println("#" + image[i] + "#");
        }

        for (int i = 0; i < W + 2; i++) {
            System.out.print("#");
        }
        System.out.println();

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03712_4P.java" startline="1" endline="33" pcid="65820">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int H = sc.nextInt();
        int W = sc.nextInt();
        sc.nextLine();

        String[] image = new String[H];
        for (int i = 0; i < H; i++) {
            image[i] = sc.nextLine();
        }

        for (int i = 0; i < W + 2; i++) {
            System.out.print("#");
        }
        System.out.println();

        for (int i = 0; i < H; i++) {
            System.out.println("#" + image[i] + "#");
        }

        for (int i = 0; i < W + 2; i++) {
            System.out.print("#");
        }
        System.out.println();

        sc.close();
    }
}

</source>
</class>

<class classid="370" nclones="2" nlines="22" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03724_2P.java" startline="1" endline="28" pcid="44782">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int M = sc.nextInt();

        int[] count = new int[N + 1];

        for (int i = 0; i < M; i++) {
            int a = sc.nextInt();
            int b = sc.nextInt();
            count[a]++;
            count[b]++;
        }

        for (int i = 1; i <= N; i++) {
            if (count[i] % 2 != 0) {
                System.out.println("NO");
                return;
            }
        }

        System.out.println("YES");
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03724_3P.java" startline="1" endline="28" pcid="65822">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int M = sc.nextInt();

        int[] count = new int[N + 1];

        for (int i = 0; i < M; i++) {
            int a = sc.nextInt();
            int b = sc.nextInt();
            count[a]++;
            count[b]++;
        }

        for (int i = 1; i <= N; i++) {
            if (count[i] % 2 != 0) {
                System.out.println("NO");
                return;
            }
        }

        System.out.println("YES");
    }
}

</source>
</class>

<class classid="371" nclones="2" nlines="31" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03761_4P.java" startline="1" endline="38" pcid="44879">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String[] strings = new String[n];

        for (int i = 0; i < n; i++) {
            strings[i] = sc.next();
        }

        int[][] freq = new int[n][26];
        for (int i = 0; i < n; i++) {
            for (char c : strings[i].toCharArray()) {
                freq[i][c - 'a']++;
            }
        }

        int[] minFreq = new int[26];
        for (int j = 0; j < 26; j++) {
            minFreq[j] = Integer.MAX_VALUE;
            for (int i = 0; i < n; i++) {
                minFreq[j] = Math.min(minFreq[j], freq[i][j]);
            }
        }

        StringBuilder result = new StringBuilder();
        for (int j = 0; j < 26; j++) {
            for (int k = 0; k < minFreq[j]; k++) {
                result.append((char)('a' + j));
            }
        }

        System.out.println(result.toString());
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03763_0P.java" startline="1" endline="38" pcid="65834">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String[] strings = new String[n];

        for (int i = 0; i < n; i++) {
            strings[i] = sc.next();
        }

        int[][] freq = new int[n][26];
        for (int i = 0; i < n; i++) {
            for (char c : strings[i].toCharArray()) {
                freq[i][c - 'a']++;
            }
        }

        int[] minFreq = new int[26];
        for (int j = 0; j < 26; j++) {
            minFreq[j] = Integer.MAX_VALUE;
            for (int i = 0; i < n; i++) {
                minFreq[j] = Math.min(minFreq[j], freq[i][j]);
            }
        }

        StringBuilder result = new StringBuilder();
        for (int j = 0; j < 26; j++) {
            for (int k = 0; k < minFreq[j]; k++) {
                result.append((char)('a' + j));
            }
        }

        System.out.println(result.toString());
    }
}

</source>
</class>

<class classid="372" nclones="4" nlines="11" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03773_0P.java" startline="1" endline="15" pcid="44909">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();

        int contestTime = (A + B) % 24;

        System.out.println(contestTime);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03773_4P.java" startline="1" endline="15" pcid="65837">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();

        int contestTime = (A + B) % 24;

        System.out.println(contestTime);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03773_2P.java" startline="1" endline="15" pcid="65836">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();

        int contestTime = (A + B) % 24;

        System.out.println(contestTime);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03773_3P.java" startline="1" endline="15" pcid="44910">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();

        int contestTime = (A + B) % 24;

        System.out.println(contestTime);
        sc.close();
    }
}

</source>
</class>

<class classid="373" nclones="8" nlines="14" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03813_2P.java" startline="1" endline="17" pcid="45041">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int x = sc.nextInt();

        if (x < 1200) {
            System.out.println("ABC");
        } else {
            System.out.println("ARC");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03813_3P.java" startline="1" endline="17" pcid="67544">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int x = sc.nextInt();

        if (x < 1200) {
            System.out.println("ABC");
        } else {
            System.out.println("ARC");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03813_2P.java" startline="1" endline="17" pcid="60064">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int x = sc.nextInt();

        if (x < 1200) {
            System.out.println("ABC");
        } else {
            System.out.println("ARC");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03813_0P.java" startline="1" endline="15" pcid="60068">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int x = sc.nextInt();
        if (x < 1200) {
            System.out.println("ABC");
        } else {
            System.out.println("ARC");
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03813_1P.java" startline="1" endline="18" pcid="60063">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int x = sc.nextInt();

        if (x < 1200) {
            System.out.println("ABC");
        } else {
            System.out.println("ARC");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03813_4P.java" startline="1" endline="17" pcid="45044">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int x = sc.nextInt();

        if (x < 1200) {
            System.out.println("ABC");
        } else {
            System.out.println("ARC");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03813_0P.java" startline="1" endline="17" pcid="45042">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int x = sc.nextInt();

        if (x < 1200) {
            System.out.println("ABC");
        } else {
            System.out.println("ARC");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03813_3P.java" startline="1" endline="17" pcid="45043">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int x = sc.nextInt();

        if (x < 1200) {
            System.out.println("ABC");
        } else {
            System.out.println("ARC");
        }

        sc.close();
    }
}

</source>
</class>

<class classid="374" nclones="2" nlines="21" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03827_1P.java" startline="1" endline="25" pcid="45085">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String s = sc.next();

        int x = 0;
        int maxX = 0;

        for (int i = 0; i < n; i++) {
            if (s.charAt(i) == 'I') {
                x++;
            } else {
                x--;
            }
            maxX = Math.max(maxX, x);
        }

        System.out.println(maxX);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03827_0P.java" startline="1" endline="25" pcid="65859">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String s = sc.next();

        int x = 0;
        int maxX = 0;

        for (int i = 0; i < n; i++) {
            if (s.charAt(i) == 'I') {
                x++;
            } else {
                x--;
            }
            maxX = Math.max(maxX, x);
        }

        System.out.println(maxX);
        sc.close();
    }
}

</source>
</class>

<class classid="375" nclones="5" nlines="19" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03835_2P.java" startline="1" endline="24" pcid="45115">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int K = sc.nextInt();
        int S = sc.nextInt();

        int count = 0;

        for (int X = 0; X <= K; X++) {
            for (int Y = 0; Y <= K; Y++) {
                int Z = S - X - Y;
                if (Z >= 0 && Z <= K) {
                    count++;
                }
            }
        }

        System.out.println(count);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03835_0P.java" startline="1" endline="24" pcid="65861">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int K = sc.nextInt();
        int S = sc.nextInt();

        int count = 0;

        for (int X = 0; X <= K; X++) {
            for (int Y = 0; Y <= K; Y++) {
                int Z = S - X - Y;
                if (Z >= 0 && Z <= K) {
                    count++;
                }
            }
        }

        System.out.println(count);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03835_1P.java" startline="1" endline="23" pcid="60144">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int K = sc.nextInt();
        int S = sc.nextInt();
        int count = 0;

        for (int X = 0; X <= K; X++) {
            for (int Y = 0; Y <= K; Y++) {
                int Z = S - X - Y;

                if (Z >= 0 && Z <= K) {
                    count++;
                }
            }
        }
        System.out.println(count);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03835_4P.java" startline="1" endline="24" pcid="45118">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int K = sc.nextInt();
        int S = sc.nextInt();

        int count = 0;

        for (int X = 0; X <= K; X++) {
            for (int Y = 0; Y <= K; Y++) {
                int Z = S - X - Y;
                if (Z >= 0 && Z <= K) {
                    count++;
                }
            }
        }

        System.out.println(count);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03835_1P.java" startline="1" endline="24" pcid="45116">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int K = sc.nextInt();
        int S = sc.nextInt();

        int count = 0;

        for (int X = 0; X <= K; X++) {
            for (int Y = 0; Y <= K; Y++) {
                int Z = S - X - Y;
                if (Z >= 0 && Z <= K) {
                    count++;
                }
            }
        }

        System.out.println(count);
        sc.close();
    }
}

</source>
</class>

<class classid="376" nclones="3" nlines="23" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03854_0P.java" startline="1" endline="30" pcid="45181">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();

        String[] words = {"dream", "dreamer", "erase", "eraser"};

        while (s.length() > 0) {
            boolean found = false;

            for (String word : words) {
                if (s.endsWith(word)) {
                    s = s.substring(0, s.length() - word.length());
                    found = true;
                    break;
                }
            }

            if (!found) {
                System.out.println("NO");
                return;
            }
        }

        System.out.println("YES");
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03856_2P.java" startline="1" endline="30" pcid="65870">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();

        String[] words = {"dream", "dreamer", "erase", "eraser"};

        while (s.length() > 0) {
            boolean found = false;

            for (String word : words) {
                if (s.endsWith(word)) {
                    s = s.substring(0, s.length() - word.length());
                    found = true;
                    break;
                }
            }

            if (!found) {
                System.out.println("NO");
                return;
            }
        }

        System.out.println("YES");
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03856_0P.java" startline="1" endline="30" pcid="65869">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();

        String[] words = {"dream", "dreamer", "erase", "eraser"};

        while (s.length() > 0) {
            boolean found = false;

            for (String word : words) {
                if (s.endsWith(word)) {
                    s = s.substring(0, s.length() - word.length());
                    found = true;
                    break;
                }
            }

            if (!found) {
                System.out.println("NO");
                return;
            }
        }

        System.out.println("YES");
    }
}

</source>
</class>

<class classid="377" nclones="3" nlines="19" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03909_0P.java" startline="1" endline="24" pcid="45237">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int H = sc.nextInt();
        int W = sc.nextInt();

        for (int i = 1; i <= H; i++) {
            for (int j = 1; j <= W; j++) {
                String s = sc.next();
                if (s.equals("snuke")) {
                    char column = (char)('A' + j - 1);
                    System.out.println(column + "" + i);
                    return;
                }
            }
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03909_1P.java" startline="1" endline="24" pcid="65872">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int H = sc.nextInt();
        int W = sc.nextInt();

        for (int i = 1; i <= H; i++) {
            for (int j = 1; j <= W; j++) {
                String s = sc.next();
                if (s.equals("snuke")) {
                    char column = (char)('A' + j - 1);
                    System.out.println(column + "" + i);
                    return;
                }
            }
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03919_4P.java" startline="1" endline="24" pcid="45259">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int H = sc.nextInt();
        int W = sc.nextInt();

        for (int i = 1; i <= H; i++) {
            for (int j = 1; j <= W; j++) {
                String s = sc.next();
                if (s.equals("snuke")) {
                    char column = (char)('A' + j - 1);
                    System.out.println(column + "" + i);
                    return;
                }
            }
        }

        sc.close();
    }
}

</source>
</class>

<class classid="378" nclones="2" nlines="33" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03944_0P.java" startline="1" endline="38" pcid="45278">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int W = sc.nextInt();
        int H = sc.nextInt();
        int N = sc.nextInt();

        int minX = 0, maxX = W;
        int minY = 0, maxY = H;

        for (int i = 0; i < N; i++) {
            int x = sc.nextInt();
            int y = sc.nextInt();
            int a = sc.nextInt();

            if (a == 1) {
                minX = Math.max(minX, x);
            } else if (a == 2) {
                maxX = Math.min(maxX, x);
            } else if (a == 3) {
                minY = Math.max(minY, y);
            } else if (a == 4) {
                maxY = Math.min(maxY, y);
            }
        }

        int width = Math.max(0, maxX - minX);
        int height = Math.max(0, maxY - minY);
        int area = width * height;

        System.out.println(area);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03944_1P.java" startline="1" endline="38" pcid="65882">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int W = sc.nextInt();
        int H = sc.nextInt();
        int N = sc.nextInt();

        int minX = 0, maxX = W;
        int minY = 0, maxY = H;

        for (int i = 0; i < N; i++) {
            int x = sc.nextInt();
            int y = sc.nextInt();
            int a = sc.nextInt();

            if (a == 1) {
                minX = Math.max(minX, x);
            } else if (a == 2) {
                maxX = Math.min(maxX, x);
            } else if (a == 3) {
                minY = Math.max(minY, y);
            } else if (a == 4) {
                maxY = Math.min(maxY, y);
            }
        }

        int width = Math.max(0, maxX - minX);
        int height = Math.max(0, maxY - minY);
        int area = width * height;

        System.out.println(area);
        sc.close();
    }
}

</source>
</class>

<class classid="379" nclones="2" nlines="14" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03962_0P.java" startline="1" endline="19" pcid="45333">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int c = sc.nextInt();

        int count = 1;

        if (b != a) count++;
        if (c != a && c != b) count++;

        System.out.println(count);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03962_2P.java" startline="1" endline="19" pcid="65887">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int c = sc.nextInt();

        int count = 1;

        if (b != a) count++;
        if (c != a && c != b) count++;

        System.out.println(count);
        sc.close();
    }
}

</source>
</class>

<class classid="380" nclones="3" nlines="26" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03964_1P.java" startline="1" endline="32" pcid="45343">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        long takahashi = 0;
        long aoki = 0;

        for (int i = 0; i < n; i++) {
            long t = sc.nextLong();
            long a = sc.nextLong();

            if (i == 0) {
                takahashi = t;
                aoki = a;
            } else {
                long k1 = (takahashi + t - 1) / t;
                long k2 = (aoki + a - 1) / a;
                long k = Math.max(k1, k2);

                takahashi = k * t;
                aoki = k * a;
            }
        }

        System.out.println(takahashi + aoki);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03964_3P.java" startline="1" endline="32" pcid="65888">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        long takahashi = 0;
        long aoki = 0;

        for (int i = 0; i < n; i++) {
            long t = sc.nextLong();
            long a = sc.nextLong();

            if (i == 0) {
                takahashi = t;
                aoki = a;
            } else {
                long k1 = (takahashi + t - 1) / t;
                long k2 = (aoki + a - 1) / a;
                long k = Math.max(k1, k2);

                takahashi = k * t;
                aoki = k * a;
            }
        }

        System.out.println(takahashi + aoki);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03964_2P.java" startline="1" endline="32" pcid="45344">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        long takahashi = 0;
        long aoki = 0;

        for (int i = 0; i < n; i++) {
            long t = sc.nextLong();
            long a = sc.nextLong();

            if (i == 0) {
                takahashi = t;
                aoki = a;
            } else {
                long k1 = (takahashi + t - 1) / t;
                long k2 = (aoki + a - 1) / a;
                long k = Math.max(k1, k2);

                takahashi = k * t;
                aoki = k * a;
            }
        }

        System.out.println(takahashi + aoki);
        sc.close();
    }
}

</source>
</class>

<class classid="381" nclones="3" nlines="14" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03973_2P.java" startline="1" endline="18" pcid="45380">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        long totalProducts = 0;
        for (int i = 0; i < n; i++) {
            int cash = sc.nextInt();
            totalProducts += cash - 1;
        }

        System.out.println(totalProducts);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03973_3P.java" startline="1" endline="18" pcid="65891">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        long totalProducts = 0;
        for (int i = 0; i < n; i++) {
            int cash = sc.nextInt();
            totalProducts += cash - 1;
        }

        System.out.println(totalProducts);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03973_4P.java" startline="1" endline="18" pcid="45384">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        long totalProducts = 0;
        for (int i = 0; i < n; i++) {
            int cash = sc.nextInt();
            totalProducts += cash - 1;
        }

        System.out.println(totalProducts);
        sc.close();
    }
}

</source>
</class>

<class classid="382" nclones="3" nlines="21" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03993_0P.java" startline="1" endline="27" pcid="45412">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n + 1];

        for (int i = 1; i <= n; i++) {
            a[i] = sc.nextInt();
        }

        int friendlyPairs = 0;

        for (int i = 1; i <= n; i++) {
            for (int j = i + 1; j <= n; j++) {
                if (a[i] == j && a[j] == i) {
                    friendlyPairs++;
                }
            }
        }

        System.out.println(friendlyPairs);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03993_1P.java" startline="1" endline="27" pcid="65896">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n + 1];

        for (int i = 1; i <= n; i++) {
            a[i] = sc.nextInt();
        }

        int friendlyPairs = 0;

        for (int i = 1; i <= n; i++) {
            for (int j = i + 1; j <= n; j++) {
                if (a[i] == j && a[j] == i) {
                    friendlyPairs++;
                }
            }
        }

        System.out.println(friendlyPairs);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03993_2P.java" startline="1" endline="27" pcid="45413">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n + 1];

        for (int i = 1; i <= n; i++) {
            a[i] = sc.nextInt();
        }

        int friendlyPairs = 0;

        for (int i = 1; i <= n; i++) {
            for (int j = i + 1; j <= n; j++) {
                if (a[i] == j && a[j] == i) {
                    friendlyPairs++;
                }
            }
        }

        System.out.println(friendlyPairs);
        sc.close();
    }
}

</source>
</class>

<class classid="383" nclones="9" nlines="12" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p03997_0P.java" startline="1" endline="18" pcid="45427">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int a = sc.nextInt();
        int b = sc.nextInt();
        int h = sc.nextInt();

        int area = (a + b) * h / 2;

        System.out.println(area);

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03997_1P.java" startline="1" endline="17" pcid="67587">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int h = sc.nextInt();

        int area = (a + b) * h / 2;

        System.out.println(area);

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03997_4P.java" startline="1" endline="14" pcid="60454">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int h = sc.nextInt();
        int area = (a + b) * h / 2;
        System.out.println(area);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03997_4P.java" startline="1" endline="18" pcid="45430">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int a = sc.nextInt();
        int b = sc.nextInt();
        int h = sc.nextInt();

        int area = (a + b) * h / 2;

        System.out.println(area);

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03997_2P.java" startline="1" endline="16" pcid="45429">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int h = sc.nextInt();

        int area = (a + b) * h / 2;

        System.out.println(area);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03997_1P.java" startline="1" endline="18" pcid="45428">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int a = sc.nextInt();
        int b = sc.nextInt();
        int h = sc.nextInt();

        int area = (a + b) * h / 2;

        System.out.println(area);

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p03997_3P.java" startline="1" endline="16" pcid="45431">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int h = sc.nextInt();

        int area = (a + b) * h / 2;

        System.out.println(area);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03997_2P.java" startline="1" endline="17" pcid="60456">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int h = sc.nextInt();

        int area = (a + b) * h / 2;

        System.out.println(area);

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03997_0P.java" startline="1" endline="17" pcid="60458">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int h = sc.nextInt();

        int area = (a + b) * h / 2;

        System.out.println(area);

        sc.close();
    }
}

</source>
</class>

<class classid="384" nclones="3" nlines="23" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p04031_1P.java" startline="1" endline="31" pcid="45552">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];

        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }

        int minCost = Integer.MAX_VALUE;

        for (int target = -100; target <= 100; target++) {
            int cost = 0;

            for (int i = 0; i < n; i++) {
                if (a[i] != target) {
                    cost += (a[i] - target) * (a[i] - target);
                }
            }

            minCost = Math.min(minCost, cost);
        }

        System.out.println(minCost);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p04025_4P.java" startline="1" endline="31" pcid="65907">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];

        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }

        int minCost = Integer.MAX_VALUE;

        for (int target = -100; target <= 100; target++) {
            int cost = 0;

            for (int i = 0; i < n; i++) {
                if (a[i] != target) {
                    cost += (a[i] - target) * (a[i] - target);
                }
            }

            minCost = Math.min(minCost, cost);
        }

        System.out.println(minCost);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/claude_p04031_4P.java" startline="1" endline="31" pcid="45553">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];

        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }

        int minCost = Integer.MAX_VALUE;

        for (int target = -100; target <= 100; target++) {
            int cost = 0;

            for (int i = 0; i < n; i++) {
                if (a[i] != target) {
                    cost += (a[i] - target) * (a[i] - target);
                }
            }

            minCost = Math.min(minCost, cost);
        }

        System.out.println(minCost);
        sc.close();
    }
}

</source>
</class>

<class classid="385" nclones="2" nlines="30" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p04039_3P.java" startline="1" endline="35" pcid="45573">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();

        Set<Integer> disliked = new HashSet<>();
        for (int i = 0; i < K; i++) {
            disliked.add(sc.nextInt());
        }

        int amount = N;
        while (true) {
            if (isValid(amount, disliked)) {
                System.out.println(amount);
                break;
            }
            amount++;
        }
    }

    private static boolean isValid(int num, Set<Integer> disliked) {
        String str = String.valueOf(num);
        for (char c : str.toCharArray()) {
            int digit = c - '0';
            if (disliked.contains(digit)) {
                return false;
            }
        }
        return true;
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p04039_1P.java" startline="1" endline="35" pcid="65911">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();

        Set<Integer> disliked = new HashSet<>();
        for (int i = 0; i < K; i++) {
            disliked.add(sc.nextInt());
        }

        int amount = N;
        while (true) {
            if (isValid(amount, disliked)) {
                System.out.println(amount);
                break;
            }
            amount++;
        }
    }

    private static boolean isValid(int num, Set<Integer> disliked) {
        String str = String.valueOf(num);
        for (char c : str.toCharArray()) {
            int digit = c - '0';
            if (disliked.contains(digit)) {
                return false;
            }
        }
        return true;
    }
}

</source>
</class>

<class classid="386" nclones="2" nlines="29" similarity="100">
<source file="../preprocessed_Datasplit/train/1/claude_p04039_4P.java" startline="1" endline="34" pcid="45575">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();

        boolean[] disliked = new boolean[10];
        for (int i = 0; i < K; i++) {
            int digit = sc.nextInt();
            disliked[digit] = true;
        }

        for (int amount = N; ; amount++) {
            if (isValid(amount, disliked)) {
                System.out.println(amount);
                break;
            }
        }
    }

    private static boolean isValid(int num, boolean[] disliked) {
        String str = String.valueOf(num);
        for (char c : str.toCharArray()) {
            int digit = c - '0';
            if (disliked[digit]) {
                return false;
            }
        }
        return true;
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p04039_2P.java" startline="1" endline="34" pcid="65912">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();

        boolean[] disliked = new boolean[10];
        for (int i = 0; i < K; i++) {
            int digit = sc.nextInt();
            disliked[digit] = true;
        }

        for (int amount = N; ; amount++) {
            if (isValid(amount, disliked)) {
                System.out.println(amount);
                break;
            }
        }
    }

    private static boolean isValid(int num, boolean[] disliked) {
        String str = String.valueOf(num);
        for (char c : str.toCharArray()) {
            int digit = c - '0';
            if (disliked[digit]) {
                return false;
            }
        }
        return true;
    }
}

</source>
</class>

<class classid="387" nclones="4" nlines="12" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p00019_2P.java" startline="1" endline="14" pcid="45703">
import java.util.Scanner;

public class Factorial {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        long factorial = 1;
        for (int i = 2; i <= n; i++) {
            factorial *= i;
        }
        System.out.println(factorial);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p00019_3P.java" startline="1" endline="14" pcid="65927">
import java.util.Scanner;

public class Factorial {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        long factorial = 1;
        for (int i = 2; i <= n; i++) {
            factorial *= i;
        }
        System.out.println(factorial);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p00019_1P.java" startline="1" endline="16" pcid="45704">
import java.util.Scanner;

public class Factorial {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        long factorial = 1;

        for (int i = 2; i <= n; i++) {
            factorial *= i;
        }

        System.out.println(factorial);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p00019_4P.java" startline="1" endline="16" pcid="45705">
import java.util.Scanner;

public class Factorial {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        long factorial = 1;

        for (int i = 2; i <= n; i++) {
            factorial *= i;
        }

        System.out.println(factorial);
    }
}

</source>
</class>

<class classid="388" nclones="3" nlines="30" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p00025_1P.java" startline="1" endline="33" pcid="45725">
import java.util.Scanner;

public class HitAndBlow {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        while (scanner.hasNext()) {
            int[] a = new int[4];
            int[] b = new int[4];
            for (int i = 0; i < 4; i++) {
                a[i] = scanner.nextInt();
            }
            for (int i = 0; i < 4; i++) {
                b[i] = scanner.nextInt();
            }

            int hit = 0, blow = 0;
            for (int i = 0; i < 4; i++) {
                if (a[i] == b[i]) {
                    hit++;
                }
            }
            for (int i = 0; i < 4; i++) {
                for (int j = 0; j < 4; j++) {
                    if (i != j && a[i] == b[j]) {
                        blow++;
                    }
                }
            }
            System.out.println(hit + " " + blow);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p00025_0P.java" startline="1" endline="38" pcid="65932">
import java.util.Scanner;

public class HitAndBlow {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        while (scanner.hasNext()) {
            int[] a = new int[4];
            int[] b = new int[4];

            for (int i = 0; i < 4; i++) {
                a[i] = scanner.nextInt();
            }
            for (int i = 0; i < 4; i++) {
                b[i] = scanner.nextInt();
            }

            int hit = 0, blow = 0;

            for (int i = 0; i < 4; i++) {
                if (a[i] == b[i]) {
                    hit++;
                }
            }

            for (int i = 0; i < 4; i++) {
                for (int j = 0; j < 4; j++) {
                    if (i != j && a[i] == b[j]) {
                        blow++;
                    }
                }
            }

            System.out.println(hit + " " + blow);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p00025_3P.java" startline="1" endline="36" pcid="45731">
import java.util.Scanner;

public class HitAndBlow {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        while (scanner.hasNext()) {
            int[] a = new int[4];
            int[] b = new int[4];

            for (int i = 0; i < 4; i++) {
                a[i] = scanner.nextInt();
            }
            for (int i = 0; i < 4; i++) {
                b[i] = scanner.nextInt();
            }

            int hit = 0, blow = 0;
            for (int i = 0; i < 4; i++) {
                if (a[i] == b[i]) {
                    hit++;
                }
            }

            for (int i = 0; i < 4; i++) {
                for (int j = 0; j < 4; j++) {
                    if (i != j && a[i] == b[j]) {
                        blow++;
                    }
                }
            }

            System.out.println(hit + " " + blow);
        }
    }
}

</source>
</class>

<class classid="389" nclones="3" nlines="26" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p00063_1P.java" startline="1" endline="32" pcid="45892">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int count = 0;

        while (scanner.hasNextLine()) {
            String line = scanner.nextLine().trim();
            if (isPalindrome(line)) {
                count++;
            }
        }

        System.out.println(count);
    }

    private static boolean isPalindrome(String s) {
        int left = 0;
        int right = s.length() - 1;

        while (left < right) {
            if (s.charAt(left) != s.charAt(right)) {
                return false;
            }
            left++;
            right--;
        }
        return true;
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p00063_2P.java" startline="1" endline="32" pcid="65957">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int count = 0;

        while (scanner.hasNextLine()) {
            String line = scanner.nextLine().trim();
            if (isPalindrome(line)) {
                count++;
            }
        }

        System.out.println(count);
    }

    private static boolean isPalindrome(String s) {
        int left = 0;
        int right = s.length() - 1;

        while (left < right) {
            if (s.charAt(left) != s.charAt(right)) {
                return false;
            }
            left++;
            right--;
        }
        return true;
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p00063_3P.java" startline="1" endline="32" pcid="45895">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int count = 0;

        while (scanner.hasNextLine()) {
            String line = scanner.nextLine().trim();
            if (isPalindrome(line)) {
                count++;
            }
        }

        System.out.println(count);
    }

    private static boolean isPalindrome(String s) {
        int left = 0;
        int right = s.length() - 1;

        while (left < right) {
            if (s.charAt(left) != s.charAt(right)) {
                return false;
            }
            left++;
            right--;
        }
        return true;
    }
}

</source>
</class>

<class classid="390" nclones="2" nlines="12" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p00134_1P.java" startline="1" endline="16" pcid="46191">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        long sum = 0;

        for (int i = 0; i < n; i++) {
            sum += scanner.nextInt();
        }

        System.out.println(sum / n);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p00134_4P.java" startline="1" endline="16" pcid="65991">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        long sum = 0;

        for (int i = 0; i < n; i++) {
            sum += scanner.nextInt();
        }

        System.out.println(sum / n);
    }
}

</source>
</class>

<class classid="391" nclones="4" nlines="22" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p00158_0P.java" startline="1" endline="23" pcid="46283">
import java.util.Scanner;

public class CollatzConjecture {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        while (true) {
            int n = scanner.nextInt();
            if (n == 0) break;
            int count = 0;
            while (n != 1) {
                if (n % 2 == 0) {
                    n /= 2;
                } else {
                    n = 3 * n + 1;
                }
                count++;
            }
            System.out.println(count);
        }
        scanner.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p00158_4P.java" startline="1" endline="24" pcid="66003">
import java.util.Scanner;

public class CollatzConjecture {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        while (true) {
            int n = scanner.nextInt();
            if (n == 0) break;

            int count = 0;
            while (n != 1) {
                if (n % 2 == 0) {
                    n /= 2;
                } else {
                    n = 3 * n + 1;
                }
                count++;
            }
            System.out.println(count);
        }
        scanner.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p00158_2P.java" startline="1" endline="23" pcid="66002">
import java.util.Scanner;

public class CollatzConjecture {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        while (true) {
            int n = scanner.nextInt();
            if (n == 0) break;
            int count = 0;
            while (n != 1) {
                if (n % 2 == 0) {
                    n /= 2;
                } else {
                    n = 3 * n + 1;
                }
                count++;
            }
            System.out.println(count);
        }
        scanner.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p00158_1P.java" startline="1" endline="23" pcid="46284">
import java.util.Scanner;

public class CollatzConjecture {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        while (true) {
            int n = scanner.nextInt();
            if (n == 0) break;
            int count = 0;
            while (n != 1) {
                if (n % 2 == 0) {
                    n /= 2;
                } else {
                    n = 3 * n + 1;
                }
                count++;
            }
            System.out.println(count);
        }
        scanner.close();
    }
}

</source>
</class>

<class classid="392" nclones="2" nlines="15" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p00173_4P.java" startline="1" endline="17" pcid="46331">
import java.util.Scanner;

public class HauntedHouse {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        for (int i = 0; i < 9; i++) {
            String name = scanner.next();
            int morning = scanner.nextInt();
            int afternoon = scanner.nextInt();
            int totalVisitors = morning + afternoon;
            int income = morning * 200 + afternoon * 300;
            System.out.println(name + " " + totalVisitors + " " + income);
        }
        scanner.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p00173_3P.java" startline="1" endline="17" pcid="66008">
import java.util.Scanner;

public class HauntedHouse {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        for (int i = 0; i < 9; i++) {
            String name = scanner.next();
            int morning = scanner.nextInt();
            int afternoon = scanner.nextInt();
            int totalVisitors = morning + afternoon;
            int income = morning * 200 + afternoon * 300;
            System.out.println(name + " " + totalVisitors + " " + income);
        }
        scanner.close();
    }
}

</source>
</class>

<class classid="393" nclones="2" nlines="44" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p00183_2P.java" startline="1" endline="49" pcid="46361">
import java.util.Scanner;

public class TicTacToe {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        while (true) {
            String line1 = scanner.nextLine();
            if (line1.equals("0")) {
                break;
            }
            String line2 = scanner.nextLine();
            String line3 = scanner.nextLine();

            char[][] board = new char[3][3];
            board[0] = line1.toCharArray();
            board[1] = line2.toCharArray();
            board[2] = line3.toCharArray();

            String result = checkWinner(board);
            System.out.println(result);
        }
        scanner.close();
    }

    private static String checkWinner(char[][] board) {
        for (int i = 0; i < 3; i++) {
            if (board[i][0] == board[i][1] && board[i][1] == board[i][2]) {
                if (board[i][0] == 'b') return "b";
                if (board[i][0] == 'w') return "w";
            }
        }
        for (int j = 0; j < 3; j++) {
            if (board[0][j] == board[1][j] && board[1][j] == board[2][j]) {
                if (board[0][j] == 'b') return "b";
                if (board[0][j] == 'w') return "w";
            }
        }
        if (board[0][0] == board[1][1] && board[1][1] == board[2][2]) {
            if (board[0][0] == 'b') return "b";
            if (board[0][0] == 'w') return "w";
        }
        if (board[0][2] == board[1][1] && board[1][1] == board[2][0]) {
            if (board[0][2] == 'b') return "b";
            if (board[0][2] == 'w') return "w";
        }
        return "NA";
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p00183_1P.java" startline="1" endline="52" pcid="66010">
import java.util.Scanner;

public class TicTacToe {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        while (true) {
            String line1 = scanner.nextLine();
            if (line1.equals("0")) {
                break;
            }
            String line2 = scanner.nextLine();
            String line3 = scanner.nextLine();

            char[][] board = new char[3][3];
            board[0] = line1.toCharArray();
            board[1] = line2.toCharArray();
            board[2] = line3.toCharArray();

            String result = checkWinner(board);
            System.out.println(result);
        }
        scanner.close();
    }

    private static String checkWinner(char[][] board) {
        for (int i = 0; i < 3; i++) {
            if (board[i][0] == board[i][1] && board[i][1] == board[i][2]) {
                if (board[i][0] == 'b') return "b";
                if (board[i][0] == 'w') return "w";
            }
        }

        for (int j = 0; j < 3; j++) {
            if (board[0][j] == board[1][j] && board[1][j] == board[2][j]) {
                if (board[0][j] == 'b') return "b";
                if (board[0][j] == 'w') return "w";
            }
        }

        if (board[0][0] == board[1][1] && board[1][1] == board[2][2]) {
            if (board[0][0] == 'b') return "b";
            if (board[0][0] == 'w') return "w";
        }
        if (board[0][2] == board[1][1] && board[1][1] == board[2][0]) {
            if (board[0][2] == 'b') return "b";
            if (board[0][2] == 'w') return "w";
        }

        return "NA";
    }
}

</source>
</class>

<class classid="394" nclones="2" nlines="23" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p00219_3P.java" startline="1" endline="27" pcid="46459">
import java.util.Scanner;

public class Histogram {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        while (true) {
            int n = scanner.nextInt();
            if (n == 0) break;

            int[] counts = new int[10];
            for (int i = 0; i < n; i++) {
                int c = scanner.nextInt();
                counts[c]++;
            }

            for (int i = 0; i < 10; i++) {
                if (counts[i] == 0) {
                    System.out.println("-");
                } else {
                    System.out.println("*".repeat(counts[i]));
                }
            }
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p00219_2P.java" startline="1" endline="26" pcid="66019">
import java.util.Scanner;

public class Histogram {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        while (true) {
            int n = scanner.nextInt();
            if (n == 0) break;

            int[] counts = new int[10];
            for (int i = 0; i < n; i++) {
                int c = scanner.nextInt();
                counts[c]++;
            }

            for (int i = 0; i < 10; i++) {
                if (counts[i] == 0) {
                    System.out.println("-");
                } else {
                    System.out.println("*".repeat(counts[i]));
                }
            }
        }
    }
}

</source>
</class>

<class classid="395" nclones="2" nlines="24" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p00238_1P.java" startline="1" endline="25" pcid="46494">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        while (true) {
            int t = scanner.nextInt();
            if (t == 0) break;
            int n = scanner.nextInt();
            int total = 0;
            for (int i = 0; i < n; i++) {
                int s = scanner.nextInt();
                int f = scanner.nextInt();
                total += (f - s);
            }
            if (total >= t) {
                System.out.println("OK");
            } else {
                System.out.println(t - total);
            }
        }
        scanner.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p00238_3P.java" startline="1" endline="25" pcid="66026">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        while (true) {
            int t = scanner.nextInt();
            if (t == 0) break;
            int n = scanner.nextInt();
            int total = 0;
            for (int i = 0; i < n; i++) {
                int s = scanner.nextInt();
                int f = scanner.nextInt();
                total += (f - s);
            }
            if (total >= t) {
                System.out.println("OK");
            } else {
                System.out.println(t - total);
            }
        }
        scanner.close();
    }
}

</source>
</class>

<class classid="396" nclones="4" nlines="26" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p00241_1P.java" startline="1" endline="31" pcid="46505">
import java.util.Scanner;

public class QuaternionMultiplication {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        while (true) {
            int n = scanner.nextInt();
            if (n == 0) break;

            for (int i = 0; i < n; i++) {
                int x1 = scanner.nextInt();
                int y1 = scanner.nextInt();
                int z1 = scanner.nextInt();
                int w1 = scanner.nextInt();
                int x2 = scanner.nextInt();
                int y2 = scanner.nextInt();
                int z2 = scanner.nextInt();
                int w2 = scanner.nextInt();

                int x3 = x1*x2 - y1*y2 - z1*z2 - w1*w2;
                int y3 = x1*y2 + y1*x2 + z1*w2 - w1*z2;
                int z3 = x1*z2 - y1*w2 + z1*x2 + w1*y2;
                int w3 = x1*w2 + y1*z2 - z1*y2 + w1*x2;

                System.out.println(x3 + " " + y3 + " " + z3 + " " + w3);
            }
        }
        scanner.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p00241_3P.java" startline="1" endline="30" pcid="66029">
import java.util.Scanner;

public class QuaternionMultiplication {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        while (true) {
            int n = scanner.nextInt();
            if (n == 0) break;
            for (int i = 0; i < n; i++) {
                int x1 = scanner.nextInt();
                int y1 = scanner.nextInt();
                int z1 = scanner.nextInt();
                int w1 = scanner.nextInt();
                int x2 = scanner.nextInt();
                int y2 = scanner.nextInt();
                int z2 = scanner.nextInt();
                int w2 = scanner.nextInt();

                int x3 = x1 * x2 - y1 * y2 - z1 * z2 - w1 * w2;
                int y3 = x1 * y2 + y1 * x2 + z1 * w2 - w1 * z2;
                int z3 = x1 * z2 - y1 * w2 + z1 * x2 + w1 * y2;
                int w3 = x1 * w2 + y1 * z2 - z1 * y2 + w1 * x2;

                System.out.println(x3 + " " + y3 + " " + z3 + " " + w3);
            }
        }
        scanner.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p00241_4P.java" startline="1" endline="31" pcid="46506">
import java.util.Scanner;

public class QuaternionMultiplication {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        while (true) {
            int n = scanner.nextInt();
            if (n == 0) break;

            for (int i = 0; i < n; i++) {
                int x1 = scanner.nextInt();
                int y1 = scanner.nextInt();
                int z1 = scanner.nextInt();
                int w1 = scanner.nextInt();
                int x2 = scanner.nextInt();
                int y2 = scanner.nextInt();
                int z2 = scanner.nextInt();
                int w2 = scanner.nextInt();

                int x3 = x1*x2 - y1*y2 - z1*z2 - w1*w2;
                int y3 = x1*y2 + y1*x2 + z1*w2 - w1*z2;
                int z3 = x1*z2 - y1*w2 + z1*x2 + w1*y2;
                int w3 = x1*w2 + y1*z2 - z1*y2 + w1*x2;

                System.out.println(x3 + " " + y3 + " " + z3 + " " + w3);
            }
        }
        scanner.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p00241_2P.java" startline="1" endline="30" pcid="46507">
import java.util.Scanner;

public class QuaternionMultiplication {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        while (true) {
            int n = scanner.nextInt();
            if (n == 0) break;
            for (int i = 0; i < n; i++) {
                int x1 = scanner.nextInt();
                int y1 = scanner.nextInt();
                int z1 = scanner.nextInt();
                int w1 = scanner.nextInt();
                int x2 = scanner.nextInt();
                int y2 = scanner.nextInt();
                int z2 = scanner.nextInt();
                int w2 = scanner.nextInt();

                int x3 = x1*x2 - y1*y2 - z1*z2 - w1*w2;
                int y3 = x1*y2 + y1*x2 + z1*w2 - w1*z2;
                int z3 = x1*z2 - y1*w2 + z1*x2 + w1*y2;
                int w3 = x1*w2 + y1*z2 - z1*y2 + w1*x2;

                System.out.println(x3 + " " + y3 + " " + z3 + " " + w3);
            }
        }
        scanner.close();
    }
}

</source>
</class>

<class classid="397" nclones="3" nlines="11" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p00251_0P.java" startline="1" endline="13" pcid="46516">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int sum = 0;
        for (int i = 0; i < 10; i++) {
            sum += scanner.nextInt();
        }
        System.out.println(sum);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p00251_2P.java" startline="1" endline="13" pcid="66030">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int sum = 0;
        for (int i = 0; i < 10; i++) {
            sum += scanner.nextInt();
        }
        System.out.println(sum);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p00251_4P.java" startline="1" endline="13" pcid="46518">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int sum = 0;
        for (int i = 0; i < 10; i++) {
            sum += scanner.nextInt();
        }
        System.out.println(sum);
    }
}

</source>
</class>

<class classid="398" nclones="2" nlines="49" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p00489_0P.java" startline="1" endline="57" pcid="46786">
import java.util.*;

public class Soccer {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int matches = N * (N - 1) / 2;
        int[] points = new int[N + 1];

        for (int i = 0; i < matches; i++) {
            int A = sc.nextInt();
            int B = sc.nextInt();
            int C = sc.nextInt();
            int D = sc.nextInt();

            if (C > D) {
                points[A] += 3;
            } else if (C < D) {
                points[B] += 3;
            } else {
                points[A] += 1;
                points[B] += 1;
            }
        }

        List<Team> teams = new ArrayList<>();
        for (int i = 1; i <= N; i++) {
            teams.add(new Team(i, points[i]));
        }

        Collections.sort(teams, (a, b) -> b.points - a.points);

        int[] ranks = new int[N + 1];
        int rank = 1;
        for (int i = 0; i < teams.size(); i++) {
            if (i > 0 && teams.get(i).points != teams.get(i - 1).points) {
                rank = i + 1;
            }
            ranks[teams.get(i).id] = rank;
        }

        for (int i = 1; i <= N; i++) {
            System.out.println(ranks[i]);
        }
    }

    static class Team {
        int id;
        int points;

        Team(int id, int points) {
            this.id = id;
            this.points = points;
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p00489_3P.java" startline="1" endline="58" pcid="66062">
import java.util.*;

public class Soccer {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int matches = N * (N - 1) / 2;

        int[] points = new int[N + 1];

        for (int i = 0; i < matches; i++) {
            int A = sc.nextInt();
            int B = sc.nextInt();
            int C = sc.nextInt();
            int D = sc.nextInt();

            if (C > D) {
                points[A] += 3;
            } else if (C < D) {
                points[B] += 3;
            } else {
                points[A] += 1;
                points[B] += 1;
            }
        }

        List<Team> teams = new ArrayList<>();
        for (int i = 1; i <= N; i++) {
            teams.add(new Team(i, points[i]));
        }

        Collections.sort(teams, (a, b) -> b.points - a.points);

        int[] ranks = new int[N + 1];
        int rank = 1;
        for (int i = 0; i < teams.size(); i++) {
            if (i > 0 && teams.get(i).points != teams.get(i - 1).points) {
                rank = i + 1;
            }
            ranks[teams.get(i).id] = rank;
        }

        for (int i = 1; i <= N; i++) {
            System.out.println(ranks[i]);
        }
    }

    static class Team {
        int id;
        int points;

        Team(int id, int points) {
            this.id = id;
            this.points = points;
        }
    }
}

</source>
</class>

<class classid="399" nclones="3" nlines="17" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p00531_1P.java" startline="1" endline="21" pcid="46870">
import java.util.Scanner;

public class WaterRate {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int A = scanner.nextInt();
        int B = scanner.nextInt();
        int C = scanner.nextInt();
        int D = scanner.nextInt();
        int P = scanner.nextInt();

        int xCost = A * P;
        int yCost = B;
        if (P > C) {
            yCost += (P - C) * D;
        }

        System.out.println(Math.min(xCost, yCost));
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p00531_4P.java" startline="1" endline="21" pcid="66068">
import java.util.Scanner;

public class WaterRate {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int A = scanner.nextInt();
        int B = scanner.nextInt();
        int C = scanner.nextInt();
        int D = scanner.nextInt();
        int P = scanner.nextInt();

        int xCost = A * P;
        int yCost = B;
        if (P > C) {
            yCost += (P - C) * D;
        }

        System.out.println(Math.min(xCost, yCost));
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p00531_2P.java" startline="1" endline="21" pcid="46871">
import java.util.Scanner;

public class WaterRate {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int A = scanner.nextInt();
        int B = scanner.nextInt();
        int C = scanner.nextInt();
        int D = scanner.nextInt();
        int P = scanner.nextInt();

        int xCost = A * P;
        int yCost = B;
        if (P > C) {
            yCost += (P - C) * D;
        }

        System.out.println(Math.min(xCost, yCost));
    }
}

</source>
</class>

<class classid="400" nclones="3" nlines="32" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p00670_2P.java" startline="1" endline="33" pcid="46995">
import java.util.Arrays;
import java.util.Scanner;

public class Spellcasters {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        while (true) {
            int n = scanner.nextInt();
            int S = scanner.nextInt();
            if (n == 0 && S == 0) {
                break;
            }
            int[] r = new int[n];
            for (int i = 0; i < n; i++) {
                r[i] = scanner.nextInt();
            }
            Arrays.sort(r);
            int count = 0;
            int left = 0;
            int right = n - 1;
            while (left < right) {
                if (r[left] + r[right] > S) {
                    count += right - left;
                    right--;
                } else {
                    left++;
                }
            }
            System.out.println(count);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p00670_0P.java" startline="1" endline="33" pcid="66081">
import java.util.Arrays;
import java.util.Scanner;

public class Spellcasters {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        while (true) {
            int n = scanner.nextInt();
            int S = scanner.nextInt();
            if (n == 0 && S == 0) {
                break;
            }
            int[] r = new int[n];
            for (int i = 0; i < n; i++) {
                r[i] = scanner.nextInt();
            }
            Arrays.sort(r);
            int count = 0;
            int left = 0;
            int right = n - 1;
            while (left < right) {
                if (r[left] + r[right] > S) {
                    count += right - left;
                    right--;
                } else {
                    left++;
                }
            }
            System.out.println(count);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p00670_3P.java" startline="1" endline="33" pcid="66082">
import java.util.Arrays;
import java.util.Scanner;

public class Spellcasters {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        while (true) {
            int n = scanner.nextInt();
            int S = scanner.nextInt();
            if (n == 0 && S == 0) {
                break;
            }
            int[] r = new int[n];
            for (int i = 0; i < n; i++) {
                r[i] = scanner.nextInt();
            }
            Arrays.sort(r);
            int count = 0;
            int left = 0;
            int right = n - 1;
            while (left < right) {
                if (r[left] + r[right] > S) {
                    count += right - left;
                    right--;
                } else {
                    left++;
                }
            }
            System.out.println(count);
        }
    }
}

</source>
</class>

<class classid="401" nclones="2" nlines="26" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p01223_4P.java" startline="1" endline="32" pcid="47427">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int t = scanner.nextInt();

        for (int i = 0; i < t; i++) {
            int n = scanner.nextInt();
            int[] heights = new int[n];

            for (int j = 0; j < n; j++) {
                heights[j] = scanner.nextInt();
            }

            int maxUp = 0;
            int maxDown = 0;

            for (int j = 1; j < n; j++) {
                int diff = heights[j] - heights[j - 1];
                if (diff > maxUp) {
                    maxUp = diff;
                } else if (-diff > maxDown) {
                    maxDown = -diff;
                }
            }

            System.out.println(maxUp + " " + maxDown);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p01223_3P.java" startline="1" endline="32" pcid="66130">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int t = scanner.nextInt();

        for (int i = 0; i < t; i++) {
            int n = scanner.nextInt();
            int[] heights = new int[n];

            for (int j = 0; j < n; j++) {
                heights[j] = scanner.nextInt();
            }

            int maxUp = 0;
            int maxDown = 0;

            for (int j = 1; j < n; j++) {
                int diff = heights[j] - heights[j - 1];
                if (diff > maxUp) {
                    maxUp = diff;
                } else if (-diff > maxDown) {
                    maxDown = -diff;
                }
            }

            System.out.println(maxUp + " " + maxDown);
        }
    }
}

</source>
</class>

<class classid="402" nclones="2" nlines="31" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p01389_2P.java" startline="1" endline="37" pcid="47559">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int H = sc.nextInt();
        int W = sc.nextInt();
        int[][] grid = new int[H][W];

        for (int i = 0; i < H; i++) {
            String line = sc.next();
            for (int j = 0; j < W; j++) {
                grid[i][j] = line.charAt(j) - '0';
            }
        }

        int[][] dp = new int[H][W];
        dp[0][0] = 0;

        for (int i = 0; i < H; i++) {
            for (int j = 0; j < W; j++) {
                if (i == 0 && j == 0) continue;
                int min = Integer.MAX_VALUE;
                if (i > 0) {
                    min = Math.min(min, dp[i-1][j]);
                }
                if (j > 0) {
                    min = Math.min(min, dp[i][j-1]);
                }
                dp[i][j] = min + grid[i][j];
            }
        }

        System.out.println(dp[H-1][W-1]);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p01389_4P.java" startline="1" endline="38" pcid="66145">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int H = sc.nextInt();
        int W = sc.nextInt();
        int[][] grid = new int[H][W];

        for (int i = 0; i < H; i++) {
            String line = sc.next();
            for (int j = 0; j < W; j++) {
                grid[i][j] = line.charAt(j) - '0';
            }
        }

        int[][] dp = new int[H][W];
        dp[0][0] = 0;

        for (int i = 0; i < H; i++) {
            for (int j = 0; j < W; j++) {
                if (i == 0 && j == 0) continue;

                int min = Integer.MAX_VALUE;
                if (i > 0) {
                    min = Math.min(min, dp[i-1][j]);
                }
                if (j > 0) {
                    min = Math.min(min, dp[i][j-1]);
                }
                dp[i][j] = min + grid[i][j];
            }
        }

        System.out.println(dp[H-1][W-1]);
    }
}

</source>
</class>

<class classid="403" nclones="2" nlines="33" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p02257_0P.java" startline="1" endline="38" pcid="47736">
import java.util.Scanner;

public class PrimeNumbers {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int count = 0;

        for (int i = 0; i < N; i++) {
            int num = scanner.nextInt();
            if (isPrime(num)) {
                count++;
            }
        }

        System.out.println(count);
        scanner.close();
    }

    private static boolean isPrime(int num) {
        if (num <= 1) {
            return false;
        }
        if (num == 2) {
            return true;
        }
        if (num % 2 == 0) {
            return false;
        }
        for (int i = 3; i * i <= num; i += 2) {
            if (num % i == 0) {
                return false;
            }
        }
        return true;
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p02257_3P.java" startline="1" endline="38" pcid="66170">
import java.util.Scanner;

public class PrimeNumbers {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int count = 0;

        for (int i = 0; i < N; i++) {
            int num = scanner.nextInt();
            if (isPrime(num)) {
                count++;
            }
        }

        System.out.println(count);
        scanner.close();
    }

    private static boolean isPrime(int num) {
        if (num <= 1) {
            return false;
        }
        if (num == 2) {
            return true;
        }
        if (num % 2 == 0) {
            return false;
        }
        for (int i = 3; i * i <= num; i += 2) {
            if (num % i == 0) {
                return false;
            }
        }
        return true;
    }
}

</source>
</class>

<class classid="404" nclones="2" nlines="56" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p02363_4P.java" startline="1" endline="61" pcid="47963">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int V = sc.nextInt();
        int E = sc.nextInt();
        long[][] dist = new long[V][V];

        for (int i = 0; i < V; i++) {
            for (int j = 0; j < V; j++) {
                if (i == j) dist[i][j] = 0;
                else dist[i][j] = Long.MAX_VALUE;
            }
        }

        for (int i = 0; i < E; i++) {
            int s = sc.nextInt();
            int t = sc.nextInt();
            int d = sc.nextInt();
            dist[s][t] = d;
        }

        for (int k = 0; k < V; k++) {
            for (int i = 0; i < V; i++) {
                if (dist[i][k] == Long.MAX_VALUE) continue;
                for (int j = 0; j < V; j++) {
                    if (dist[k][j] == Long.MAX_VALUE) continue;
                    if (dist[i][j] > dist[i][k] + dist[k][j]) {
                        dist[i][j] = dist[i][k] + dist[k][j];
                    }
                }
            }
        }

        boolean hasNegativeCycle = false;
        for (int i = 0; i < V; i++) {
            if (dist[i][i] < 0) {
                hasNegativeCycle = true;
                break;
            }
        }

        if (hasNegativeCycle) {
            System.out.println("NEGATIVE CYCLE");
        } else {
            for (int i = 0; i < V; i++) {
                for (int j = 0; j < V; j++) {
                    if (j != 0) System.out.print(" ");
                    if (dist[i][j] == Long.MAX_VALUE) {
                        System.out.print("INF");
                    } else {
                        System.out.print(dist[i][j]);
                    }
                }
                System.out.println();
            }
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p02363_2P.java" startline="1" endline="61" pcid="66197">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int V = sc.nextInt();
        int E = sc.nextInt();
        long[][] dist = new long[V][V];

        for (int i = 0; i < V; i++) {
            for (int j = 0; j < V; j++) {
                if (i == j) dist[i][j] = 0;
                else dist[i][j] = Long.MAX_VALUE;
            }
        }

        for (int i = 0; i < E; i++) {
            int s = sc.nextInt();
            int t = sc.nextInt();
            int d = sc.nextInt();
            dist[s][t] = d;
        }

        for (int k = 0; k < V; k++) {
            for (int i = 0; i < V; i++) {
                if (dist[i][k] == Long.MAX_VALUE) continue;
                for (int j = 0; j < V; j++) {
                    if (dist[k][j] == Long.MAX_VALUE) continue;
                    if (dist[i][j] > dist[i][k] + dist[k][j]) {
                        dist[i][j] = dist[i][k] + dist[k][j];
                    }
                }
            }
        }

        boolean hasNegativeCycle = false;
        for (int i = 0; i < V; i++) {
            if (dist[i][i] < 0) {
                hasNegativeCycle = true;
                break;
            }
        }

        if (hasNegativeCycle) {
            System.out.println("NEGATIVE CYCLE");
        } else {
            for (int i = 0; i < V; i++) {
                for (int j = 0; j < V; j++) {
                    if (j != 0) System.out.print(" ");
                    if (dist[i][j] == Long.MAX_VALUE) {
                        System.out.print("INF");
                    } else {
                        System.out.print(dist[i][j]);
                    }
                }
                System.out.println();
            }
        }
    }
}

</source>
</class>

<class classid="405" nclones="2" nlines="12" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p02379_3P.java" startline="1" endline="15" pcid="47993">
import java.util.Scanner;

public class Distance {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        double x1 = scanner.nextDouble();
        double y1 = scanner.nextDouble();
        double x2 = scanner.nextDouble();
        double y2 = scanner.nextDouble();

        double distance = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));
        System.out.printf("%.8f%n", distance);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p02379_4P.java" startline="1" endline="15" pcid="66201">
import java.util.Scanner;

public class Distance {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        double x1 = scanner.nextDouble();
        double y1 = scanner.nextDouble();
        double x2 = scanner.nextDouble();
        double y2 = scanner.nextDouble();

        double distance = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));
        System.out.printf("%.8f%n", distance);
    }
}

</source>
</class>

<class classid="406" nclones="4" nlines="15" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p02392_4P.java" startline="1" endline="17" pcid="48045">
import java.util.Scanner;

public class Range {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int a = scanner.nextInt();
        int b = scanner.nextInt();
        int c = scanner.nextInt();

        if (a < b && b < c) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p02392_2P.java" startline="1" endline="17" pcid="66206">
import java.util.Scanner;

public class Range {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int a = scanner.nextInt();
        int b = scanner.nextInt();
        int c = scanner.nextInt();

        if (a < b && b < c) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p02392_1P.java" startline="1" endline="17" pcid="48046">
import java.util.Scanner;

public class Range {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int a = scanner.nextInt();
        int b = scanner.nextInt();
        int c = scanner.nextInt();

        if (a < b && b < c) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p02392_3P.java" startline="1" endline="17" pcid="48048">
import java.util.Scanner;

public class Range {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int a = scanner.nextInt();
        int b = scanner.nextInt();
        int c = scanner.nextInt();

        if (a < b && b < c) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
</class>

<class classid="407" nclones="2" nlines="13" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p02393_2P.java" startline="1" endline="18" pcid="48049">
import java.util.Arrays;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int[] numbers = new int[3];

        for (int i = 0; i < 3; i++) {
            numbers[i] = scanner.nextInt();
        }

        Arrays.sort(numbers);

        System.out.println(numbers[0] + " " + numbers[1] + " " + numbers[2]);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p02393_0P.java" startline="1" endline="15" pcid="66207">
import java.util.Arrays;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int[] numbers = new int[3];
        for (int i = 0; i < 3; i++) {
            numbers[i] = scanner.nextInt();
        }
        Arrays.sort(numbers);
        System.out.println(numbers[0] + " " + numbers[1] + " " + numbers[2]);
    }
}

</source>
</class>

<class classid="408" nclones="2" nlines="15" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p02396_3P.java" startline="1" endline="17" pcid="48059">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int caseNumber = 1;
        while (true) {
            int x = scanner.nextInt();
            if (x == 0) {
                break;
            }
            System.out.println("Case " + caseNumber + ": " + x);
            caseNumber++;
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p02396_0P.java" startline="1" endline="18" pcid="66208">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int caseNumber = 1;

        while (true) {
            int x = scanner.nextInt();
            if (x == 0) {
                break;
            }
            System.out.println("Case " + caseNumber + ": " + x);
            caseNumber++;
        }
    }
}

</source>
</class>

<class classid="409" nclones="2" nlines="19" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p02397_4P.java" startline="1" endline="24" pcid="48064">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        while (true) {
            int x = scanner.nextInt();
            int y = scanner.nextInt();

            if (x == 0 && y == 0) {
                break;
            }

            if (x > y) {
                int temp = x;
                x = y;
                y = temp;
            }
            System.out.println(x + " " + y);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p02397_0P.java" startline="1" endline="25" pcid="66209">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        while (true) {
            int x = scanner.nextInt();
            int y = scanner.nextInt();

            if (x == 0 && y == 0) {
                break;
            }

            if (x > y) {
                int temp = x;
                x = y;
                y = temp;
            }

            System.out.println(x + " " + y);
        }
    }
}

</source>
</class>

<class classid="410" nclones="5" nlines="26" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p02404_4P.java" startline="1" endline="27" pcid="48098">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        while (true) {
            int H = sc.nextInt();
            int W = sc.nextInt();
            if (H == 0 && W == 0) {
                break;
            }
            for (int i = 0; i < H; i++) {
                for (int j = 0; j < W; j++) {
                    if (i == 0 || i == H - 1 || j == 0 || j == W - 1) {
                        System.out.print("#");
                    } else {
                        System.out.print(".");
                    }
                }
                System.out.println();
            }
            System.out.println();
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02404_4P.java" startline="1" endline="27" pcid="67056">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        while (true) {
            int H = sc.nextInt();
            int W = sc.nextInt();
            if (H == 0 && W == 0) {
                break;
            }
            for (int i = 0; i < H; i++) {
                for (int j = 0; j < W; j++) {
                    if (i == 0 || i == H - 1 || j == 0 || j == W - 1) {
                        System.out.print("#");
                    } else {
                        System.out.print(".");
                    }
                }
                System.out.println();
            }
            System.out.println();
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02404_0P.java" startline="1" endline="27" pcid="55632">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        while (true) {
            int H = sc.nextInt();
            int W = sc.nextInt();
            if (H == 0 && W == 0) {
                break;
            }
            for (int i = 0; i < H; i++) {
                for (int j = 0; j < W; j++) {
                    if (i == 0 || i == H - 1 || j == 0 || j == W - 1) {
                        System.out.print("#");
                    } else {
                        System.out.print(".");
                    }
                }
                System.out.println();
            }
            System.out.println();
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02404_2P.java" startline="1" endline="27" pcid="55633">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        while (true) {
            int H = sc.nextInt();
            int W = sc.nextInt();
            if (H == 0 && W == 0) {
                break;
            }
            for (int i = 0; i < H; i++) {
                for (int j = 0; j < W; j++) {
                    if (i == 0 || i == H - 1 || j == 0 || j == W - 1) {
                        System.out.print("#");
                    } else {
                        System.out.print(".");
                    }
                }
                System.out.println();
            }
            System.out.println();
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02404_3P.java" startline="1" endline="27" pcid="55635">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        while (true) {
            int H = sc.nextInt();
            int W = sc.nextInt();
            if (H == 0 && W == 0) {
                break;
            }
            for (int i = 0; i < H; i++) {
                for (int j = 0; j < W; j++) {
                    if (i == 0 || i == H - 1 || j == 0 || j == W - 1) {
                        System.out.print("#");
                    } else {
                        System.out.print(".");
                    }
                }
                System.out.println();
            }
            System.out.println();
        }
        sc.close();
    }
}

</source>
</class>

<class classid="411" nclones="3" nlines="26" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p02405_0P.java" startline="1" endline="27" pcid="48099">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        while (true) {
            int H = scanner.nextInt();
            int W = scanner.nextInt();
            if (H == 0 && W == 0) {
                break;
            }
            for (int i = 0; i < H; i++) {
                for (int j = 0; j < W; j++) {
                    if ((i + j) % 2 == 0) {
                        System.out.print("#");
                    } else {
                        System.out.print(".");
                    }
                }
                System.out.println();
            }
            System.out.println();
        }
        scanner.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02405_3P.java" startline="1" endline="31" pcid="65369">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        while (true) {
            int H = scanner.nextInt();
            int W = scanner.nextInt();

            if (H == 0 && W == 0) {
                break;
            }

            for (int i = 0; i < H; i++) {
                for (int j = 0; j < W; j++) {
                    if ((i + j) % 2 == 0) {
                        System.out.print("#");
                    } else {
                        System.out.print(".");
                    }
                }
                System.out.println();
            }
            System.out.println();
        }

        scanner.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p02405_1P.java" startline="1" endline="28" pcid="48100">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        while (true) {
            int H = scanner.nextInt();
            int W = scanner.nextInt();
            if (H == 0 && W == 0) {
                break;
            }

            for (int i = 0; i < H; i++) {
                for (int j = 0; j < W; j++) {
                    if ((i + j) % 2 == 0) {
                        System.out.print("#");
                    } else {
                        System.out.print(".");
                    }
                }
                System.out.println();
            }
            System.out.println();
        }
        scanner.close();
    }
}

</source>
</class>

<class classid="412" nclones="2" nlines="20" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p02415_1P.java" startline="1" endline="22" pcid="48141">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String input = scanner.nextLine();
        StringBuilder result = new StringBuilder();

        for (char c : input.toCharArray()) {
            if (Character.isUpperCase(c)) {
                result.append(Character.toLowerCase(c));
            } else if (Character.isLowerCase(c)) {
                result.append(Character.toUpperCase(c));
            } else {
                result.append(c);
            }
        }

        System.out.println(result.toString());
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02415_0P.java" startline="1" endline="23" pcid="65375">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String input = scanner.nextLine();

        StringBuilder result = new StringBuilder();

        for (char c : input.toCharArray()) {
            if (Character.isUpperCase(c)) {
                result.append(Character.toLowerCase(c));
            } else if (Character.isLowerCase(c)) {
                result.append(Character.toUpperCase(c));
            } else {
                result.append(c);
            }
        }

        System.out.println(result.toString());
    }
}

</source>
</class>

<class classid="413" nclones="2" nlines="24" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p02467_1P.java" startline="1" endline="28" pcid="48245">
import java.util.Scanner;
import java.util.ArrayList;
import java.util.List;

public class PrimeFactorization {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        System.out.print(n + ":");

        List<Integer> factors = new ArrayList<>();
        for (int i = 2; i * i <= n; i++) {
            while (n % i == 0) {
                factors.add(i);
                n /= i;
            }
        }
        if (n > 1) {
            factors.add(n);
        }

        for (int factor : factors) {
            System.out.print(" " + factor);
        }
        System.out.println();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p02467_2P.java" startline="1" endline="28" pcid="66225">
import java.util.Scanner;
import java.util.ArrayList;
import java.util.List;

public class PrimeFactorization {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        System.out.print(n + ":");

        List<Integer> factors = new ArrayList<>();
        for (int i = 2; i * i <= n; i++) {
            while (n % i == 0) {
                factors.add(i);
                n /= i;
            }
        }
        if (n > 1) {
            factors.add(n);
        }

        for (int factor : factors) {
            System.out.print(" " + factor);
        }
        System.out.println();
    }
}

</source>
</class>

<class classid="414" nclones="2" nlines="23" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p02470_4P.java" startline="1" endline="26" pcid="48259">
import java.util.Scanner;

public class EulerPhiFunction {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        System.out.println(computeEulerPhi(n));
    }

    private static int computeEulerPhi(int n) {
        int result = n;
        for (int p = 2; p * p <= n; p++) {
            if (n % p == 0) {
                while (n % p == 0) {
                    n /= p;
                }
                result -= result / p;
            }
        }
        if (n > 1) {
            result -= result / n;
        }
        return result;
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p02470_1P.java" startline="1" endline="26" pcid="66227">
import java.util.Scanner;

public class EulerPhiFunction {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        System.out.println(computeEulerPhi(n));
    }

    private static int computeEulerPhi(int n) {
        int result = n;
        for (int p = 2; p * p <= n; p++) {
            if (n % p == 0) {
                while (n % p == 0) {
                    n /= p;
                }
                result -= result / p;
            }
        }
        if (n > 1) {
            result -= result / n;
        }
        return result;
    }
}

</source>
</class>

<class classid="415" nclones="3" nlines="13" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p02548_1P.java" startline="1" endline="17" pcid="48302">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        long count = 0;

        for (int A = 1; A < N; A++) {
            int maxB = (N - 1) / A;
            count += maxB;
        }

        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p02548_3P.java" startline="1" endline="17" pcid="66232">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        long count = 0;

        for (int A = 1; A < N; A++) {
            int maxB = (N - 1) / A;
            count += maxB;
        }

        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p02548_2P.java" startline="1" endline="17" pcid="48303">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        long count = 0;

        for (int A = 1; A < N; A++) {
            int maxB = (N - 1) / A;
            count += maxB;
        }

        System.out.println(count);
    }
}

</source>
</class>

<class classid="416" nclones="3" nlines="15" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p02570_1P.java" startline="1" endline="17" pcid="48365">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int D = sc.nextInt();
        int T = sc.nextInt();
        int S = sc.nextInt();

        if (S * T >= D) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p02570_4P.java" startline="1" endline="17" pcid="66239">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int D = sc.nextInt();
        int T = sc.nextInt();
        int S = sc.nextInt();

        if (S * T >= D) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p02570_3P.java" startline="1" endline="17" pcid="48366">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int D = sc.nextInt();
        int T = sc.nextInt();
        int S = sc.nextInt();

        if (S * T >= D) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
</class>

<class classid="417" nclones="2" nlines="22" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p02578_3P.java" startline="1" endline="23" pcid="48398">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] A = new int[N];
        for (int i = 0; i < N; i++) {
            A[i] = sc.nextInt();
        }
        long total = 0;
        int maxSoFar = A[0];
        for (int i = 1; i < N; i++) {
            if (A[i] < maxSoFar) {
                total += maxSoFar - A[i];
            } else {
                maxSoFar = A[i];
            }
        }
        System.out.println(total);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p02578_2P.java" startline="1" endline="26" pcid="66247">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] A = new int[N];
        for (int i = 0; i < N; i++) {
            A[i] = sc.nextInt();
        }

        long total = 0;
        int maxSoFar = A[0];

        for (int i = 1; i < N; i++) {
            if (A[i] < maxSoFar) {
                total += maxSoFar - A[i];
            } else {
                maxSoFar = A[i];
            }
        }

        System.out.println(total);
    }
}

</source>
</class>

<class classid="418" nclones="2" nlines="25" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p02583_1P.java" startline="1" endline="29" pcid="48411">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] L = new int[N];
        for (int i = 0; i < N; i++) {
            L[i] = sc.nextInt();
        }

        Arrays.sort(L);
        int count = 0;

        for (int i = 0; i < N; i++) {
            for (int j = i + 1; j < N; j++) {
                if (L[i] == L[j]) continue;
                for (int k = j + 1; k < N; k++) {
                    if (L[j] == L[k] || L[i] == L[k]) continue;
                    if (L[i] + L[j] > L[k]) {
                        count++;
                    }
                }
            }
        }
        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p02583_4P.java" startline="1" endline="27" pcid="66251">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] L = new int[N];
        for (int i = 0; i < N; i++) {
            L[i] = sc.nextInt();
        }
        Arrays.sort(L);
        int count = 0;
        for (int i = 0; i < N; i++) {
            for (int j = i + 1; j < N; j++) {
                if (L[i] == L[j]) continue;
                for (int k = j + 1; k < N; k++) {
                    if (L[j] == L[k] || L[i] == L[k]) continue;
                    if (L[i] + L[j] > L[k]) {
                        count++;
                    }
                }
            }
        }
        System.out.println(count);
    }
}

</source>
</class>

<class classid="419" nclones="2" nlines="25" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p02583_2P.java" startline="1" endline="28" pcid="48412">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] L = new int[N];
        for (int i = 0; i < N; i++) {
            L[i] = sc.nextInt();
        }
        Arrays.sort(L);

        int count = 0;
        for (int i = 0; i < N; i++) {
            for (int j = i + 1; j < N; j++) {
                if (L[i] == L[j]) continue;
                for (int k = j + 1; k < N; k++) {
                    if (L[j] == L[k]) continue;
                    if (L[i] + L[j] > L[k]) {
                        count++;
                    }
                }
            }
        }
        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p02583_0P.java" startline="1" endline="30" pcid="66250">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] L = new int[N];
        for (int i = 0; i < N; i++) {
            L[i] = sc.nextInt();
        }

        Arrays.sort(L);
        int count = 0;

        for (int i = 0; i < N; i++) {
            for (int j = i + 1; j < N; j++) {
                if (L[i] == L[j]) continue;
                for (int k = j + 1; k < N; k++) {
                    if (L[j] == L[k]) continue;
                    if (L[i] + L[j] > L[k]) {
                        count++;
                    }
                }
            }
        }

        System.out.println(count);
    }
}

</source>
</class>

<class classid="420" nclones="3" nlines="16" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p02606_0P.java" startline="1" endline="19" pcid="48488">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int L = scanner.nextInt();
        int R = scanner.nextInt();
        int d = scanner.nextInt();

        int count = 0;
        for (int i = L; i <= R; i++) {
            if (i % d == 0) {
                count++;
            }
        }
        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p02606_1P.java" startline="1" endline="19" pcid="66263">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int L = scanner.nextInt();
        int R = scanner.nextInt();
        int d = scanner.nextInt();

        int count = 0;
        for (int i = L; i <= R; i++) {
            if (i % d == 0) {
                count++;
            }
        }
        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p02606_4P.java" startline="1" endline="19" pcid="48491">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int L = scanner.nextInt();
        int R = scanner.nextInt();
        int d = scanner.nextInt();

        int count = 0;
        for (int i = L; i <= R; i++) {
            if (i % d == 0) {
                count++;
            }
        }
        System.out.println(count);
    }
}

</source>
</class>

<class classid="421" nclones="2" nlines="29" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p02661_4P.java" startline="1" endline="31" pcid="48679">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] A = new int[N];
        int[] B = new int[N];
        for (int i = 0; i < N; i++) {
            A[i] = sc.nextInt();
            B[i] = sc.nextInt();
        }
        Arrays.sort(A);
        Arrays.sort(B);

        if (N % 2 == 1) {
            int min = A[N/2];
            int max = B[N/2];
            System.out.println(max - min + 1);
        } else {
            int min1 = A[N/2 - 1];
            int min2 = A[N/2];
            int max1 = B[N/2 - 1];
            int max2 = B[N/2];
            int lower = min1 + min2;
            int upper = max1 + max2;
            System.out.println(upper - lower + 1);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p02661_1P.java" startline="1" endline="32" pcid="66284">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] A = new int[N];
        int[] B = new int[N];

        for (int i = 0; i < N; i++) {
            A[i] = sc.nextInt();
            B[i] = sc.nextInt();
        }
        Arrays.sort(A);
        Arrays.sort(B);

        if (N % 2 == 1) {
            int min = A[N / 2];
            int max = B[N / 2];
            System.out.println(max - min + 1);
        } else {
            int min1 = A[N / 2 - 1];
            int min2 = A[N / 2];
            int max1 = B[N / 2 - 1];
            int max2 = B[N / 2];
            int lower = min1 + min2;
            int upper = max1 + max2;
            System.out.println(upper - lower + 1);
        }
    }
}

</source>
</class>

<class classid="422" nclones="3" nlines="17" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p02675_1P.java" startline="1" endline="18" pcid="48706">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int lastDigit = N % 10;

        if (lastDigit == 3) {
            System.out.println("bon");
        } else if (lastDigit == 0 || lastDigit == 1 || lastDigit == 6 || lastDigit == 8) {
            System.out.println("pon");
        } else {
            System.out.println("hon");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p02675_4P.java" startline="1" endline="18" pcid="66289">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int lastDigit = N % 10;

        if (lastDigit == 3) {
            System.out.println("bon");
        } else if (lastDigit == 0 || lastDigit == 1 || lastDigit == 6 || lastDigit == 8) {
            System.out.println("pon");
        } else {
            System.out.println("hon");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p02675_3P.java" startline="1" endline="18" pcid="48708">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int lastDigit = N % 10;

        if (lastDigit == 3) {
            System.out.println("bon");
        } else if (lastDigit == 0 || lastDigit == 1 || lastDigit == 6 || lastDigit == 8) {
            System.out.println("pon");
        } else {
            System.out.println("hon");
        }
    }
}

</source>
</class>

<class classid="423" nclones="2" nlines="36" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p02689_4P.java" startline="1" endline="41" pcid="48771">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int M = sc.nextInt();
        int[] H = new int[N + 1];
        for (int i = 1; i <= N; i++) {
            H[i] = sc.nextInt();
        }

        List<Integer>[] adj = new ArrayList[N + 1];
        for (int i = 1; i <= N; i++) {
            adj[i] = new ArrayList<>();
        }

        for (int i = 0; i < M; i++) {
            int A = sc.nextInt();
            int B = sc.nextInt();
            adj[A].add(B);
            adj[B].add(A);
        }

        int count = 0;
        for (int i = 1; i <= N; i++) {
            boolean isGood = true;
            for (int neighbor : adj[i]) {
                if (H[i] <= H[neighbor]) {
                    isGood = false;
                    break;
                }
            }
            if (isGood) {
                count++;
            }
        }
        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p02689_2P.java" startline="1" endline="38" pcid="66294">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int M = sc.nextInt();
        int[] H = new int[N+1];
        for (int i = 1; i <= N; i++) {
            H[i] = sc.nextInt();
        }
        List<Integer>[] adj = new ArrayList[N+1];
        for (int i = 1; i <= N; i++) {
            adj[i] = new ArrayList<>();
        }
        for (int i = 0; i < M; i++) {
            int A = sc.nextInt();
            int B = sc.nextInt();
            adj[A].add(B);
            adj[B].add(A);
        }
        int count = 0;
        for (int i = 1; i <= N; i++) {
            boolean isGood = true;
            for (int neighbor : adj[i]) {
                if (H[i] <= H[neighbor]) {
                    isGood = false;
                    break;
                }
            }
            if (isGood) {
                count++;
            }
        }
        System.out.println(count);
    }
}

</source>
</class>

<class classid="424" nclones="2" nlines="36" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p02689_3P.java" startline="1" endline="42" pcid="48772">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int M = sc.nextInt();
        int[] H = new int[N + 1];
        for (int i = 1; i <= N; i++) {
            H[i] = sc.nextInt();
        }

        List<List<Integer>> adj = new ArrayList<>();
        for (int i = 0; i <= N; i++) {
            adj.add(new ArrayList<>());
        }

        for (int i = 0; i < M; i++) {
            int a = sc.nextInt();
            int b = sc.nextInt();
            adj.get(a).add(b);
            adj.get(b).add(a);
        }

        int count = 0;
        for (int i = 1; i <= N; i++) {
            boolean isGood = true;
            for (int neighbor : adj.get(i)) {
                if (H[i] <= H[neighbor]) {
                    isGood = false;
                    break;
                }
            }
            if (isGood) {
                count++;
            }
        }

        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02689_4P.java" startline="1" endline="43" pcid="65444">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int M = sc.nextInt();

        int[] H = new int[N + 1];
        for (int i = 1; i <= N; i++) {
            H[i] = sc.nextInt();
        }

        List<List<Integer>> adj = new ArrayList<>();
        for (int i = 0; i <= N; i++) {
            adj.add(new ArrayList<>());
        }

        for (int i = 0; i < M; i++) {
            int a = sc.nextInt();
            int b = sc.nextInt();
            adj.get(a).add(b);
            adj.get(b).add(a);
        }

        int count = 0;
        for (int i = 1; i <= N; i++) {
            boolean isGood = true;
            for (int neighbor : adj.get(i)) {
                if (H[i] <= H[neighbor]) {
                    isGood = false;
                    break;
                }
            }
            if (isGood) {
                count++;
            }
        }

        System.out.println(count);
    }
}

</source>
</class>

<class classid="425" nclones="2" nlines="14" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p02701_4P.java" startline="1" endline="16" pcid="48829">
import java.util.HashSet;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        sc.nextLine();
        HashSet<String> set = new HashSet<>();
        for (int i = 0; i < N; i++) {
            set.add(sc.nextLine());
        }
        System.out.println(set.size());
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p02701_1P.java" startline="1" endline="16" pcid="66296">
import java.util.HashSet;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        sc.nextLine();
        HashSet<String> set = new HashSet<>();
        for (int i = 0; i < N; i++) {
            set.add(sc.nextLine());
        }
        System.out.println(set.size());
    }
}

</source>
</class>

<class classid="426" nclones="2" nlines="30" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p02718_3P.java" startline="1" endline="35" pcid="48894">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int M = sc.nextInt();
        int[] A = new int[N];
        int total = 0;

        for (int i = 0; i < N; i++) {
            A[i] = sc.nextInt();
            total += A[i];
        }

        Arrays.sort(A);
        int count = 0;
        double threshold = total / (4.0 * M);

        for (int i = N - 1; i >= 0; i--) {
            if (A[i] >= threshold) {
                count++;
                if (count >= M) {
                    System.out.println("Yes");
                    return;
                }
            } else {
                break;
            }
        }

        System.out.println("No");
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p02718_0P.java" startline="1" endline="31" pcid="66306">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int M = sc.nextInt();
        int[] A = new int[N];
        int total = 0;
        for (int i = 0; i < N; i++) {
            A[i] = sc.nextInt();
            total += A[i];
        }
        Arrays.sort(A);
        int count = 0;
        double threshold = total / (4.0 * M);
        for (int i = N - 1; i >= 0; i--) {
            if (A[i] >= threshold) {
                count++;
                if (count >= M) {
                    System.out.println("Yes");
                    return;
                }
            } else {
                break;
            }
        }
        System.out.println("No");
    }
}

</source>
</class>

<class classid="427" nclones="2" nlines="25" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p02720_0P.java" startline="1" endline="33" pcid="48901">
import java.util.LinkedList;
import java.util.Queue;

public class Main {
    public static void main(String[] args) {
        java.util.Scanner scanner = new java.util.Scanner(System.in);
        int K = scanner.nextInt();
        Queue<Long> queue = new LinkedList<>();

        for (long i = 1; i <= 9; i++) {
            queue.add(i);
        }

        long result = 0;
        for (int i = 0; i < K; i++) {
            result = queue.poll();
            long lastDigit = result % 10;

            if (lastDigit > 0) {
                queue.add(result * 10 + (lastDigit - 1));
            }

            queue.add(result * 10 + lastDigit);

            if (lastDigit < 9) {
                queue.add(result * 10 + (lastDigit + 1));
            }
        }

        System.out.println(result);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p02720_2P.java" startline="1" endline="33" pcid="66307">
import java.util.LinkedList;
import java.util.Queue;

public class Main {
    public static void main(String[] args) {
        java.util.Scanner scanner = new java.util.Scanner(System.in);
        int K = scanner.nextInt();
        Queue<Long> queue = new LinkedList<>();

        for (long i = 1; i <= 9; i++) {
            queue.add(i);
        }

        long result = 0;
        for (int i = 0; i < K; i++) {
            result = queue.poll();
            long lastDigit = result % 10;

            if (lastDigit > 0) {
                queue.add(result * 10 + (lastDigit - 1));
            }

            queue.add(result * 10 + lastDigit);

            if (lastDigit < 9) {
                queue.add(result * 10 + (lastDigit + 1));
            }
        }

        System.out.println(result);
    }
}

</source>
</class>

<class classid="428" nclones="3" nlines="13" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p02723_3P.java" startline="1" endline="15" pcid="48917">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String S = scanner.next();

        if (S.charAt(2) == S.charAt(3) && S.charAt(4) == S.charAt(5)) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p02723_0P.java" startline="1" endline="14" pcid="66308">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String S = scanner.next();
        if (S.charAt(2) == S.charAt(3) && S.charAt(4) == S.charAt(5)) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p02723_4P.java" startline="1" endline="15" pcid="48918">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String S = scanner.next();

        if (S.charAt(2) == S.charAt(3) && S.charAt(4) == S.charAt(5)) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
</class>

<class classid="429" nclones="2" nlines="11" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p02729_1P.java" startline="1" endline="15" pcid="48940">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int M = scanner.nextInt();

        int evenPairs = N * (N - 1) / 2;
        int oddPairs = M * (M - 1) / 2;

        System.out.println(evenPairs + oddPairs);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p02729_2P.java" startline="1" endline="15" pcid="66315">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int M = scanner.nextInt();

        int evenPairs = N * (N - 1) / 2;
        int oddPairs = M * (M - 1) / 2;

        System.out.println(evenPairs + oddPairs);
    }
}

</source>
</class>

<class classid="430" nclones="2" nlines="36" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p02775_4P.java" startline="1" endline="36" pcid="49100">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String N = scanner.next();
        int[] digits = new int[N.length() + 1];
        for (int i = 0; i < N.length(); i++) {
            digits[i + 1] = N.charAt(i) - '0';
        }

        int carry = 0;
        int res = 0;
        for (int i = digits.length - 1; i >= 0; i--) {
            int d = digits[i] + carry;
            if (d < 5) {
                res += d;
                carry = 0;
            } else if (d == 5) {
                if (i > 0 && digits[i - 1] >= 5) {
                    carry = 1;
                    res += 10 - d;
                } else {
                    res += d;
                    carry = 0;
                }
            } else {
                res += 10 - d;
                carry = 1;
            }
        }
        res += carry;
        System.out.println(res);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p02775_1P.java" startline="1" endline="39" pcid="66338">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String N = scanner.next();
        int[] digits = new int[N.length() + 1];

        for (int i = 0; i < N.length(); i++) {
            digits[i + 1] = N.charAt(i) - '0';
        }

        int carry = 0;
        int res = 0;

        for (int i = digits.length - 1; i >= 0; i--) {
            int d = digits[i] + carry;
            if (d < 5) {
                res += d;
                carry = 0;
            } else if (d == 5) {
                if (i > 0 && digits[i - 1] >= 5) {
                    carry = 1;
                    res += 10 - d;
                } else {
                    res += d;
                    carry = 0;
                }
            } else {
                res += 10 - d;
                carry = 1;
            }
        }
        res += carry;

        System.out.println(res);
    }
}

</source>
</class>

<class classid="431" nclones="2" nlines="18" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p02777_3P.java" startline="1" endline="21" pcid="49103">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String S = scanner.next();
        String T = scanner.next();
        int A = scanner.nextInt();
        int B = scanner.nextInt();
        String U = scanner.next();

        if (U.equals(S)) {
            A--;
        } else if (U.equals(T)) {
            B--;
        }

        System.out.println(A + " " + B);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p02777_0P.java" startline="1" endline="21" pcid="66339">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String S = scanner.next();
        String T = scanner.next();
        int A = scanner.nextInt();
        int B = scanner.nextInt();
        String U = scanner.next();

        if (U.equals(S)) {
            A--;
        } else if (U.equals(T)) {
            B--;
        }

        System.out.println(A + " " + B);
    }
}

</source>
</class>

<class classid="432" nclones="2" nlines="11" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p02835_2P.java" startline="1" endline="13" pcid="49317">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int a1 = scanner.nextInt();
        int a2 = scanner.nextInt();
        int a3 = scanner.nextInt();
        int sum = a1 + a2 + a3;
        System.out.println(sum >= 22 ? "bust" : "win");
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p02835_1P.java" startline="1" endline="13" pcid="66359">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int a1 = scanner.nextInt();
        int a2 = scanner.nextInt();
        int a3 = scanner.nextInt();
        int sum = a1 + a2 + a3;
        System.out.println(sum >= 22 ? "bust" : "win");
    }
}

</source>
</class>

<class classid="433" nclones="2" nlines="15" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p02881_2P.java" startline="1" endline="19" pcid="49480">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long N = sc.nextLong();
        long minMoves = Long.MAX_VALUE;

        for (long i = 1; i * i <= N; i++) {
            if (N % i == 0) {
                long j = N / i;
                minMoves = Math.min(minMoves, i + j - 2);
            }
        }

        System.out.println(minMoves);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p02881_0P.java" startline="1" endline="19" pcid="66373">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long N = sc.nextLong();
        long minMoves = Long.MAX_VALUE;

        for (long i = 1; i * i <= N; i++) {
            if (N % i == 0) {
                long j = N / i;
                minMoves = Math.min(minMoves, i + j - 2);
            }
        }

        System.out.println(minMoves);
    }
}

</source>
</class>

<class classid="434" nclones="5" nlines="10" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p02885_0P.java" startline="1" endline="13" pcid="49493">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int A = scanner.nextInt();
        int B = scanner.nextInt();

        int uncovered = Math.max(0, A - 2 * B);
        System.out.println(uncovered);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p02885_1P.java" startline="1" endline="12" pcid="66379">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int A = scanner.nextInt();
        int B = scanner.nextInt();
        int uncovered = Math.max(0, A - 2 * B);
        System.out.println(uncovered);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p02885_2P.java" startline="1" endline="13" pcid="49494">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int A = scanner.nextInt();
        int B = scanner.nextInt();

        int uncovered = Math.max(0, A - 2 * B);
        System.out.println(uncovered);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p02885_4P.java" startline="1" endline="12" pcid="49496">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int A = scanner.nextInt();
        int B = scanner.nextInt();
        int uncovered = Math.max(0, A - 2 * B);
        System.out.println(uncovered);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p02885_3P.java" startline="1" endline="12" pcid="49495">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int A = scanner.nextInt();
        int B = scanner.nextInt();
        int uncovered = Math.max(0, A - 2 * B);
        System.out.println(uncovered);
    }
}

</source>
</class>

<class classid="435" nclones="4" nlines="10" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p02897_2P.java" startline="1" endline="12" pcid="49527">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int oddCount = (N + 1) / 2;
        double probability = (double) oddCount / N;
        System.out.printf("%.10f\n", probability);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p02897_4P.java" startline="1" endline="12" pcid="66386">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int oddCount = (N + 1) / 2;
        double probability = (double) oddCount / N;
        System.out.printf("%.10f\n", probability);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p02897_3P.java" startline="1" endline="14" pcid="49528">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();

        int oddCount = (N + 1) / 2;
        double probability = (double) oddCount / N;

        System.out.printf("%.10f\n", probability);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p02897_1P.java" startline="1" endline="12" pcid="49529">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int oddCount = (N + 1) / 2;
        double probability = (double) oddCount / N;
        System.out.printf("%.10f\n", probability);
    }
}

</source>
</class>

<class classid="436" nclones="3" nlines="31" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p02903_2P.java" startline="1" endline="35" pcid="49548">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int H = sc.nextInt();
        int W = sc.nextInt();
        int A = sc.nextInt();
        int B = sc.nextInt();

        if (2 * A > W || 2 * B > H) {
            System.out.println(-1);
            return;
        }

        int[][] grid = new int[H][W];
        for (int i = 0; i < H; i++) {
            for (int j = 0; j < W; j++) {
                if ((i < B && j < A) || (i >= B && j >= A)) {
                    grid[i][j] = 0;
                } else {
                    grid[i][j] = 1;
                }
            }
        }

        for (int i = 0; i < H; i++) {
            for (int j = 0; j < W; j++) {
                System.out.print(grid[i][j]);
            }
            System.out.println();
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p02903_1P.java" startline="1" endline="36" pcid="66392">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int H = sc.nextInt();
        int W = sc.nextInt();
        int A = sc.nextInt();
        int B = sc.nextInt();

        if (2 * A > W || 2 * B > H) {
            System.out.println(-1);
            return;
        }

        int[][] grid = new int[H][W];

        for (int i = 0; i < H; i++) {
            for (int j = 0; j < W; j++) {
                if ((i < B && j < A) || (i >= B && j >= A)) {
                    grid[i][j] = 0;
                } else {
                    grid[i][j] = 1;
                }
            }
        }

        for (int i = 0; i < H; i++) {
            for (int j = 0; j < W; j++) {
                System.out.print(grid[i][j]);
            }
            System.out.println();
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p02903_4P.java" startline="1" endline="35" pcid="66393">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int H = sc.nextInt();
        int W = sc.nextInt();
        int A = sc.nextInt();
        int B = sc.nextInt();

        if (2*A > W || 2*B > H) {
            System.out.println(-1);
            return;
        }

        int[][] grid = new int[H][W];
        for (int i = 0; i < H; i++) {
            for (int j = 0; j < W; j++) {
                if ((i < B && j < A) || (i >= B && j >= A)) {
                    grid[i][j] = 0;
                } else {
                    grid[i][j] = 1;
                }
            }
        }

        for (int i = 0; i < H; i++) {
            for (int j = 0; j < W; j++) {
                System.out.print(grid[i][j]);
            }
            System.out.println();
        }
    }
}

</source>
</class>

<class classid="437" nclones="2" nlines="25" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p02910_1P.java" startline="1" endline="29" pcid="49562">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.next();
        boolean isEasilyPlayable = true;

        for (int i = 0; i < S.length(); i++) {
            char c = S.charAt(i);
            int pos = i + 1;

            if (pos % 2 == 1) {
                if (c != 'R' && c != 'U' && c != 'D') {
                    isEasilyPlayable = false;
                    break;
                }
            } else {
                if (c != 'L' && c != 'U' && c != 'D') {
                    isEasilyPlayable = false;
                    break;
                }
            }
        }

        System.out.println(isEasilyPlayable ? "Yes" : "No");
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p02910_2P.java" startline="1" endline="29" pcid="66394">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.next();
        boolean isEasilyPlayable = true;

        for (int i = 0; i < S.length(); i++) {
            char c = S.charAt(i);
            int pos = i + 1;

            if (pos % 2 == 1) {
                if (c != 'R' && c != 'U' && c != 'D') {
                    isEasilyPlayable = false;
                    break;
                }
            } else {
                if (c != 'L' && c != 'U' && c != 'D') {
                    isEasilyPlayable = false;
                    break;
                }
            }
        }

        System.out.println(isEasilyPlayable ? "Yes" : "No");
    }
}

</source>
</class>

<class classid="438" nclones="2" nlines="18" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p02935_1P.java" startline="1" endline="20" pcid="49669">
import java.util.PriorityQueue;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        PriorityQueue<Double> pq = new PriorityQueue<>();
        for (int i = 0; i < N; i++) {
            pq.add((double) sc.nextInt());
        }
        while (pq.size() > 1) {
            double x = pq.poll();
            double y = pq.poll();
            pq.add((x + y) / 2);
        }
        System.out.println(pq.poll());
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p02935_4P.java" startline="1" endline="23" pcid="66400">
import java.util.PriorityQueue;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        PriorityQueue<Double> pq = new PriorityQueue<>();

        for (int i = 0; i < N; i++) {
            pq.add((double) sc.nextInt());
        }

        while (pq.size() > 1) {
            double x = pq.poll();
            double y = pq.poll();
            pq.add((x + y) / 2);
        }

        System.out.println(pq.poll());
    }
}

</source>
</class>

<class classid="439" nclones="2" nlines="15" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p02952_2P.java" startline="1" endline="19" pcid="49720">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int count = 0;

        for (int i = 1; i <= N; i++) {
            String numStr = Integer.toString(i);
            if (numStr.length() % 2 != 0) {
                count++;
            }
        }

        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p02952_3P.java" startline="1" endline="19" pcid="66406">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int count = 0;

        for (int i = 1; i <= N; i++) {
            String numStr = Integer.toString(i);
            if (numStr.length() % 2 != 0) {
                count++;
            }
        }

        System.out.println(count);
    }
}

</source>
</class>

<class classid="440" nclones="3" nlines="29" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p02982_3P.java" startline="1" endline="33" pcid="49815">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int D = sc.nextInt();
        int[][] points = new int[N][D];

        for (int i = 0; i < N; i++) {
            for (int j = 0; j < D; j++) {
                points[i][j] = sc.nextInt();
            }
        }

        int count = 0;
        for (int i = 0; i < N; i++) {
            for (int j = i + 1; j < N; j++) {
                int sum = 0;
                for (int k = 0; k < D; k++) {
                    int diff = points[i][k] - points[j][k];
                    sum += diff * diff;
                }
                int sqrt = (int) Math.sqrt(sum);
                if (sqrt * sqrt == sum) {
                    count++;
                }
            }
        }
        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p02982_2P.java" startline="1" endline="33" pcid="66414">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int D = sc.nextInt();
        int[][] points = new int[N][D];

        for (int i = 0; i < N; i++) {
            for (int j = 0; j < D; j++) {
                points[i][j] = sc.nextInt();
            }
        }

        int count = 0;
        for (int i = 0; i < N; i++) {
            for (int j = i + 1; j < N; j++) {
                int sum = 0;
                for (int k = 0; k < D; k++) {
                    int diff = points[i][k] - points[j][k];
                    sum += diff * diff;
                }
                int sqrt = (int) Math.sqrt(sum);
                if (sqrt * sqrt == sum) {
                    count++;
                }
            }
        }
        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p02982_4P.java" startline="1" endline="32" pcid="49816">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int D = sc.nextInt();
        int[][] points = new int[N][D];
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < D; j++) {
                points[i][j] = sc.nextInt();
            }
        }

        int count = 0;
        for (int i = 0; i < N; i++) {
            for (int j = i + 1; j < N; j++) {
                int sum = 0;
                for (int k = 0; k < D; k++) {
                    int diff = points[i][k] - points[j][k];
                    sum += diff * diff;
                }
                int sqrt = (int) Math.sqrt(sum);
                if (sqrt * sqrt == sum) {
                    count++;
                }
            }
        }
        System.out.println(count);
    }
}

</source>
</class>

<class classid="441" nclones="2" nlines="14" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p02999_1P.java" startline="1" endline="16" pcid="49885">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int X = scanner.nextInt();
        int A = scanner.nextInt();

        if (X < A) {
            System.out.println(0);
        } else {
            System.out.println(10);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p02999_0P.java" startline="1" endline="16" pcid="66426">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int X = scanner.nextInt();
        int A = scanner.nextInt();

        if (X < A) {
            System.out.println(0);
        } else {
            System.out.println(10);
        }
    }
}

</source>
</class>

<class classid="442" nclones="2" nlines="24" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p03000_1P.java" startline="1" endline="26" pcid="49887">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int X = scanner.nextInt();
        int[] L = new int[N];
        for (int i = 0; i < N; i++) {
            L[i] = scanner.nextInt();
        }

        int count = 1;
        int current = 0;
        for (int i = 0; i < N; i++) {
            current += L[i];
            if (current <= X) {
                count++;
            } else {
                break;
            }
        }
        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p03000_0P.java" startline="1" endline="26" pcid="66427">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int X = scanner.nextInt();
        int[] L = new int[N];
        for (int i = 0; i < N; i++) {
            L[i] = scanner.nextInt();
        }

        int count = 1;
        int current = 0;
        for (int i = 0; i < N; i++) {
            current += L[i];
            if (current <= X) {
                count++;
            } else {
                break;
            }
        }
        System.out.println(count);
    }
}

</source>
</class>

<class classid="443" nclones="2" nlines="27" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p03012_0P.java" startline="1" endline="30" pcid="49926">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int[] W = new int[N];
        for (int i = 0; i < N; i++) {
            W[i] = scanner.nextInt();
        }

        int minDiff = Integer.MAX_VALUE;
        for (int T = 1; T < N; T++) {
            int sum1 = 0;
            for (int i = 0; i < T; i++) {
                sum1 += W[i];
            }
            int sum2 = 0;
            for (int i = T; i < N; i++) {
                sum2 += W[i];
            }
            int diff = Math.abs(sum1 - sum2);
            if (diff < minDiff) {
                minDiff = diff;
            }
        }
        System.out.println(minDiff);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p03012_3P.java" startline="1" endline="30" pcid="66434">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int[] W = new int[N];
        for (int i = 0; i < N; i++) {
            W[i] = scanner.nextInt();
        }

        int minDiff = Integer.MAX_VALUE;
        for (int T = 1; T < N; T++) {
            int sum1 = 0;
            for (int i = 0; i < T; i++) {
                sum1 += W[i];
            }
            int sum2 = 0;
            for (int i = T; i < N; i++) {
                sum2 += W[i];
            }
            int diff = Math.abs(sum1 - sum2);
            if (diff < minDiff) {
                minDiff = diff;
            }
        }
        System.out.println(minDiff);
    }
}

</source>
</class>

<class classid="444" nclones="2" nlines="27" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p03060_4P.java" startline="1" endline="31" pcid="50095">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int[] V = new int[N];
        int[] C = new int[N];

        for (int i = 0; i < N; i++) {
            V[i] = scanner.nextInt();
        }
        for (int i = 0; i < N; i++) {
            C[i] = scanner.nextInt();
        }

        int max = 0;
        for (int mask = 0; mask < (1 << N); mask++) {
            int X = 0, Y = 0;
            for (int i = 0; i < N; i++) {
                if ((mask & (1 << i)) != 0) {
                    X += V[i];
                    Y += C[i];
                }
            }
            max = Math.max(max, X - Y);
        }
        System.out.println(max);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p03060_2P.java" startline="1" endline="31" pcid="66451">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int[] V = new int[N];
        int[] C = new int[N];

        for (int i = 0; i < N; i++) {
            V[i] = scanner.nextInt();
        }
        for (int i = 0; i < N; i++) {
            C[i] = scanner.nextInt();
        }

        int max = 0;
        for (int mask = 0; mask < (1 << N); mask++) {
            int X = 0, Y = 0;
            for (int i = 0; i < N; i++) {
                if ((mask & (1 << i)) != 0) {
                    X += V[i];
                    Y += C[i];
                }
            }
            max = Math.max(max, X - Y);
        }
        System.out.println(max);
    }
}

</source>
</class>

<class classid="445" nclones="2" nlines="24" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p03173_1P.java" startline="1" endline="27" pcid="50468">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        long[] a = new long[N + 1];
        long[] sum = new long[N + 1];
        for (int i = 1; i <= N; i++) {
            a[i] = sc.nextLong();
            sum[i] = sum[i - 1] + a[i];
        }

        long[][] dp = new long[N + 1][N + 1];
        for (int len = 2; len <= N; len++) {
            for (int i = 1; i + len - 1 <= N; i++) {
                int j = i + len - 1;
                dp[i][j] = Long.MAX_VALUE;
                for (int k = i; k < j; k++) {
                    dp[i][j] = Math.min(dp[i][j], dp[i][k] + dp[k + 1][j] + sum[j] - sum[i - 1]);
                }
            }
        }
        System.out.println(dp[1][N]);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p03173_4P.java" startline="1" endline="27" pcid="66492">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        long[] a = new long[N + 1];
        long[] sum = new long[N + 1];
        for (int i = 1; i <= N; i++) {
            a[i] = sc.nextLong();
            sum[i] = sum[i - 1] + a[i];
        }

        long[][] dp = new long[N + 1][N + 1];
        for (int len = 2; len <= N; len++) {
            for (int i = 1; i + len - 1 <= N; i++) {
                int j = i + len - 1;
                dp[i][j] = Long.MAX_VALUE;
                for (int k = i; k < j; k++) {
                    dp[i][j] = Math.min(dp[i][j], dp[i][k] + dp[k + 1][j] + sum[j] - sum[i - 1]);
                }
            }
        }
        System.out.println(dp[1][N]);
    }
}

</source>
</class>

<class classid="446" nclones="3" nlines="22" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p03208_0P.java" startline="1" endline="24" pcid="50586">
import java.util.Arrays;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        int[] h = new int[N];
        for (int i = 0; i < N; i++) {
            h[i] = sc.nextInt();
        }
        Arrays.sort(h);
        int minDiff = Integer.MAX_VALUE;
        for (int i = 0; i <= N - K; i++) {
            int diff = h[i + K - 1] - h[i];
            if (diff < minDiff) {
                minDiff = diff;
            }
        }
        System.out.println(minDiff);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p03208_2P.java" startline="1" endline="28" pcid="66504">
import java.util.Arrays;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        int[] h = new int[N];

        for (int i = 0; i < N; i++) {
            h[i] = sc.nextInt();
        }

        Arrays.sort(h);
        int minDiff = Integer.MAX_VALUE;

        for (int i = 0; i <= N - K; i++) {
            int diff = h[i + K - 1] - h[i];
            if (diff < minDiff) {
                minDiff = diff;
            }
        }

        System.out.println(minDiff);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p03208_1P.java" startline="1" endline="27" pcid="50588">
import java.util.Arrays;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        int[] h = new int[N];
        for (int i = 0; i < N; i++) {
            h[i] = sc.nextInt();
        }

        Arrays.sort(h);
        int minDiff = Integer.MAX_VALUE;

        for (int i = 0; i <= N - K; i++) {
            int diff = h[i + K - 1] - h[i];
            if (diff < minDiff) {
                minDiff = diff;
            }
        }

        System.out.println(minDiff);
    }
}

</source>
</class>

<class classid="447" nclones="3" nlines="16" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p03211_1P.java" startline="1" endline="20" pcid="50601">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String S = scanner.next();
        int minDiff = Integer.MAX_VALUE;

        for (int i = 0; i <= S.length() - 3; i++) {
            int num = Integer.parseInt(S.substring(i, i + 3));
            int diff = Math.abs(num - 753);
            if (diff < minDiff) {
                minDiff = diff;
            }
        }

        System.out.println(minDiff);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p03211_4P.java" startline="1" endline="20" pcid="66505">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String S = scanner.next();
        int minDiff = Integer.MAX_VALUE;

        for (int i = 0; i <= S.length() - 3; i++) {
            int num = Integer.parseInt(S.substring(i, i + 3));
            int diff = Math.abs(num - 753);
            if (diff < minDiff) {
                minDiff = diff;
            }
        }

        System.out.println(minDiff);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p03211_2P.java" startline="1" endline="20" pcid="50602">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String S = scanner.next();
        int minDiff = Integer.MAX_VALUE;

        for (int i = 0; i <= S.length() - 3; i++) {
            int num = Integer.parseInt(S.substring(i, i + 3));
            int diff = Math.abs(num - 753);
            if (diff < minDiff) {
                minDiff = diff;
            }
        }

        System.out.println(minDiff);
    }
}

</source>
</class>

<class classid="448" nclones="3" nlines="15" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p03238_0P.java" startline="1" endline="17" pcid="50677">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();

        if (N == 1) {
            System.out.println("Hello World");
        } else if (N == 2) {
            int A = scanner.nextInt();
            int B = scanner.nextInt();
            System.out.println(A + B);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p03238_2P.java" startline="1" endline="17" pcid="66517">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();

        if (N == 1) {
            System.out.println("Hello World");
        } else if (N == 2) {
            int A = scanner.nextInt();
            int B = scanner.nextInt();
            System.out.println(A + B);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p03238_3P.java" startline="1" endline="17" pcid="50678">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();

        if (N == 1) {
            System.out.println("Hello World");
        } else if (N == 2) {
            int A = scanner.nextInt();
            int B = scanner.nextInt();
            System.out.println(A + B);
        }
    }
}

</source>
</class>

<class classid="449" nclones="3" nlines="24" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p03239_0P.java" startline="1" endline="27" pcid="50680">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int T = sc.nextInt();
        int minCost = Integer.MAX_VALUE;
        boolean found = false;

        for (int i = 0; i < N; i++) {
            int c = sc.nextInt();
            int t = sc.nextInt();
            if (t <= T && c < minCost) {
                minCost = c;
                found = true;
            }
        }

        if (found) {
            System.out.println(minCost);
        } else {
            System.out.println("TLE");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p03239_2P.java" startline="1" endline="27" pcid="66518">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int T = sc.nextInt();
        int minCost = Integer.MAX_VALUE;
        boolean found = false;

        for (int i = 0; i < N; i++) {
            int c = sc.nextInt();
            int t = sc.nextInt();
            if (t <= T && c < minCost) {
                minCost = c;
                found = true;
            }
        }

        if (found) {
            System.out.println(minCost);
        } else {
            System.out.println("TLE");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p03239_4P.java" startline="1" endline="27" pcid="50683">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int T = sc.nextInt();
        int minCost = Integer.MAX_VALUE;
        boolean found = false;

        for (int i = 0; i < N; i++) {
            int c = sc.nextInt();
            int t = sc.nextInt();
            if (t <= T && c < minCost) {
                minCost = c;
                found = true;
            }
        }

        if (found) {
            System.out.println(minCost);
        } else {
            System.out.println("TLE");
        }
    }
}

</source>
</class>

<class classid="450" nclones="4" nlines="14" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p03284_0P.java" startline="1" endline="16" pcid="50856">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();

        if (N % K == 0) {
            System.out.println(0);
        } else {
            System.out.println(1);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p03284_3P.java" startline="1" endline="16" pcid="66532">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();

        if (N % K == 0) {
            System.out.println(0);
        } else {
            System.out.println(1);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p03284_2P.java" startline="1" endline="16" pcid="50858">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();

        if (N % K == 0) {
            System.out.println(0);
        } else {
            System.out.println(1);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p03284_4P.java" startline="1" endline="16" pcid="50859">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();

        if (N % K == 0) {
            System.out.println(0);
        } else {
            System.out.println(1);
        }
    }
}

</source>
</class>

<class classid="451" nclones="2" nlines="14" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p03323_1P.java" startline="1" endline="16" pcid="51011">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int A = scanner.nextInt();
        int B = scanner.nextInt();

        if (A <= 8 && B <= 8) {
            System.out.println("Yay!");
        } else {
            System.out.println(":(");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p03323_0P.java" startline="1" endline="16" pcid="66544">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int A = scanner.nextInt();
        int B = scanner.nextInt();

        if (A <= 8 && B <= 8) {
            System.out.println("Yay!");
        } else {
            System.out.println(":(");
        }
    }
}

</source>
</class>

<class classid="452" nclones="2" nlines="13" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p03327_0P.java" startline="1" endline="14" pcid="51031">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        if (N <= 999) {
            System.out.println("ABC");
        } else {
            System.out.println("ABD");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p03327_2P.java" startline="1" endline="15" pcid="66546">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();

        if (N <= 999) {
            System.out.println("ABC");
        } else {
            System.out.println("ABD");
        }
    }
}

</source>
</class>

<class classid="453" nclones="2" nlines="23" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p03363_2P.java" startline="1" endline="28" pcid="51164">
import java.util.HashMap;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        long[] A = new long[N];
        for (int i = 0; i < N; i++) {
            A[i] = scanner.nextLong();
        }

        HashMap<Long, Integer> prefixSumCount = new HashMap<>();
        prefixSumCount.put(0L, 1);
        long currentSum = 0;
        long result = 0;

        for (int i = 0; i < N; i++) {
            currentSum += A[i];
            int count = prefixSumCount.getOrDefault(currentSum, 0);
            result += count;
            prefixSumCount.put(currentSum, count + 1);
        }

        System.out.println(result);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p03363_4P.java" startline="1" endline="28" pcid="66559">
import java.util.HashMap;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        long[] A = new long[N];
        for (int i = 0; i < N; i++) {
            A[i] = scanner.nextLong();
        }

        HashMap<Long, Integer> prefixSumCount = new HashMap<>();
        prefixSumCount.put(0L, 1);
        long currentSum = 0;
        long result = 0;

        for (int i = 0; i < N; i++) {
            currentSum += A[i];
            int count = prefixSumCount.getOrDefault(currentSum, 0);
            result += count;
            prefixSumCount.put(currentSum, count + 1);
        }

        System.out.println(result);
    }
}

</source>
</class>

<class classid="454" nclones="2" nlines="22" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p03373_0P.java" startline="1" endline="27" pcid="51189">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int A = scanner.nextInt();
        int B = scanner.nextInt();
        int C = scanner.nextInt();
        int X = scanner.nextInt();
        int Y = scanner.nextInt();

        long minCost = Long.MAX_VALUE;
        int maxAB = Math.max(2 * X, 2 * Y);

        for (int ab = 0; ab <= maxAB; ab += 2) {
            int a = Math.max(0, X - ab / 2);
            int b = Math.max(0, Y - ab / 2);
            long cost = a * A + b * B + ab * C;
            if (cost < minCost) {
                minCost = cost;
            }
        }

        System.out.println(minCost);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p03373_3P.java" startline="1" endline="27" pcid="66563">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int A = scanner.nextInt();
        int B = scanner.nextInt();
        int C = scanner.nextInt();
        int X = scanner.nextInt();
        int Y = scanner.nextInt();

        long minCost = Long.MAX_VALUE;
        int maxAB = Math.max(2 * X, 2 * Y);

        for (int ab = 0; ab <= maxAB; ab += 2) {
            int a = Math.max(0, X - ab / 2);
            int b = Math.max(0, Y - ab / 2);
            long cost = a * A + b * B + ab * C;
            if (cost < minCost) {
                minCost = cost;
            }
        }

        System.out.println(minCost);
    }
}

</source>
</class>

<class classid="455" nclones="2" nlines="10" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p03407_0P.java" startline="1" endline="12" pcid="51295">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();
        System.out.println((A + B >= C) ? "Yes" : "No");
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/chatgpt_p03407_0P.java" startline="1" endline="13" pcid="64893">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();

        System.out.println((A + B >= C) ? "Yes" : "No");
    }
}

</source>
</class>

<class classid="456" nclones="3" nlines="17" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p03417_1P.java" startline="1" endline="18" pcid="51329">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long N = sc.nextLong();
        long M = sc.nextLong();

        if (N == 1 && M == 1) {
            System.out.println(1);
        } else if (N == 1 || M == 1) {
            System.out.println(Math.max(N, M) - 2);
        } else {
            System.out.println((N - 2) * (M - 2));
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p03417_0P.java" startline="1" endline="18" pcid="66579">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long N = sc.nextLong();
        long M = sc.nextLong();

        if (N == 1 && M == 1) {
            System.out.println(1);
        } else if (N == 1 || M == 1) {
            System.out.println(Math.max(N, M) - 2);
        } else {
            System.out.println((N - 2) * (M - 2));
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p03419_3P.java" startline="1" endline="18" pcid="51338">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long N = sc.nextLong();
        long M = sc.nextLong();

        if (N == 1 && M == 1) {
            System.out.println(1);
        } else if (N == 1 || M == 1) {
            System.out.println(Math.max(N, M) - 2);
        } else {
            System.out.println((N - 2) * (M - 2));
        }
    }
}

</source>
</class>

<class classid="457" nclones="4" nlines="15" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p03433_1P.java" startline="1" endline="17" pcid="51387">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int A = scanner.nextInt();

        int remainder = N % 500;
        if (remainder <= A) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p03433_0P.java" startline="1" endline="17" pcid="66581">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int A = scanner.nextInt();

        int remainder = N % 500;
        if (remainder <= A) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p03433_3P.java" startline="1" endline="17" pcid="51388">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int A = scanner.nextInt();

        int remainder = N % 500;
        if (remainder <= A) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p03433_4P.java" startline="1" endline="17" pcid="51389">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int A = scanner.nextInt();

        int remainder = N % 500;
        if (remainder <= A) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
</class>

<class classid="458" nclones="2" nlines="21" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p03448_4P.java" startline="1" endline="26" pcid="51435">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();
        int X = sc.nextInt();

        int count = 0;

        for (int a = 0; a <= A; a++) {
            for (int b = 0; b <= B; b++) {
                for (int c = 0; c <= C; c++) {
                    if (500 * a + 100 * b + 50 * c == X) {
                        count++;
                    }
                }
            }
        }

        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p03448_3P.java" startline="1" endline="24" pcid="66585">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();
        int X = sc.nextInt();

        int count = 0;
        for (int a = 0; a <= A; a++) {
            for (int b = 0; b <= B; b++) {
                for (int c = 0; c <= C; c++) {
                    if (500 * a + 100 * b + 50 * c == X) {
                        count++;
                    }
                }
            }
        }
        System.out.println(count);
    }
}

</source>
</class>

<class classid="459" nclones="2" nlines="27" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p03449_0P.java" startline="1" endline="32" pcid="51436">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[][] A = new int[2][N];

        for (int i = 0; i < 2; i++) {
            for (int j = 0; j < N; j++) {
                A[i][j] = sc.nextInt();
            }
        }

        int max = 0;
        for (int k = 0; k < N; k++) {
            int sum = 0;
            for (int j = 0; j <= k; j++) {
                sum += A[0][j];
            }
            for (int j = k; j < N; j++) {
                sum += A[1][j];
            }
            if (sum > max) {
                max = sum;
            }
        }

        System.out.println(max);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p03449_4P.java" startline="1" endline="31" pcid="66587">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[][] A = new int[2][N];

        for (int i = 0; i < 2; i++) {
            for (int j = 0; j < N; j++) {
                A[i][j] = sc.nextInt();
            }
        }

        int max = 0;
        for (int k = 0; k < N; k++) {
            int sum = 0;
            for (int j = 0; j <= k; j++) {
                sum += A[0][j];
            }
            for (int j = k; j < N; j++) {
                sum += A[1][j];
            }
            if (sum > max) {
                max = sum;
            }
        }
        System.out.println(max);
    }
}

</source>
</class>

<class classid="460" nclones="2" nlines="29" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p03474_3P.java" startline="1" endline="32" pcid="51516">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        sc.nextLine();
        String S = sc.nextLine();

        boolean isValid = true;

        if (S.length() != A + B + 1) {
            isValid = false;
        } else {
            if (S.charAt(A) != '-') {
                isValid = false;
            } else {
                for (int i = 0; i < S.length(); i++) {
                    if (i == A) continue;
                    if (!Character.isDigit(S.charAt(i))) {
                        isValid = false;
                        break;
                    }
                }
            }
        }

        System.out.println(isValid ? "Yes" : "No");
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p03474_2P.java" startline="1" endline="32" pcid="66600">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        sc.nextLine();
        String S = sc.nextLine();

        boolean isValid = true;

        if (S.length() != A + B + 1) {
            isValid = false;
        } else {
            if (S.charAt(A) != '-') {
                isValid = false;
            } else {
                for (int i = 0; i < S.length(); i++) {
                    if (i == A) continue;
                    if (!Character.isDigit(S.charAt(i))) {
                        isValid = false;
                        break;
                    }
                }
            }
        }

        System.out.println(isValid ? "Yes" : "No");
    }
}

</source>
</class>

<class classid="461" nclones="2" nlines="19" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p03534_2P.java" startline="1" endline="23" pcid="51652">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.next();
        int[] count = new int[3];

        for (char c : S.toCharArray()) {
            count[c - 'a']++;
        }

        int max = Math.max(count[0], Math.max(count[1], count[2]));
        int total = S.length();

        if (max <= (total + 1) / 2) {
            System.out.println("YES");
        } else {
            System.out.println("NO");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p03534_1P.java" startline="1" endline="23" pcid="66613">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.next();
        int[] count = new int[3];

        for (char c : S.toCharArray()) {
            count[c - 'a']++;
        }

        int max = Math.max(count[0], Math.max(count[1], count[2]));
        int total = S.length();

        if (max <= (total + 1) / 2) {
            System.out.println("YES");
        } else {
            System.out.println("NO");
        }
    }
}

</source>
</class>

<class classid="462" nclones="4" nlines="12" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p03610_4P.java" startline="1" endline="14" pcid="51882">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        StringBuilder result = new StringBuilder();
        for (int i = 0; i < s.length(); i += 2) {
            result.append(s.charAt(i));
        }
        System.out.println(result.toString());
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p03610_1P.java" startline="1" endline="16" pcid="66642">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        StringBuilder result = new StringBuilder();

        for (int i = 0; i < s.length(); i += 2) {
            result.append(s.charAt(i));
        }

        System.out.println(result.toString());
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p03610_3P.java" startline="1" endline="16" pcid="66644">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        StringBuilder result = new StringBuilder();

        for (int i = 0; i < s.length(); i += 2) {
            result.append(s.charAt(i));
        }

        System.out.println(result.toString());
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p03610_2P.java" startline="1" endline="16" pcid="66643">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        StringBuilder result = new StringBuilder();

        for (int i = 0; i < s.length(); i += 2) {
            result.append(s.charAt(i));
        }

        System.out.println(result.toString());
    }
}

</source>
</class>

<class classid="463" nclones="2" nlines="15" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p03631_2P.java" startline="1" endline="18" pcid="51952">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();

        int firstDigit = N / 100;
        int lastDigit = N % 10;

        if (firstDigit == lastDigit) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p03631_0P.java" startline="1" endline="18" pcid="66654">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();

        int firstDigit = N / 100;
        int lastDigit = N % 10;

        if (firstDigit == lastDigit) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }
}

</source>
</class>

<class classid="464" nclones="2" nlines="28" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p03701_4P.java" startline="1" endline="34" pcid="52211">
import java.util.Scanner;
import java.util.Arrays;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int[] s = new int[N];
        for (int i = 0; i < N; i++) {
            s[i] = scanner.nextInt();
        }

        int total = 0;
        for (int num : s) {
            total += num;
        }

        if (total % 10 != 0) {
            System.out.println(total);
            return;
        }

        Arrays.sort(s);
        for (int num : s) {
            if (num % 10 != 0) {
                System.out.println(total - num);
                return;
            }
        }

        System.out.println(0);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p03701_0P.java" startline="1" endline="34" pcid="66676">
import java.util.Scanner;
import java.util.Arrays;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int[] s = new int[N];
        for (int i = 0; i < N; i++) {
            s[i] = scanner.nextInt();
        }

        int total = 0;
        for (int num : s) {
            total += num;
        }

        if (total % 10 != 0) {
            System.out.println(total);
            return;
        }

        Arrays.sort(s);
        for (int num : s) {
            if (num % 10 != 0) {
                System.out.println(total - num);
                return;
            }
        }

        System.out.println(0);
    }
}

</source>
</class>

<class classid="465" nclones="2" nlines="14" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p03779_0P.java" startline="1" endline="18" pcid="52439">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long X = sc.nextLong();
        long sum = 0;
        long t = 0;

        while (sum < X) {
            t++;
            sum += t;
        }

        System.out.println(t);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p03779_3P.java" startline="1" endline="18" pcid="66695">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long X = sc.nextLong();
        long sum = 0;
        long t = 0;

        while (sum < X) {
            t++;
            sum += t;
        }

        System.out.println(t);
    }
}

</source>
</class>

<class classid="466" nclones="2" nlines="28" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p03786_0P.java" startline="1" endline="31" pcid="52459">
import java.util.Arrays;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        long[] A = new long[N];
        for (int i = 0; i < N; i++) {
            A[i] = sc.nextLong();
        }
        Arrays.sort(A);

        long[] prefixSum = new long[N];
        prefixSum[0] = A[0];
        for (int i = 1; i < N; i++) {
            prefixSum[i] = prefixSum[i-1] + A[i];
        }

        int count = 1;
        for (int i = N - 2; i >= 0; i--) {
            if (prefixSum[i] * 2 >= A[i+1]) {
                count++;
            } else {
                break;
            }
        }
        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p03786_3P.java" startline="1" endline="31" pcid="66700">
import java.util.Arrays;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        long[] A = new long[N];
        for (int i = 0; i < N; i++) {
            A[i] = sc.nextLong();
        }
        Arrays.sort(A);

        long[] prefixSum = new long[N];
        prefixSum[0] = A[0];
        for (int i = 1; i < N; i++) {
            prefixSum[i] = prefixSum[i - 1] + A[i];
        }

        int count = 1;
        for (int i = N - 2; i >= 0; i--) {
            if (prefixSum[i] * 2 >= A[i + 1]) {
                count++;
            } else {
                break;
            }
        }
        System.out.println(count);
    }
}

</source>
</class>

<class classid="467" nclones="3" nlines="10" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p03795_1P.java" startline="1" endline="14" pcid="52476">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();

        int x = N * 800;
        int y = (N / 15) * 200;

        System.out.println(x - y);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p03795_4P.java" startline="1" endline="12" pcid="66704">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int x = N * 800;
        int y = (N / 15) * 200;
        System.out.println(x - y);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p03795_3P.java" startline="1" endline="12" pcid="52477">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int x = N * 800;
        int y = (N / 15) * 200;
        System.out.println(x - y);
    }
}

</source>
</class>

<class classid="468" nclones="2" nlines="19" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p03831_4P.java" startline="1" endline="24" pcid="52611">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        long A = sc.nextLong();
        long B = sc.nextLong();
        long[] X = new long[N];

        for (int i = 0; i < N; i++) {
            X[i] = sc.nextLong();
        }

        long total = 0;
        for (int i = 1; i < N; i++) {
            long dist = X[i] - X[i - 1];
            total += Math.min(dist * A, B);
        }

        System.out.println(total);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p03829_3P.java" startline="1" endline="22" pcid="66715">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        long A = sc.nextLong();
        long B = sc.nextLong();
        long[] X = new long[N];
        for (int i = 0; i < N; i++) {
            X[i] = sc.nextLong();
        }

        long total = 0;
        for (int i = 1; i < N; i++) {
            long dist = X[i] - X[i-1];
            total += Math.min(dist * A, B);
        }
        System.out.println(total);
    }
}

</source>
</class>

<class classid="469" nclones="4" nlines="15" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p03844_0P.java" startline="1" endline="17" pcid="52648">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        String op = sc.next();
        int B = sc.nextInt();

        if (op.equals("+")) {
            System.out.println(A + B);
        } else {
            System.out.println(A - B);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p03844_2P.java" startline="1" endline="17" pcid="66726">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        String op = sc.next();
        int B = sc.nextInt();

        if (op.equals("+")) {
            System.out.println(A + B);
        } else {
            System.out.println(A - B);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p03844_4P.java" startline="1" endline="17" pcid="52650">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        String op = sc.next();
        int B = sc.nextInt();

        if (op.equals("+")) {
            System.out.println(A + B);
        } else {
            System.out.println(A - B);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p03844_3P.java" startline="1" endline="17" pcid="52649">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        String op = sc.next();
        int B = sc.nextInt();

        if (op.equals("+")) {
            System.out.println(A + B);
        } else {
            System.out.println(A - B);
        }
    }
}

</source>
</class>

<class classid="470" nclones="2" nlines="40" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p03937_0P.java" startline="1" endline="45" pcid="52767">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int H = sc.nextInt();
        int W = sc.nextInt();
        char[][] grid = new char[H][W];
        for (int i = 0; i < H; i++) {
            grid[i] = sc.next().toCharArray();
        }

        boolean[][] visited = new boolean[H][W];
        int i = 0, j = 0;
        visited[i][j] = true;

        while (i != H - 1 || j != W - 1) {
            boolean moved = false;
            if (j + 1 < W && grid[i][j + 1] == '#' && !visited[i][j + 1]) {
                j++;
                moved = true;
            } else if (i + 1 < H && grid[i + 1][j] == '#' && !visited[i + 1][j]) {
                i++;
                moved = true;
            }
            if (!moved) {
                System.out.println("Impossible");
                return;
            }
            visited[i][j] = true;
        }

        for (int x = 0; x < H; x++) {
            for (int y = 0; y < W; y++) {
                if (grid[x][y] == '#' && !visited[x][y]) {
                    System.out.println("Impossible");
                    return;
                }
            }
        }

        System.out.println("Possible");
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p03937_2P.java" startline="1" endline="44" pcid="66738">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int H = sc.nextInt();
        int W = sc.nextInt();
        char[][] grid = new char[H][W];
        for (int i = 0; i < H; i++) {
            grid[i] = sc.next().toCharArray();
        }

        boolean[][] visited = new boolean[H][W];
        int i = 0, j = 0;
        visited[i][j] = true;

        while (i != H - 1 || j != W - 1) {
            boolean moved = false;
            if (j + 1 < W && grid[i][j + 1] == '#' && !visited[i][j + 1]) {
                j++;
                moved = true;
            } else if (i + 1 < H && grid[i + 1][j] == '#' && !visited[i + 1][j]) {
                i++;
                moved = true;
            }
            if (!moved) {
                System.out.println("Impossible");
                return;
            }
            visited[i][j] = true;
        }

        for (int x = 0; x < H; x++) {
            for (int y = 0; y < W; y++) {
                if (grid[x][y] == '#' && !visited[x][y]) {
                    System.out.println("Impossible");
                    return;
                }
            }
        }
        System.out.println("Possible");
    }
}

</source>
</class>

<class classid="471" nclones="4" nlines="13" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p03963_0P.java" startline="1" endline="16" pcid="52835">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();

        long result = K;
        for (int i = 1; i < N; i++) {
            result *= (K - 1);
        }
        System.out.println(result);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p03963_3P.java" startline="1" endline="17" pcid="66752">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();

        long result = K;
        for (int i = 1; i < N; i++) {
            result *= (K - 1);
        }

        System.out.println(result);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p03963_1P.java" startline="1" endline="16" pcid="52837">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();

        long result = K;
        for (int i = 1; i < N; i++) {
            result *= (K - 1);
        }
        System.out.println(result);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p03963_4P.java" startline="1" endline="17" pcid="52838">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();

        long result = K;
        for (int i = 1; i < N; i++) {
            result *= (K - 1);
        }

        System.out.println(result);
    }
}

</source>
</class>

<class classid="472" nclones="3" nlines="16" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p04005_0P.java" startline="1" endline="18" pcid="52954">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long A = sc.nextLong();
        long B = sc.nextLong();
        long C = sc.nextLong();

        if (A % 2 == 0 || B % 2 == 0 || C % 2 == 0) {
            System.out.println(0);
        } else {
            long min = Math.min(A * B, Math.min(B * C, C * A));
            System.out.println(min);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p04005_1P.java" startline="1" endline="18" pcid="66765">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long A = sc.nextLong();
        long B = sc.nextLong();
        long C = sc.nextLong();

        if (A % 2 == 0 || B % 2 == 0 || C % 2 == 0) {
            System.out.println(0);
        } else {
            long min = Math.min(A * B, Math.min(B * C, C * A));
            System.out.println(min);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/deepseek_p04005_3P.java" startline="1" endline="18" pcid="52957">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long A = sc.nextLong();
        long B = sc.nextLong();
        long C = sc.nextLong();

        if (A % 2 == 0 || B % 2 == 0 || C % 2 == 0) {
            System.out.println(0);
        } else {
            long min = Math.min(A * B, Math.min(B * C, C * A));
            System.out.println(min);
        }
    }
}

</source>
</class>

<class classid="473" nclones="2" nlines="19" similarity="100">
<source file="../preprocessed_Datasplit/train/1/deepseek_p04044_2P.java" startline="1" endline="25" pcid="53082">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int L = sc.nextInt();
        sc.nextLine();

        String[] strings = new String[N];
        for (int i = 0; i < N; i++) {
            strings[i] = sc.nextLine();
        }

        Arrays.sort(strings);

        StringBuilder result = new StringBuilder();
        for (String s : strings) {
            result.append(s);
        }

        System.out.println(result.toString());
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p04044_4P.java" startline="1" endline="25" pcid="66784">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int L = sc.nextInt();
        sc.nextLine();

        String[] strings = new String[N];
        for (int i = 0; i < N; i++) {
            strings[i] = sc.nextLine();
        }

        Arrays.sort(strings);

        StringBuilder result = new StringBuilder();
        for (String s : strings) {
            result.append(s);
        }

        System.out.println(result.toString());
    }
}

</source>
</class>

<class classid="474" nclones="2" nlines="22" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p00003_4P.java" startline="1" endline="24" pcid="53128">
import java.util.Arrays;
import java.util.Scanner;

public class Main {

  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    for (int i = 0; i < N; i++) {
      int[] sides = new int[3];
      sides[0] = sc.nextInt();
      sides[1] = sc.nextInt();
      sides[2] = sc.nextInt();
      Arrays.sort(sides);
      if (sides[0] * sides[0] + sides[1] * sides[1] == sides[2] * sides[2]) {
        System.out.println("YES");
      } else {
        System.out.println("NO");
      }
    }
    sc.close();
  }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p00003_1P.java" startline="1" endline="26" pcid="66787">
import java.util.Arrays;
import java.util.Scanner;

public class Main {

  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    for (int i = 0; i < N; i++) {
      int[] sides = new int[3];
      sides[0] = sc.nextInt();
      sides[1] = sc.nextInt();
      sides[2] = sc.nextInt();
      Arrays.sort(sides);
      if (
        sides[0] * sides[0] + sides[1] * sides[1] == sides[2] * sides[2]
      ) {
        System.out.println("YES");
      } else {
        System.out.println("NO");
      }
    }
    sc.close();
  }
}

</source>
</class>

<class classid="475" nclones="3" nlines="12" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p00007_0P.java" startline="1" endline="18" pcid="53140">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        int debt = 100000;

        for (int i = 0; i < n; i++) {
            debt = (int) Math.ceil(debt * 1.05 / 1000) * 1000;
        }

        System.out.println(debt);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p00007_1P.java" startline="1" endline="16" pcid="66793">
import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		int debt = 100000;
		for (int i = 0; i < n; i++) {
			debt = (int) Math.ceil(debt * 1.05 / 1000) * 1000;
		}
		System.out.println(debt);
	}

}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p00007_4P.java" startline="1" endline="14" pcid="53142">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int debt = 100000;
        for (int i = 0; i < n; i++) {
            debt = (int) Math.ceil(debt * 1.05 / 1000) * 1000;
        }
        System.out.println(debt);
    }
}

</source>
</class>

<class classid="476" nclones="2" nlines="25" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p00012_0P.java" startline="1" endline="31" pcid="53158">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        while (sc.hasNextDouble()) {
            double x1 = sc.nextDouble();
            double y1 = sc.nextDouble();
            double x2 = sc.nextDouble();
            double y2 = sc.nextDouble();
            double x3 = sc.nextDouble();
            double y3 = sc.nextDouble();
            double xp = sc.nextDouble();
            double yp = sc.nextDouble();

            double s = ((y2 - y3) * (xp - x3) + (x3 - x2) * (yp - y3)) /
                       ((y2 - y3) * (x1 - x3) + (x3 - x2) * (y1 - y3));
            double t = ((y3 - y1) * (xp - x3) + (x1 - x3) * (yp - y3)) /
                       ((y2 - y3) * (x1 - x3) + (x3 - x2) * (y1 - y3));

            if (s > 0 && t > 0 && (s + t) < 1) {
                System.out.println("YES");
            } else {
                System.out.println("NO");
            }
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p00012_4P.java" startline="1" endline="31" pcid="66794">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        while (sc.hasNextDouble()) {
            double x1 = sc.nextDouble();
            double y1 = sc.nextDouble();
            double x2 = sc.nextDouble();
            double y2 = sc.nextDouble();
            double x3 = sc.nextDouble();
            double y3 = sc.nextDouble();
            double xp = sc.nextDouble();
            double yp = sc.nextDouble();

            double s = ((y2 - y3) * (xp - x3) + (x3 - x2) * (yp - y3)) /
                       ((y2 - y3) * (x1 - x3) + (x3 - x2) * (y1 - y3));
            double t = ((y3 - y1) * (xp - x3) + (x1 - x3) * (yp - y3)) /
                       ((y2 - y3) * (x1 - x3) + (x3 - x2) * (y1 - y3));

            if (s > 0 && t > 0 && (s + t) < 1) {
                System.out.println("YES");
            } else {
                System.out.println("NO");
            }
        }
        sc.close();
    }
}

</source>
</class>

<class classid="477" nclones="3" nlines="15" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p00014_2P.java" startline="1" endline="17" pcid="53169">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        while (sc.hasNextInt()) {
            int d = sc.nextInt();
            long area = 0;
            for (int i = d; i <= 600 - d; i += d) {
                area += (long) i * i * d;
            }
            System.out.println(area);
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p00014_1P.java" startline="1" endline="17" pcid="66795">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        while (sc.hasNextInt()) {
            int d = sc.nextInt();
            long area = 0;
            for (int i = d; i <= 600 - d; i += d) {
                area += (long) i * i * d;
            }
            System.out.println(area);
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p00014_4P.java" startline="1" endline="17" pcid="53171">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        while (sc.hasNextInt()) {
            int d = sc.nextInt();
            long area = 0;
            for (int i = d; i <= 600 - d; i += d) {
                area += (long) i * i * d;
            }
            System.out.println(area);
        }
        sc.close();
    }
}

</source>
</class>

<class classid="478" nclones="4" nlines="29" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p00028_1P.java" startline="1" endline="37" pcid="53231">
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        Map<Integer, Integer> frequencyMap = new HashMap<>();
        int maxFrequency = 0;

        while (sc.hasNextInt()) {
            int num = sc.nextInt();
            frequencyMap.put(num, frequencyMap.getOrDefault(num, 0) + 1);
            maxFrequency = Math.max(maxFrequency, frequencyMap.get(num));
        }

        List<Integer> modeValues = new ArrayList<>();
        for (Map.Entry<Integer, Integer> entry : frequencyMap.entrySet()) {
            if (entry.getValue() == maxFrequency) {
                modeValues.add(entry.getKey());
            }
        }

        Collections.sort(modeValues);

        for (int mode : modeValues) {
            System.out.println(mode);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p00028_0P.java" startline="1" endline="37" pcid="66799">
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        Map<Integer, Integer> frequencyMap = new HashMap<>();
        int maxFrequency = 0;

        while (sc.hasNextInt()) {
            int num = sc.nextInt();
            frequencyMap.put(num, frequencyMap.getOrDefault(num, 0) + 1);
            maxFrequency = Math.max(maxFrequency, frequencyMap.get(num));
        }

        List<Integer> modeValues = new ArrayList<>();
        for (Map.Entry<Integer, Integer> entry : frequencyMap.entrySet()) {
            if (entry.getValue() == maxFrequency) {
                modeValues.add(entry.getKey());
            }
        }

        Collections.sort(modeValues);

        for (int mode : modeValues) {
            System.out.println(mode);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p00028_4P.java" startline="1" endline="37" pcid="53235">
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        Map<Integer, Integer> frequencyMap = new HashMap<>();
        int maxFrequency = 0;

        while (sc.hasNextInt()) {
            int num = sc.nextInt();
            frequencyMap.put(num, frequencyMap.getOrDefault(num, 0) + 1);
            maxFrequency = Math.max(maxFrequency, frequencyMap.get(num));
        }

        List<Integer> modeValues = new ArrayList<>();
        for (Map.Entry<Integer, Integer> entry : frequencyMap.entrySet()) {
            if (entry.getValue() == maxFrequency) {
                modeValues.add(entry.getKey());
            }
        }

        Collections.sort(modeValues);

        for (int mode : modeValues) {
            System.out.println(mode);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p00028_3P.java" startline="1" endline="37" pcid="53233">
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        Map<Integer, Integer> frequencyMap = new HashMap<>();
        int maxFrequency = 0;

        while (sc.hasNextInt()) {
            int num = sc.nextInt();
            frequencyMap.put(num, frequencyMap.getOrDefault(num, 0) + 1);
            maxFrequency = Math.max(maxFrequency, frequencyMap.get(num));
        }

        List<Integer> modeValues = new ArrayList<>();
        for (Map.Entry<Integer, Integer> entry : frequencyMap.entrySet()) {
            if (entry.getValue() == maxFrequency) {
                modeValues.add(entry.getKey());
            }
        }

        Collections.sort(modeValues);

        for (int mode : modeValues) {
            System.out.println(mode);
        }

        sc.close();
    }
}

</source>
</class>

<class classid="479" nclones="3" nlines="43" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p00048_2P.java" startline="1" endline="36" pcid="53325">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        while (sc.hasNextDouble()) {
            double weight = sc.nextDouble();
            if (weight <= 48.00) {
                System.out.println("light fly");
            } else if (weight <= 51.00) {
                System.out.println("fly");
            } else if (weight <= 54.00) {
                System.out.println("bantam");
            } else if (weight <= 57.00) {
                System.out.println("feather");
            } else if (weight <= 60.00) {
                System.out.println("light");
            } else if (weight <= 64.00) {
                System.out.println("light welter");
            } else if (weight <= 69.00) {
                System.out.println("welter");
            } else if (weight <= 75.00) {
                System.out.println("light middle");
            } else if (weight <= 81.00) {
                System.out.println("middle");
            } else if (weight <= 91.00) {
                System.out.println("light heavy");
            } else {
                System.out.println("heavy");
            }
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p00048_3P.java" startline="1" endline="35" pcid="66805">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        while (sc.hasNextDouble()) {
            double weight = sc.nextDouble();
            if (weight <= 48.00) {
                System.out.println("light fly");
            } else if (weight <= 51.00) {
                System.out.println("fly");
            } else if (weight <= 54.00) {
                System.out.println("bantam");
            } else if (weight <= 57.00) {
                System.out.println("feather");
            } else if (weight <= 60.00) {
                System.out.println("light");
            } else if (weight <= 64.00) {
                System.out.println("light welter");
            } else if (weight <= 69.00) {
                System.out.println("welter");
            } else if (weight <= 75.00) {
                System.out.println("light middle");
            } else if (weight <= 81.00) {
                System.out.println("middle");
            } else if (weight <= 91.00) {
                System.out.println("light heavy");
            } else {
                System.out.println("heavy");
            }
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p00048_1P.java" startline="1" endline="35" pcid="53326">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        while (sc.hasNextDouble()) {
            double weight = sc.nextDouble();
            if (weight <= 48.00) {
                System.out.println("light fly");
            } else if (weight <= 51.00) {
                System.out.println("fly");
            } else if (weight <= 54.00) {
                System.out.println("bantam");
            } else if (weight <= 57.00) {
                System.out.println("feather");
            } else if (weight <= 60.00) {
                System.out.println("light");
            } else if (weight <= 64.00) {
                System.out.println("light welter");
            } else if (weight <= 69.00) {
                System.out.println("welter");
            } else if (weight <= 75.00) {
                System.out.println("light middle");
            } else if (weight <= 81.00) {
                System.out.println("middle");
            } else if (weight <= 91.00) {
                System.out.println("light heavy");
            } else {
                System.out.println("heavy");
            }
        }
        sc.close();
    }
}

</source>
</class>

<class classid="480" nclones="3" nlines="27" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p00049_2P.java" startline="1" endline="33" pcid="53329">
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        Map<String, Integer> bloodTypeCounts = new HashMap<>();
        bloodTypeCounts.put("A", 0);
        bloodTypeCounts.put("B", 0);
        bloodTypeCounts.put("AB", 0);
        bloodTypeCounts.put("O", 0);

        while (sc.hasNextLine()) {
            String line = sc.nextLine();
            if (line.isEmpty()) {
                break;
            }
            String[] parts = line.split(",");
            String bloodType = parts[1];
            bloodTypeCounts.put(bloodType, bloodTypeCounts.get(bloodType) + 1);
        }

        System.out.println(bloodTypeCounts.get("A"));
        System.out.println(bloodTypeCounts.get("B"));
        System.out.println(bloodTypeCounts.get("AB"));
        System.out.println(bloodTypeCounts.get("O"));

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p00049_0P.java" startline="1" endline="33" pcid="66806">
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class Main {

  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    Map<String, Integer> bloodTypeCounts = new HashMap<>();
    bloodTypeCounts.put("A", 0);
    bloodTypeCounts.put("B", 0);
    bloodTypeCounts.put("AB", 0);
    bloodTypeCounts.put("O", 0);

    while (sc.hasNextLine()) {
      String line = sc.nextLine();
      if (line.isEmpty()) {
        break;
      }
      String[] parts = line.split(",");
      String bloodType = parts[1];
      bloodTypeCounts.put(bloodType, bloodTypeCounts.get(bloodType) + 1);
    }

    System.out.println(bloodTypeCounts.get("A"));
    System.out.println(bloodTypeCounts.get("B"));
    System.out.println(bloodTypeCounts.get("AB"));
    System.out.println(bloodTypeCounts.get("O"));

    sc.close();
  }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p00049_4P.java" startline="1" endline="33" pcid="53331">
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class Main {

  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    Map<String, Integer> bloodTypeCounts = new HashMap<>();
    bloodTypeCounts.put("A", 0);
    bloodTypeCounts.put("B", 0);
    bloodTypeCounts.put("AB", 0);
    bloodTypeCounts.put("O", 0);

    while (sc.hasNextLine()) {
      String line = sc.nextLine();
      if (line.isEmpty()) {
        break;
      }
      String[] parts = line.split(",");
      String bloodType = parts[1];
      bloodTypeCounts.put(bloodType, bloodTypeCounts.get(bloodType) + 1);
    }

    System.out.println(bloodTypeCounts.get("A"));
    System.out.println(bloodTypeCounts.get("B"));
    System.out.println(bloodTypeCounts.get("AB"));
    System.out.println(bloodTypeCounts.get("O"));

    sc.close();
  }
}

</source>
</class>

<class classid="481" nclones="2" nlines="19" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p00054_0P.java" startline="1" endline="22" pcid="53351">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        while (sc.hasNext()) {
            int a = sc.nextInt();
            int b = sc.nextInt();
            int n = sc.nextInt();

            int sum = 0;
            for (int i = 0; i < n; i++) {
                a *= 10;
                sum += (a / b);
                a %= b;
            }
            System.out.println(sum);
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p00054_2P.java" startline="1" endline="22" pcid="66808">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        while (sc.hasNext()) {
            int a = sc.nextInt();
            int b = sc.nextInt();
            int n = sc.nextInt();

            int sum = 0;
            for (int i = 0; i < n; i++) {
                a *= 10;
                sum += (a / b);
                a %= b;
            }
            System.out.println(sum);
        }
        sc.close();
    }
}

</source>
</class>

<class classid="482" nclones="2" nlines="19" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p00064_2P.java" startline="1" endline="23" pcid="53394">
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int totalSum = 0;
        Pattern p = Pattern.compile("\\d+");

        while (sc.hasNextLine()) {
            String line = sc.nextLine();
            Matcher m = p.matcher(line);
            while (m.find()) {
                totalSum += Integer.parseInt(m.group());
            }
        }
        System.out.println(totalSum);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p00064_0P.java" startline="1" endline="23" pcid="66815">
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int totalSum = 0;
        Pattern p = Pattern.compile("\\d+");

        while (sc.hasNextLine()) {
            String line = sc.nextLine();
            Matcher m = p.matcher(line);
            while (m.find()) {
                totalSum += Integer.parseInt(m.group());
            }
        }
        System.out.println(totalSum);
        sc.close();
    }
}

</source>
</class>

<class classid="483" nclones="2" nlines="19" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p00073_1P.java" startline="1" endline="30" pcid="53432">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int x = sc.nextInt();
            int h = sc.nextInt();

            if (x == 0 && h == 0) {
                break;
            }

            double baseArea = x * x;

            double slantHeight = Math.sqrt(h * h + (x / 2.0) * (x / 2.0));

            double triangleArea = 0.5 * x * slantHeight;

            double totalSurfaceArea = baseArea + 4 * triangleArea;

            System.out.printf("%.6f\n", totalSurfaceArea);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p00073_2P.java" startline="1" endline="30" pcid="66823">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int x = sc.nextInt();
            int h = sc.nextInt();

            if (x == 0 && h == 0) {
                break;
            }

            double baseArea = x * x;

            double slantHeight = Math.sqrt(h * h + (x / 2.0) * (x / 2.0));

            double triangleArea = 0.5 * x * slantHeight;

            double totalSurfaceArea = baseArea + 4 * triangleArea;

            System.out.printf("%.6f\n", totalSurfaceArea);
        }

        sc.close();
    }
}

</source>
</class>

<class classid="484" nclones="2" nlines="27" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p00074_0P.java" startline="1" endline="38" pcid="53435">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int T = sc.nextInt();
            int H = sc.nextInt();
            int S = sc.nextInt();

            if (T == -1 && H == -1 && S == -1) {
                break;
            }

            int totalSecondsRecorded = T * 3600 + H * 60 + S;
            int totalTapeSeconds = 120 * 60;

            int remainingSecondsStandard = totalTapeSeconds - totalSecondsRecorded;
            printFormattedTime(remainingSecondsStandard);

            int remainingSeconds3x = (totalTapeSeconds - totalSecondsRecorded) * 3;
            printFormattedTime(remainingSeconds3x);
        }

        sc.close();
    }

    private static void printFormattedTime(int totalSeconds) {
        int hours = totalSeconds / 3600;
        int minutes = (totalSeconds % 3600) / 60;
        int seconds = totalSeconds % 60;

        System.out.printf("%02d:%02d:%02d%n", hours, minutes, seconds);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p00074_1P.java" startline="1" endline="38" pcid="66825">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int T = sc.nextInt();
            int H = sc.nextInt();
            int S = sc.nextInt();

            if (T == -1 && H == -1 && S == -1) {
                break;
            }

            int totalSecondsRecorded = T * 3600 + H * 60 + S;
            int totalTapeSeconds = 120 * 60;

            int remainingSecondsStandard = totalTapeSeconds - totalSecondsRecorded;
            printFormattedTime(remainingSecondsStandard);

            int remainingSeconds3x = (totalTapeSeconds - totalSecondsRecorded) * 3;
            printFormattedTime(remainingSeconds3x);
        }

        sc.close();
    }

    private static void printFormattedTime(int totalSeconds) {
        int hours = totalSeconds / 3600;
        int minutes = (totalSeconds % 3600) / 60;
        int seconds = totalSeconds % 60;

        System.out.printf("%02d:%02d:%02d%n", hours, minutes, seconds);
    }
}

</source>
</class>

<class classid="485" nclones="2" nlines="27" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p00083_2P.java" startline="1" endline="28" pcid="53480">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (sc.hasNext()) {
            int year = sc.nextInt();
            int month = sc.nextInt();
            int day = sc.nextInt();

            if (year < 1868 || (year == 1868 && (month < 9 || (month == 9 && day < 8)))) {
                System.out.println("pre-meiji");
            } else if (year < 1912 || (year == 1912 && (month < 7 || (month == 7 && day < 30)))) {
                System.out.printf("meiji %d %d %d\n", year - 1867, month, day);
            } else if (year < 1926 || (year == 1926 && (month < 12 || (month == 12 && day < 25)))) {
                System.out.printf("taisho %d %d %d\n", year - 1911, month, day);
            } else if (year < 1989 || (year == 1989 && (month < 1 || (month == 1 && day < 8)))) {
                System.out.printf("showa %d %d %d\n", year - 1925, month, day);
            } else {
                System.out.printf("heisei %d %d %d\n", year - 1988, month, day);
            }
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p00083_4P.java" startline="1" endline="29" pcid="66827">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (sc.hasNext()) {
            int year = sc.nextInt();
            int month = sc.nextInt();
            int day = sc.nextInt();

            if (year < 1868 || (year == 1868 && (month < 9 || (month == 9 && day < 8)))) {
                System.out.println("pre-meiji");
            } else if (year < 1912 || (year == 1912 && (month < 7 || (month == 7 && day < 30)))) {
                System.out.printf("meiji %d %d %d\n", year - 1867, month, day);
            } else if (year < 1926 || (year == 1926 && (month < 12 || (month == 12 && day < 25)))) {
                System.out.printf("taisho %d %d %d\n", year - 1911, month, day);
            } else if (year < 1989 || (year == 1989 && (month < 1 || (month == 1 && day < 8)))) {
                System.out.printf("showa %d %d %d\n", year - 1925, month, day);
            } else {
                System.out.printf("heisei %d %d %d\n", year - 1988, month, day);
            }
        }

        sc.close();
    }
}

</source>
</class>

<class classid="486" nclones="3" nlines="23" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p00084_3P.java" startline="1" endline="29" pcid="53482">
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String line = sc.nextLine();
        sc.close();

        Pattern pattern = Pattern.compile("[a-zA-Z]+");
        Matcher matcher = pattern.matcher(line);

        StringBuilder result = new StringBuilder();

        while (matcher.find()) {
            String word = matcher.group();
            if (word.length() >= 3 && word.length() <= 6) {
                if (result.length() > 0) {
                    result.append(" ");
                }
                result.append(word);
            }
        }
        System.out.println(result.toString());
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p00084_2P.java" startline="1" endline="29" pcid="66828">
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String line = sc.nextLine();
        sc.close();

        Pattern pattern = Pattern.compile("[a-zA-Z]+");
        Matcher matcher = pattern.matcher(line);

        StringBuilder result = new StringBuilder();

        while (matcher.find()) {
            String word = matcher.group();
            if (word.length() >= 3 && word.length() <= 6) {
                if (result.length() > 0) {
                    result.append(" ");
                }
                result.append(word);
            }
        }
        System.out.println(result.toString());
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p00084_1P.java" startline="1" endline="29" pcid="53483">
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String line = sc.nextLine();
        sc.close();

        Pattern pattern = Pattern.compile("[a-zA-Z]+");
        Matcher matcher = pattern.matcher(line);

        StringBuilder result = new StringBuilder();

        while (matcher.find()) {
            String word = matcher.group();
            if (word.length() >= 3 && word.length() <= 6) {
                if (result.length() > 0) {
                    result.append(" ");
                }
                result.append(word);
            }
        }
        System.out.println(result.toString());
    }
}

</source>
</class>

<class classid="487" nclones="2" nlines="26" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p00112_0P.java" startline="1" endline="34" pcid="53606">
import java.util.Arrays;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int n = sc.nextInt();
            if (n == 0) {
                break;
            }

            int[] t = new int[n];
            for (int i = 0; i < n; i++) {
                t[i] = sc.nextInt();
            }

            Arrays.sort(t);

            long totalWaitingTime = 0;
            long currentServiceTime = 0;

            for (int i = 0; i < n; i++) {
                totalWaitingTime += currentServiceTime;
                currentServiceTime += t[i];
            }
            System.out.println(totalWaitingTime);
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p00112_2P.java" startline="1" endline="34" pcid="66843">
import java.util.Arrays;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int n = sc.nextInt();
            if (n == 0) {
                break;
            }

            int[] t = new int[n];
            for (int i = 0; i < n; i++) {
                t[i] = sc.nextInt();
            }

            Arrays.sort(t);

            long totalWaitingTime = 0;
            long currentServiceTime = 0;

            for (int i = 0; i < n; i++) {
                totalWaitingTime += currentServiceTime;
                currentServiceTime += t[i];
            }
            System.out.println(totalWaitingTime);
        }
        sc.close();
    }
}

</source>
</class>

<class classid="488" nclones="4" nlines="40" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p00119_0P.java" startline="1" endline="50" pcid="53629">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int m = sc.nextInt();
        int n = sc.nextInt();

        List<List<Integer>> adj = new ArrayList<>();
        for (int i = 0; i <= m; i++) {
            adj.add(new ArrayList<>());
        }

        int[] inDegree = new int[m + 1];

        for (int i = 0; i < n; i++) {
            int x = sc.nextInt();
            int y = sc.nextInt();
            adj.get(x).add(y);
            inDegree[y]++;
        }

        Queue<Integer> q = new LinkedList<>();
        for (int i = 1; i <= m; i++) {
            if (inDegree[i] == 0) {
                q.offer(i);
            }
        }

        List<Integer> result = new ArrayList<>();
        while (!q.isEmpty()) {
            int u = q.poll();
            result.add(u);

            for (int v : adj.get(u)) {
                inDegree[v]--;
                if (inDegree[v] == 0) {
                    q.offer(v);
                }
            }
        }

        for (int person : result) {
            System.out.println(person);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p00119_1P.java" startline="1" endline="50" pcid="66847">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int m = sc.nextInt();
        int n = sc.nextInt();

        List<List<Integer>> adj = new ArrayList<>();
        for (int i = 0; i <= m; i++) {
            adj.add(new ArrayList<>());
        }

        int[] inDegree = new int[m + 1];

        for (int i = 0; i < n; i++) {
            int x = sc.nextInt();
            int y = sc.nextInt();
            adj.get(x).add(y);
            inDegree[y]++;
        }

        Queue<Integer> q = new LinkedList<>();
        for (int i = 1; i <= m; i++) {
            if (inDegree[i] == 0) {
                q.offer(i);
            }
        }

        List<Integer> result = new ArrayList<>();
        while (!q.isEmpty()) {
            int u = q.poll();
            result.add(u);

            for (int v : adj.get(u)) {
                inDegree[v]--;
                if (inDegree[v] == 0) {
                    q.offer(v);
                }
            }
        }

        for (int person : result) {
            System.out.println(person);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p00119_2P.java" startline="1" endline="50" pcid="53634">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int m = sc.nextInt();
        int n = sc.nextInt();

        List<List<Integer>> adj = new ArrayList<>();
        for (int i = 0; i <= m; i++) {
            adj.add(new ArrayList<>());
        }

        int[] inDegree = new int[m + 1];

        for (int i = 0; i < n; i++) {
            int x = sc.nextInt();
            int y = sc.nextInt();
            adj.get(x).add(y);
            inDegree[y]++;
        }

        Queue<Integer> q = new LinkedList<>();
        for (int i = 1; i <= m; i++) {
            if (inDegree[i] == 0) {
                q.offer(i);
            }
        }

        List<Integer> result = new ArrayList<>();
        while (!q.isEmpty()) {
            int u = q.poll();
            result.add(u);

            for (int v : adj.get(u)) {
                inDegree[v]--;
                if (inDegree[v] == 0) {
                    q.offer(v);
                }
            }
        }

        for (int person : result) {
            System.out.println(person);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p00119_4P.java" startline="1" endline="50" pcid="53635">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int m = sc.nextInt();
        int n = sc.nextInt();

        List<List<Integer>> adj = new ArrayList<>();
        for (int i = 0; i <= m; i++) {
            adj.add(new ArrayList<>());
        }

        int[] inDegree = new int[m + 1];

        for (int i = 0; i < n; i++) {
            int x = sc.nextInt();
            int y = sc.nextInt();
            adj.get(x).add(y);
            inDegree[y]++;
        }

        Queue<Integer> q = new LinkedList<>();
        for (int i = 1; i <= m; i++) {
            if (inDegree[i] == 0) {
                q.offer(i);
            }
        }

        List<Integer> result = new ArrayList<>();
        while (!q.isEmpty()) {
            int u = q.poll();
            result.add(u);

            for (int v : adj.get(u)) {
                inDegree[v]--;
                if (inDegree[v] == 0) {
                    q.offer(v);
                }
            }
        }

        for (int person : result) {
            System.out.println(person);
        }

        sc.close();
    }
}

</source>
</class>

<class classid="489" nclones="3" nlines="24" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p00168_1P.java" startline="1" endline="29" pcid="53812">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long[] dp = new long[31];
        dp[0] = 1;
        dp[1] = 1;
        dp[2] = 2;
        for (int i = 3; i <= 30; i++) {
            dp[i] = dp[i - 1] + dp[i - 2] + dp[i - 3];
        }

        while (true) {
            int n = sc.nextInt();
            if (n == 0) {
                break;
            }

            long totalWays = dp[n];
            long daysNeeded = (totalWays + 9) / 10;
            long yearsNeeded = (daysNeeded + 364) / 365;

            System.out.println(yearsNeeded);
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p00168_4P.java" startline="1" endline="29" pcid="66867">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long[] dp = new long[31];
        dp[0] = 1;
        dp[1] = 1;
        dp[2] = 2;
        for (int i = 3; i <= 30; i++) {
            dp[i] = dp[i - 1] + dp[i - 2] + dp[i - 3];
        }

        while (true) {
            int n = sc.nextInt();
            if (n == 0) {
                break;
            }

            long totalWays = dp[n];
            long daysNeeded = (totalWays + 9) / 10;
            long yearsNeeded = (daysNeeded + 364) / 365;

            System.out.println(yearsNeeded);
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p00168_2P.java" startline="1" endline="29" pcid="53813">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long[] dp = new long[31];
        dp[0] = 1;
        dp[1] = 1;
        dp[2] = 2;
        for (int i = 3; i <= 30; i++) {
            dp[i] = dp[i - 1] + dp[i - 2] + dp[i - 3];
        }

        while (true) {
            int n = sc.nextInt();
            if (n == 0) {
                break;
            }

            long totalWays = dp[n];
            long daysNeeded = (totalWays + 9) / 10;
            long yearsNeeded = (daysNeeded + 364) / 365;

            System.out.println(yearsNeeded);
        }
        sc.close();
    }
}

</source>
</class>

<class classid="490" nclones="2" nlines="15" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p00173_2P.java" startline="1" endline="21" pcid="53827">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        for (int i = 0; i < 9; i++) {
            String name = sc.next();
            int morningVisitors = sc.nextInt();
            int afternoonVisitors = sc.nextInt();

            int totalVisitors = morningVisitors + afternoonVisitors;
            int totalRevenue = (morningVisitors * 200) + (afternoonVisitors * 300);

            System.out.println(name + " " + totalVisitors + " " + totalRevenue);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p00173_3P.java" startline="1" endline="21" pcid="66869">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        for (int i = 0; i < 9; i++) {
            String name = sc.next();
            int morningVisitors = sc.nextInt();
            int afternoonVisitors = sc.nextInt();

            int totalVisitors = morningVisitors + afternoonVisitors;
            int totalRevenue = (morningVisitors * 200) + (afternoonVisitors * 300);

            System.out.println(name + " " + totalVisitors + " " + totalRevenue);
        }

        sc.close();
    }
}

</source>
</class>

<class classid="491" nclones="3" nlines="41" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p00184_2P.java" startline="1" endline="42" pcid="53861">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int n = sc.nextInt();
            if (n == 0) {
                break;
            }

            int[] ageGroups = new int[7];

            for (int i = 0; i < n; i++) {
                int age = sc.nextInt();
                if (age >= 0 && age <= 9) {
                    ageGroups[0]++;
                } else if (age >= 10 && age <= 19) {
                    ageGroups[1]++;
                } else if (age >= 20 && age <= 29) {
                    ageGroups[2]++;
                } else if (age >= 30 && age <= 39) {
                    ageGroups[3]++;
                } else if (age >= 40 && age <= 49) {
                    ageGroups[4]++;
                } else if (age >= 50 && age <= 59) {
                    ageGroups[5]++;
                } else if (age >= 60) {
                    ageGroups[6]++;
                }
            }

            for (int count : ageGroups) {
                System.out.println(count);
            }
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p00184_0P.java" startline="1" endline="43" pcid="66872">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int n = sc.nextInt();
            if (n == 0) {
                break;
            }

            int[] ageGroups = new int[7];

            for (int i = 0; i < n; i++) {
                int age = sc.nextInt();
                if (age >= 0 && age <= 9) {
                    ageGroups[0]++;
                } else if (age >= 10 && age <= 19) {
                    ageGroups[1]++;
                } else if (age >= 20 && age <= 29) {
                    ageGroups[2]++;
                } else if (age >= 30 && age <= 39) {
                    ageGroups[3]++;
                } else if (age >= 40 && age <= 49) {
                    ageGroups[4]++;
                } else if (age >= 50 && age <= 59) {
                    ageGroups[5]++;
                } else if (age >= 60) {
                    ageGroups[6]++;
                }
            }

            for (int count : ageGroups) {
                System.out.println(count);
            }
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p00184_4P.java" startline="1" endline="42" pcid="53865">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int n = sc.nextInt();
            if (n == 0) {
                break;
            }

            int[] ageGroups = new int[7];

            for (int i = 0; i < n; i++) {
                int age = sc.nextInt();
                if (age >= 0 && age <= 9) {
                    ageGroups[0]++;
                } else if (age >= 10 && age <= 19) {
                    ageGroups[1]++;
                } else if (age >= 20 && age <= 29) {
                    ageGroups[2]++;
                } else if (age >= 30 && age <= 39) {
                    ageGroups[3]++;
                } else if (age >= 40 && age <= 49) {
                    ageGroups[4]++;
                } else if (age >= 50 && age <= 59) {
                    ageGroups[5]++;
                } else if (age >= 60) {
                    ageGroups[6]++;
                }
            }

            for (int count : ageGroups) {
                System.out.println(count);
            }
        }

        sc.close();
    }
}

</source>
</class>

<class classid="492" nclones="2" nlines="24" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p00197_1P.java" startline="1" endline="30" pcid="53885">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            long a = sc.nextLong();
            long b = sc.nextLong();

            if (a == 0 && b == 0) {
                break;
            }

            long x = a;
            long y = b;
            int steps = 0;

            while (y != 0) {
                long temp = y;
                y = x % y;
                x = temp;
                steps++;
            }
            System.out.println(x + " " + steps);
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p00197_2P.java" startline="1" endline="30" pcid="66880">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            long a = sc.nextLong();
            long b = sc.nextLong();

            if (a == 0 && b == 0) {
                break;
            }

            long x = a;
            long y = b;
            int steps = 0;

            while (y != 0) {
                long temp = y;
                y = x % y;
                x = temp;
                steps++;
            }
            System.out.println(x + " " + steps);
        }
        sc.close();
    }
}

</source>
</class>

<class classid="493" nclones="2" nlines="10" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p00330_4P.java" startline="1" endline="12" pcid="54090">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int W = sc.nextInt();
        int bits = W * 32;
        System.out.println(bits);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p00330_0P.java" startline="1" endline="12" pcid="66900">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int W = sc.nextInt();
        int bits = W * 32;
        System.out.println(bits);
        sc.close();
    }
}

</source>
</class>

<class classid="494" nclones="2" nlines="17" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p00435_0P.java" startline="1" endline="21" pcid="54157">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String encryptedText = sc.nextLine();
        StringBuilder decryptedText = new StringBuilder();

        for (char c : encryptedText.toCharArray()) {
            char decryptedChar = (char) (c - 3);
            if (decryptedChar < 'A') {
                decryptedChar = (char) (decryptedChar + 26);
            }
            decryptedText.append(decryptedChar);
        }

        System.out.println(decryptedText.toString());
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p00435_3P.java" startline="1" endline="21" pcid="66905">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String encryptedText = sc.nextLine();
        StringBuilder decryptedText = new StringBuilder();

        for (char c : encryptedText.toCharArray()) {
            char decryptedChar = (char) (c - 3);
            if (decryptedChar < 'A') {
                decryptedChar = (char) (decryptedChar + 26);
            }
            decryptedText.append(decryptedChar);
        }

        System.out.println(decryptedText.toString());
        sc.close();
    }
}

</source>
</class>

<class classid="495" nclones="2" nlines="16" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p00479_3P.java" startline="1" endline="22" pcid="54271">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();

        for (int i = 0; i < K; i++) {
            int a = sc.nextInt();
            int b = sc.nextInt();

            int dist = Math.min(Math.min(a - 1, N - a), Math.min(b - 1, N - b));

            int color = (dist % 3) + 1;
            System.out.println(color);
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p00479_0P.java" startline="1" endline="21" pcid="66913">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();

        for (int i = 0; i < K; i++) {
            int a = sc.nextInt();
            int b = sc.nextInt();

            int dist = Math.min(Math.min(a - 1, N - a), Math.min(b - 1, N - b));

            int color = (dist % 3) + 1;
            System.out.println(color);
        }
        sc.close();
    }
}

</source>
</class>

<class classid="496" nclones="2" nlines="27" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p00480_1P.java" startline="1" endline="33" pcid="54273">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] nums = new int[N];
        for (int i = 0; i < N; i++) {
            nums[i] = sc.nextInt();
        }
        sc.close();

        long[][] dp = new long[N - 1][21];

        dp[0][nums[0]] = 1;

        for (int i = 1; i < N - 1; i++) {
            for (int j = 0; j <= 20; j++) {
                if (dp[i - 1][j] > 0) {
                    if (j + nums[i] >= 0 && j + nums[i] <= 20) {
                        dp[i][j + nums[i]] += dp[i - 1][j];
                    }
                    if (j - nums[i] >= 0 && j - nums[i] <= 20) {
                        dp[i][j - nums[i]] += dp[i - 1][j];
                    }
                }
            }
        }

        System.out.println(dp[N - 2][nums[N - 1]]);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p00480_2P.java" startline="1" endline="32" pcid="66914">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] nums = new int[N];
        for (int i = 0; i < N; i++) {
            nums[i] = sc.nextInt();
        }
        sc.close();

        long[][] dp = new long[N - 1][21];
        dp[0][nums[0]] = 1;

        for (int i = 1; i < N - 1; i++) {
            for (int j = 0; j <= 20; j++) {
                if (dp[i - 1][j] > 0) {
                    if (j + nums[i] >= 0 && j + nums[i] <= 20) {
                        dp[i][j + nums[i]] += dp[i - 1][j];
                    }
                    if (j - nums[i] >= 0 && j - nums[i] <= 20) {
                        dp[i][j - nums[i]] += dp[i - 1][j];
                    }
                }
            }
        }

        System.out.println(dp[N - 2][nums[N - 1]]);
    }
}

</source>
</class>

<class classid="497" nclones="2" nlines="23" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p00488_0P.java" startline="1" endline="29" pcid="54287">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int minPastaPrice = Integer.MAX_VALUE;
        for (int i = 0; i < 3; i++) {
            int pastaPrice = sc.nextInt();
            if (pastaPrice < minPastaPrice) {
                minPastaPrice = pastaPrice;
            }
        }

        int minJuicePrice = Integer.MAX_VALUE;
        for (int i = 0; i < 2; i++) {
            int juicePrice = sc.nextInt();
            if (juicePrice < minJuicePrice) {
                minJuicePrice = juicePrice;
            }
        }

        int minTotalPrice = minPastaPrice + minJuicePrice - 50;
        System.out.println(minTotalPrice);

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p00488_1P.java" startline="1" endline="29" pcid="66916">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int minPastaPrice = Integer.MAX_VALUE;
        for (int i = 0; i < 3; i++) {
            int pastaPrice = sc.nextInt();
            if (pastaPrice < minPastaPrice) {
                minPastaPrice = pastaPrice;
            }
        }

        int minJuicePrice = Integer.MAX_VALUE;
        for (int i = 0; i < 2; i++) {
            int juicePrice = sc.nextInt();
            if (juicePrice < minJuicePrice) {
                minJuicePrice = juicePrice;
            }
        }

        int minTotalPrice = minPastaPrice + minJuicePrice - 50;
        System.out.println(minTotalPrice);

        sc.close();
    }
}

</source>
</class>

<class classid="498" nclones="4" nlines="21" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p00531_1P.java" startline="1" endline="27" pcid="54369">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();
        int D = sc.nextInt();
        int P = sc.nextInt();

        int costX = A * P;

        int costY;
        if (P <= C) {
            costY = B;
        } else {
            costY = B + (P - C) * D;
        }

        System.out.println(Math.min(costX, costY));

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p00531_2P.java" startline="1" endline="27" pcid="66928">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();
        int D = sc.nextInt();
        int P = sc.nextInt();

        int costX = A * P;

        int costY;
        if (P <= C) {
            costY = B;
        } else {
            costY = B + (P - C) * D;
        }

        System.out.println(Math.min(costX, costY));

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p00531_3P.java" startline="1" endline="27" pcid="54370">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();
        int D = sc.nextInt();
        int P = sc.nextInt();

        int costX = A * P;

        int costY;
        if (P <= C) {
            costY = B;
        } else {
            costY = B + (P - C) * D;
        }

        System.out.println(Math.min(costX, costY));

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p00531_4P.java" startline="1" endline="27" pcid="54371">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();
        int D = sc.nextInt();
        int P = sc.nextInt();

        int costX = A * P;

        int costY;
        if (P <= C) {
            costY = B;
        } else {
            costY = B + (P - C) * D;
        }

        System.out.println(Math.min(costX, costY));

        sc.close();
    }
}

</source>
</class>

<class classid="499" nclones="2" nlines="39" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p00670_3P.java" startline="1" endline="46" pcid="54500">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        while (true) {
            int n = sc.nextInt();
            int S = sc.nextInt();
            if (n == 0 && S == 0) {
                break;
            }

            int[] counts = new int[101];
            for (int i = 0; i < n; i++) {
                int r = sc.nextInt();
                counts[r]++;
            }

            long totalPairs = 0;

            for (int r1 = 1; r1 <= 100; r1++) {
                if (counts[r1] == 0) {
                    continue;
                }

                for (int r2 = r1; r2 <= 100; r2++) {
                    if (counts[r2] == 0) {
                        continue;
                    }

                    if (r1 + r2 > S) {
                        if (r1 == r2) {
                            totalPairs += (long) counts[r1] * (counts[r1] - 1) / 2;
                        } else {
                            totalPairs += (long) counts[r1] * counts[r2];
                        }
                    }
                }
            }
            System.out.println(totalPairs);
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p00670_2P.java" startline="1" endline="46" pcid="66937">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        while (true) {
            int n = sc.nextInt();
            int S = sc.nextInt();
            if (n == 0 && S == 0) {
                break;
            }

            int[] counts = new int[101];
            for (int i = 0; i < n; i++) {
                int r = sc.nextInt();
                counts[r]++;
            }

            long totalPairs = 0;

            for (int r1 = 1; r1 <= 100; r1++) {
                if (counts[r1] == 0) {
                    continue;
                }

                for (int r2 = r1; r2 <= 100; r2++) {
                    if (counts[r2] == 0) {
                        continue;
                    }

                    if (r1 + r2 > S) {
                        if (r1 == r2) {
                            totalPairs += (long) counts[r1] * (counts[r1] - 1) / 2;
                        } else {
                            totalPairs += (long) counts[r1] * counts[r2];
                        }
                    }
                }
            }
            System.out.println(totalPairs);
        }
        sc.close();
    }
}

</source>
</class>

<class classid="500" nclones="4" nlines="27" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p01093_1P.java" startline="1" endline="35" pcid="54852">
import java.util.Arrays;
import java.util.Scanner;

public class Main {

  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);

    while (true) {
      int n = sc.nextInt();
      if (n == 0) {
        break;
      }

      int[] scores = new int[n];
      for (int i = 0; i < n; i++) {
        scores[i] = sc.nextInt();
      }

      Arrays.sort(scores);

      int minDiff = Integer.MAX_VALUE;
      for (int i = 0; i < n - 1; i++) {
        int diff = scores[i + 1] - scores[i];
        if (diff < minDiff) {
          minDiff = diff;
        }
      }
      System.out.println(minDiff);
    }

    sc.close();
  }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p01093_0P.java" startline="1" endline="34" pcid="66966">
import java.util.Arrays;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int n = sc.nextInt();
            if (n == 0) {
                break;
            }

            int[] scores = new int[n];
            for (int i = 0; i < n; i++) {
                scores[i] = sc.nextInt();
            }

            Arrays.sort(scores);

            int minDiff = Integer.MAX_VALUE;
            for (int i = 0; i < n - 1; i++) {
                int diff = scores[i + 1] - scores[i];
                if (diff < minDiff) {
                    minDiff = diff;
                }
            }
            System.out.println(minDiff);
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p01093_3P.java" startline="1" endline="35" pcid="66968">
import java.util.Arrays;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int n = sc.nextInt();
            if (n == 0) {
                break;
            }

            int[] scores = new int[n];
            for (int i = 0; i < n; i++) {
                scores[i] = sc.nextInt();
            }

            Arrays.sort(scores);

            int minDiff = Integer.MAX_VALUE;
            for (int i = 0; i < n - 1; i++) {
                int diff = scores[i + 1] - scores[i];
                if (diff < minDiff) {
                    minDiff = diff;
                }
            }
            System.out.println(minDiff);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p01093_4P.java" startline="1" endline="35" pcid="54853">
import java.util.Arrays;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int n = sc.nextInt();
            if (n == 0) {
                break;
            }

            int[] scores = new int[n];
            for (int i = 0; i < n; i++) {
                scores[i] = sc.nextInt();
            }

            Arrays.sort(scores);

            int minDiff = Integer.MAX_VALUE;
            for (int i = 0; i < n - 1; i++) {
                int diff = scores[i + 1] - scores[i];
                if (diff < minDiff) {
                    minDiff = diff;
                }
            }
            System.out.println(minDiff);
        }

        sc.close();
    }
}

</source>
</class>

<class classid="501" nclones="2" nlines="39" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p01096_1P.java" startline="1" endline="46" pcid="54866">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        while (true) {
            int n = sc.nextInt();
            if (n == 0) {
                break;
            }
            int[] w = new int[n];
            for (int i = 0; i < n; i++) {
                w[i] = sc.nextInt();
            }

            int[][] dp = new int[n + 1][n + 1];

            for (int len = 2; len <= n; len++) {
                for (int i = 0; i <= n - len; i++) {
                    int j = i + len - 1;

                    dp[i][j] = Math.max(dp[i][j], dp[i + 1][j]);
                    dp[i][j] = Math.max(dp[i][j], dp[i][j - 1]);

                    if (len == 2) {
                        if (Math.abs(w[i] - w[j]) <= 1) {
                            dp[i][j] = Math.max(dp[i][j], 2);
                        }
                    } else {
                        if (Math.abs(w[i] - w[j]) <= 1 && dp[i + 1][j - 1] == len - 2) {
                            dp[i][j] = Math.max(dp[i][j], len);
                        }
                    }

                    for (int k = i; k < j; k++) {
                        dp[i][j] = Math.max(dp[i][j], dp[i][k] + dp[k + 1][j]);
                    }
                }
            }
            System.out.println(dp[0][n - 1]);
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p01096_3P.java" startline="1" endline="45" pcid="66969">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        while (true) {
            int n = sc.nextInt();
            if (n == 0) {
                break;
            }
            int[] w = new int[n];
            for (int i = 0; i < n; i++) {
                w[i] = sc.nextInt();
            }

            int[][] dp = new int[n + 1][n + 1];

            for (int len = 2; len <= n; len++) {
                for (int i = 0; i <= n - len; i++) {
                    int j = i + len - 1;

                    dp[i][j] = Math.max(dp[i][j], dp[i + 1][j]);
                    dp[i][j] = Math.max(dp[i][j], dp[i][j - 1]);

                    if (len == 2) {
                        if (Math.abs(w[i] - w[j]) <= 1) {
                            dp[i][j] = Math.max(dp[i][j], 2);
                        }
                    } else {
                        if (Math.abs(w[i] - w[j]) <= 1 && dp[i + 1][j - 1] == len - 2) {
                            dp[i][j] = Math.max(dp[i][j], len);
                        }
                    }

                    for (int k = i; k < j; k++) {
                        dp[i][j] = Math.max(dp[i][j], dp[i][k] + dp[k + 1][j]);
                    }
                }
            }
            System.out.println(dp[0][n - 1]);
        }
        sc.close();
    }
}

</source>
</class>

<class classid="502" nclones="2" nlines="28" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p01143_3P.java" startline="1" endline="35" pcid="54936">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int N = sc.nextInt();
            int M = sc.nextInt();
            int P = sc.nextInt();

            if (N == 0 && M == 0 && P == 0) {
                break;
            }

            int[] X = new int[N];
            int totalVotes = 0;
            for (int i = 0; i < N; i++) {
                X[i] = sc.nextInt();
                totalVotes += X[i];
            }

            long totalPrizePool = (long) totalVotes * 100 * (100 - P) / 100;

            if (X[M - 1] == 0) {
                System.out.println(0);
            } else {
                System.out.println(totalPrizePool / X[M - 1]);
            }
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p01143_1P.java" startline="1" endline="35" pcid="66978">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int N = sc.nextInt();
            int M = sc.nextInt();
            int P = sc.nextInt();

            if (N == 0 && M == 0 && P == 0) {
                break;
            }

            int[] X = new int[N];
            int totalVotes = 0;
            for (int i = 0; i < N; i++) {
                X[i] = sc.nextInt();
                totalVotes += X[i];
            }

            long totalPrizePool = (long) totalVotes * 100 * (100 - P) / 100;

            if (X[M - 1] == 0) {
                System.out.println(0);
            } else {
                System.out.println(totalPrizePool / X[M - 1]);
            }
        }

        sc.close();
    }
}

</source>
</class>

<class classid="503" nclones="2" nlines="27" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p01223_2P.java" startline="1" endline="30" pcid="54948">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        while (t-- > 0) {
            int n = sc.nextInt();
            int[] heights = new int[n];
            for (int i = 0; i < n; i++) {
                heights[i] = sc.nextInt();
            }

            int maxUp = 0;
            int maxDown = 0;

            for (int i = 0; i < n - 1; i++) {
                int diff = heights[i + 1] - heights[i];
                if (diff > 0) {
                    maxUp = Math.max(maxUp, diff);
                } else {
                    maxDown = Math.max(maxDown, -diff);
                }
            }
            System.out.println(maxUp + " " + maxDown);
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p01223_0P.java" startline="1" endline="30" pcid="66980">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        while (t-- > 0) {
            int n = sc.nextInt();
            int[] heights = new int[n];
            for (int i = 0; i < n; i++) {
                heights[i] = sc.nextInt();
            }

            int maxUp = 0;
            int maxDown = 0;

            for (int i = 0; i < n - 1; i++) {
                int diff = heights[i + 1] - heights[i];
                if (diff > 0) {
                    maxUp = Math.max(maxUp, diff);
                } else {
                    maxDown = Math.max(maxDown, -diff);
                }
            }
            System.out.println(maxUp + " " + maxDown);
        }
        sc.close();
    }
}

</source>
</class>

<class classid="504" nclones="2" nlines="42" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p01273_2P.java" startline="1" endline="50" pcid="54986">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        while (true) {
            int N = sc.nextInt();
            int M = sc.nextInt();
            if (N == 0 && M == 0) {
                break;
            }

            List<Packet> packets = new ArrayList<>();
            for (int i = 0; i < M; i++) {
                int t = sc.nextInt();
                int s = sc.nextInt();
                int d = sc.nextInt();
                packets.add(new Packet(t, s, d));
            }

            Collections.sort(packets, Comparator.comparingInt(p -> p.time));

            boolean[] infected = new boolean[N + 1];
            infected[1] = true;
            int infectedCount = 1;

            for (Packet p : packets) {
                if (infected[p.source] && !infected[p.destination]) {
                    infected[p.destination] = true;
                    infectedCount++;
                }
            }
            System.out.println(infectedCount);
        }
        sc.close();
    }

    static class Packet {
        int time;
        int source;
        int destination;

        Packet(int time, int source, int destination) {
            this.time = time;
            this.source = source;
            this.destination = destination;
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p01273_4P.java" startline="1" endline="50" pcid="66987">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        while (true) {
            int N = sc.nextInt();
            int M = sc.nextInt();
            if (N == 0 && M == 0) {
                break;
            }

            List<Packet> packets = new ArrayList<>();
            for (int i = 0; i < M; i++) {
                int t = sc.nextInt();
                int s = sc.nextInt();
                int d = sc.nextInt();
                packets.add(new Packet(t, s, d));
            }

            Collections.sort(packets, Comparator.comparingInt(p -> p.time));

            boolean[] infected = new boolean[N + 1];
            infected[1] = true;
            int infectedCount = 1;

            for (Packet p : packets) {
                if (infected[p.source] && !infected[p.destination]) {
                    infected[p.destination] = true;
                    infectedCount++;
                }
            }
            System.out.println(infectedCount);
        }
        sc.close();
    }

    static class Packet {
        int time;
        int source;
        int destination;

        Packet(int time, int source, int destination) {
            this.time = time;
            this.source = source;
            this.destination = destination;
        }
    }
}

</source>
</class>

<class classid="505" nclones="2" nlines="21" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p01314_4P.java" startline="1" endline="24" pcid="55010">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        while (true) {
            int n = sc.nextInt();
            if (n == 0) {
                break;
            }

            int count = 0;
            for (int k = 2; k * (k + 1) / 2 <= n; k++) {
                int numerator = n - k * (k - 1) / 2;
                if (numerator > 0 && numerator % k == 0) {
                    count++;
                }
            }
            System.out.println(count);
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p01314_1P.java" startline="1" endline="25" pcid="66989">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        while (true) {
            int n = sc.nextInt();
            if (n == 0) {
                break;
            }

            int count = 0;
            for (int k = 2; k * (k + 1) / 2 <= n; k++) {
                int numerator = n - k * (k - 1) / 2;
                if (numerator > 0 && numerator % k == 0) {
                    count++;
                }
            }
            System.out.println(count);
        }
        sc.close();
    }
}

</source>
</class>

<class classid="506" nclones="2" nlines="24" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p01802_0P.java" startline="1" endline="28" pcid="55161">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        while (true) {
            int D = sc.nextInt();
            int E = sc.nextInt();
            if (D == 0 && E == 0) {
                break;
            }

            double minDiff = Double.MAX_VALUE;

            for (int x = 0; x <= D; x++) {
                int y = D - x;
                double railLength = Math.sqrt(x * x + y * y);
                double diff = Math.abs(railLength - E);
                if (diff < minDiff) {
                    minDiff = diff;
                }
            }
            System.out.printf("%.10f%n", minDiff);
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p01802_2P.java" startline="1" endline="28" pcid="67010">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        while (true) {
            int D = sc.nextInt();
            int E = sc.nextInt();
            if (D == 0 && E == 0) {
                break;
            }

            double minDiff = Double.MAX_VALUE;

            for (int x = 0; x <= D; x++) {
                int y = D - x;
                double railLength = Math.sqrt(x * x + y * y);
                double diff = Math.abs(railLength - E);
                if (diff < minDiff) {
                    minDiff = diff;
                }
            }
            System.out.printf("%.10f%n", minDiff);
        }
        sc.close();
    }
}

</source>
</class>

<class classid="507" nclones="3" nlines="24" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p01802_4P.java" startline="1" endline="28" pcid="55163">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        while (true) {
            int D = sc.nextInt();
            int E = sc.nextInt();
            if (D == 0 && E == 0) {
                break;
            }

            double minDiff = Double.MAX_VALUE;

            for (int x = 0; x <= D; x++) {
                int y = D - x;
                double railLength = Math.sqrt(x * x + y * y);
                double diff = Math.abs(railLength - E);
                if (diff < minDiff) {
                    minDiff = diff;
                }
            }
            System.out.printf("%.10f\n", minDiff);
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p01802_1P.java" startline="1" endline="31" pcid="67009">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int D = sc.nextInt();
            int E = sc.nextInt();

            if (D == 0 && E == 0) {
                break;
            }

            double minDiff = Double.MAX_VALUE;

            for (int x = 0; x <= D; x++) {
                int y = D - x;
                double railLength = Math.sqrt(x * x + y * y);
                double diff = Math.abs(railLength - E);
                if (diff < minDiff) {
                    minDiff = diff;
                }
            }
            System.out.printf("%.10f\n", minDiff);
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p01802_3P.java" startline="1" endline="28" pcid="55164">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        while (true) {
            int D = sc.nextInt();
            int E = sc.nextInt();
            if (D == 0 && E == 0) {
                break;
            }

            double minDiff = Double.MAX_VALUE;

            for (int x = 0; x <= D; x++) {
                int y = D - x;
                double railLength = Math.sqrt(x * x + y * y);
                double diff = Math.abs(railLength - E);
                if (diff < minDiff) {
                    minDiff = diff;
                }
            }
            System.out.printf("%.10f\n", minDiff);
        }
        sc.close();
    }
}

</source>
</class>

<class classid="508" nclones="2" nlines="18" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02256_0P.java" startline="1" endline="22" pcid="55261">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        sc.close();
        System.out.println(gcd(a, b));
    }

    static int gcd(int a, int b) {
        while (b != 0) {
            int temp = b;
            b = a % b;
            a = temp;
        }
        return a;
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02256_3P.java" startline="1" endline="22" pcid="67020">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        sc.close();
        System.out.println(gcd(a, b));
    }

    static int gcd(int a, int b) {
        while (b != 0) {
            int temp = b;
            b = a % b;
            a = temp;
        }
        return a;
    }
}

</source>
</class>

<class classid="509" nclones="2" nlines="52" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02262_1P.java" startline="1" endline="62" pcid="55286">
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class Main {

    private static long cnt;

    public static void insertionSort(int[] A, int n, int g) {
        for (int i = g; i < n; i++) {
            int v = A[i];
            int j = i - g;
            while (j >= 0 && A[j] > v) {
                A[j + g] = A[j];
                j = j - g;
                cnt++;
            }
            A[j + g] = v;
        }
    }

    public static void shellSort(int[] A, int n) {
        cnt = 0;
        List<Integer> G = new ArrayList<>();
        int h = 1;
        while (h <= n) {
            G.add(h);
            h = 3 * h + 1;
        }
        Collections.reverse(G);

        System.out.println(G.size());
        for (int i = 0; i < G.size(); i++) {
            System.out.print(G.get(i) + (i == G.size() - 1 ? "" : " "));
        }
        System.out.println();

        for (int g : G) {
            insertionSort(A, n, g);
        }
    }

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int n = Integer.parseInt(br.readLine());
        int[] A = new int[n];
        for (int i = 0; i < n; i++) {
            A[i] = Integer.parseInt(br.readLine());
        }

        shellSort(A, n);

        System.out.println(cnt);
        for (int i = 0; i < n; i++) {
            System.out.println(A[i]);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02262_0P.java" startline="1" endline="62" pcid="67024">
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class Main {

    private static long cnt;

    public static void insertionSort(int[] A, int n, int g) {
        for (int i = g; i < n; i++) {
            int v = A[i];
            int j = i - g;
            while (j >= 0 && A[j] > v) {
                A[j + g] = A[j];
                j = j - g;
                cnt++;
            }
            A[j + g] = v;
        }
    }

    public static void shellSort(int[] A, int n) {
        cnt = 0;
        List<Integer> G = new ArrayList<>();
        int h = 1;
        while (h <= n) {
            G.add(h);
            h = 3 * h + 1;
        }
        Collections.reverse(G);

        System.out.println(G.size());
        for (int i = 0; i < G.size(); i++) {
            System.out.print(G.get(i) + (i == G.size() - 1 ? "" : " "));
        }
        System.out.println();

        for (int g : G) {
            insertionSort(A, n, g);
        }
    }

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int n = Integer.parseInt(br.readLine());
        int[] A = new int[n];
        for (int i = 0; i < n; i++) {
            A[i] = Integer.parseInt(br.readLine());
        }

        shellSort(A, n);

        System.out.println(cnt);
        for (int i = 0; i < n; i++) {
            System.out.println(A[i]);
        }
    }
}

</source>
</class>

<class classid="510" nclones="2" nlines="52" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02262_4P.java" startline="1" endline="62" pcid="55289">
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class Main {

    static long cnt;

    public static void insertionSort(int[] A, int n, int g) {
        for (int i = g; i < n; i++) {
            int v = A[i];
            int j = i - g;
            while (j >= 0 && A[j] > v) {
                A[j + g] = A[j];
                j = j - g;
                cnt++;
            }
            A[j + g] = v;
        }
    }

    public static void shellSort(int[] A, int n) {
        cnt = 0;
        List<Integer> G = new ArrayList<>();
        int h = 1;
        while (h <= n) {
            G.add(h);
            h = 3 * h + 1;
        }
        Collections.reverse(G);

        System.out.println(G.size());
        for (int i = 0; i < G.size(); i++) {
            System.out.print(G.get(i) + (i == G.size() - 1 ? "" : " "));
        }
        System.out.println();

        for (int g : G) {
            insertionSort(A, n, g);
        }
    }

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int n = Integer.parseInt(br.readLine());
        int[] A = new int[n];
        for (int i = 0; i < n; i++) {
            A[i] = Integer.parseInt(br.readLine());
        }

        shellSort(A, n);

        System.out.println(cnt);
        for (int i = 0; i < n; i++) {
            System.out.println(A[i]);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02262_2P.java" startline="1" endline="61" pcid="67025">
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class Main {
    static long cnt;

    public static void insertionSort(int[] A, int n, int g) {
        for (int i = g; i < n; i++) {
            int v = A[i];
            int j = i - g;
            while (j >= 0 && A[j] > v) {
                A[j + g] = A[j];
                j = j - g;
                cnt++;
            }
            A[j + g] = v;
        }
    }

    public static void shellSort(int[] A, int n) {
        cnt = 0;
        List<Integer> G = new ArrayList<>();
        int h = 1;
        while (h <= n) {
            G.add(h);
            h = 3 * h + 1;
        }
        Collections.reverse(G);

        System.out.println(G.size());
        for (int i = 0; i < G.size(); i++) {
            System.out.print(G.get(i) + (i == G.size() - 1 ? "" : " "));
        }
        System.out.println();

        for (int g : G) {
            insertionSort(A, n, g);
        }
    }

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int n = Integer.parseInt(br.readLine());
        int[] A = new int[n];
        for (int i = 0; i < n; i++) {
            A[i] = Integer.parseInt(br.readLine());
        }

        shellSort(A, n);

        System.out.println(cnt);
        for (int i = 0; i < n; i++) {
            System.out.println(A[i]);
        }
    }
}

</source>
</class>

<class classid="511" nclones="3" nlines="22" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02268_0P.java" startline="1" endline="27" pcid="55314">
import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int n = scanner.nextInt();
        Set<Integer> s = new HashSet<>();
        for (int i = 0; i < n; i++) {
            s.add(scanner.nextInt());
        }

        int q = scanner.nextInt();
        int count = 0;
        for (int i = 0; i < q; i++) {
            if (s.contains(scanner.nextInt())) {
                count++;
            }
        }

        System.out.println(count);
        scanner.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02268_4P.java" startline="1" endline="28" pcid="67026">
import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

public class Main {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int n = scanner.nextInt();
        Set<Integer> s = new HashSet<>();
        for (int i = 0; i < n; i++) {
            s.add(scanner.nextInt());
        }

        int q = scanner.nextInt();
        int count = 0;
        for (int i = 0; i < q; i++) {
            if (s.contains(scanner.nextInt())) {
                count++;
            }
        }

        System.out.println(count);
        scanner.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02268_1P.java" startline="1" endline="27" pcid="55315">
import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int n = scanner.nextInt();
        Set<Integer> s = new HashSet<>();
        for (int i = 0; i < n; i++) {
            s.add(scanner.nextInt());
        }

        int q = scanner.nextInt();
        int count = 0;
        for (int i = 0; i < q; i++) {
            if (s.contains(scanner.nextInt())) {
                count++;
            }
        }

        System.out.println(count);
        scanner.close();
    }
}

</source>
</class>

<class classid="512" nclones="5" nlines="25" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02287_0P.java" startline="1" endline="28" pcid="55396">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int H = sc.nextInt();
        long[] A = new long[H + 1];
        for (int i = 1; i <= H; i++) {
            A[i] = sc.nextLong();
        }

        for (int i = 1; i <= H; i++) {
            System.out.print("node " + i + ": key = " + A[i] + ", ");
            if (i / 2 >= 1) {
                System.out.print("parent key = " + A[i / 2] + ", ");
            }
            if (2 * i <= H) {
                System.out.print("left key = " + A[2 * i] + ", ");
            }
            if (2 * i + 1 <= H) {
                System.out.print("right key = " + A[2 * i + 1] + ", ");
            }
            System.out.println();
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02287_3P.java" startline="1" endline="29" pcid="67037">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int H = sc.nextInt();
        long[] A = new long[H + 1];
        for (int i = 1; i <= H; i++) {
            A[i] = sc.nextLong();
        }

        for (int i = 1; i <= H; i++) {
            System.out.print("node " + i + ": key = " + A[i] + ", ");

            if (i / 2 >= 1) {
                System.out.print("parent key = " + A[i / 2] + ", ");
            }
            if (2 * i <= H) {
                System.out.print("left key = " + A[2 * i] + ", ");
            }
            if (2 * i + 1 <= H) {
                System.out.print("right key = " + A[2 * i + 1] + ", ");
            }
            System.out.println();
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02287_1P.java" startline="1" endline="28" pcid="55398">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int H = sc.nextInt();
        long[] A = new long[H + 1];
        for (int i = 1; i <= H; i++) {
            A[i] = sc.nextLong();
        }

        for (int i = 1; i <= H; i++) {
            System.out.print("node " + i + ": key = " + A[i] + ", ");
            if (i / 2 >= 1) {
                System.out.print("parent key = " + A[i / 2] + ", ");
            }
            if (2 * i <= H) {
                System.out.print("left key = " + A[2 * i] + ", ");
            }
            if (2 * i + 1 <= H) {
                System.out.print("right key = " + A[2 * i + 1] + ", ");
            }
            System.out.println();
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02287_4P.java" startline="1" endline="28" pcid="55399">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int H = sc.nextInt();
        long[] A = new long[H + 1];
        for (int i = 1; i <= H; i++) {
            A[i] = sc.nextLong();
        }

        for (int i = 1; i <= H; i++) {
            System.out.print("node " + i + ": key = " + A[i] + ", ");
            if (i / 2 >= 1) {
                System.out.print("parent key = " + A[i / 2] + ", ");
            }
            if (2 * i <= H) {
                System.out.print("left key = " + A[2 * i] + ", ");
            }
            if (2 * i + 1 <= H) {
                System.out.print("right key = " + A[2 * i + 1] + ", ");
            }
            System.out.println();
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02287_2P.java" startline="1" endline="28" pcid="55401">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int H = sc.nextInt();
        long[] A = new long[H + 1];
        for (int i = 1; i <= H; i++) {
            A[i] = sc.nextLong();
        }

        for (int i = 1; i <= H; i++) {
            System.out.print("node " + i + ": key = " + A[i] + ", ");
            if (i / 2 >= 1) {
                System.out.print("parent key = " + A[i / 2] + ", ");
            }
            if (2 * i <= H) {
                System.out.print("left key = " + A[2 * i] + ", ");
            }
            if (2 * i + 1 <= H) {
                System.out.print("right key = " + A[2 * i + 1] + ", ");
            }
            System.out.println();
        }
        sc.close();
    }
}

</source>
</class>

<class classid="513" nclones="3" nlines="29" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02318_0P.java" startline="1" endline="35" pcid="55447">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s1 = sc.next();
        String s2 = sc.next();
        sc.close();

        int m = s1.length();
        int n = s2.length();

        int[][] dp = new int[m + 1][n + 1];

        for (int i = 0; i <= m; i++) {
            dp[i][0] = i;
        }

        for (int j = 0; j <= n; j++) {
            dp[0][j] = j;
        }

        for (int i = 1; i <= m; i++) {
            for (int j = 1; j <= n; j++) {
                if (s1.charAt(i - 1) == s2.charAt(j - 1)) {
                    dp[i][j] = dp[i - 1][j - 1];
                } else {
                    dp[i][j] = 1 + Math.min(dp[i - 1][j], Math.min(dp[i][j - 1], dp[i - 1][j - 1]));
                }
            }
        }
        System.out.println(dp[m][n]);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02318_1P.java" startline="1" endline="35" pcid="67042">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s1 = sc.next();
        String s2 = sc.next();
        sc.close();

        int m = s1.length();
        int n = s2.length();

        int[][] dp = new int[m + 1][n + 1];

        for (int i = 0; i <= m; i++) {
            dp[i][0] = i;
        }

        for (int j = 0; j <= n; j++) {
            dp[0][j] = j;
        }

        for (int i = 1; i <= m; i++) {
            for (int j = 1; j <= n; j++) {
                if (s1.charAt(i - 1) == s2.charAt(j - 1)) {
                    dp[i][j] = dp[i - 1][j - 1];
                } else {
                    dp[i][j] = 1 + Math.min(dp[i - 1][j], Math.min(dp[i][j - 1], dp[i - 1][j - 1]));
                }
            }
        }
        System.out.println(dp[m][n]);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02318_4P.java" startline="1" endline="36" pcid="55454">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s1 = sc.next();
        String s2 = sc.next();
        sc.close();

        int m = s1.length();
        int n = s2.length();

        int[][] dp = new int[m + 1][n + 1];

        for (int i = 0; i <= m; i++) {
            dp[i][0] = i;
        }

        for (int j = 0; j <= n; j++) {
            dp[0][j] = j;
        }

        for (int i = 1; i <= m; i++) {
            for (int j = 1; j <= n; j++) {
                if (s1.charAt(i - 1) == s2.charAt(j - 1)) {
                    dp[i][j] = dp[i - 1][j - 1];
                } else {
                    dp[i][j] = 1 + Math.min(dp[i - 1][j], Math.min(dp[i][j - 1], dp[i - 1][j - 1]));
                }
            }
        }

        System.out.println(dp[m][n]);
    }
}

</source>
</class>

<class classid="514" nclones="3" nlines="56" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02363_1P.java" startline="1" endline="66" pcid="55492">
import java.util.Scanner;

public class Main {

    private static final long INF = Long.MAX_VALUE / 2;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int V = sc.nextInt();
        int E = sc.nextInt();

        long[][] dist = new long[V][V];

        for (int i = 0; i < V; i++) {
            for (int j = 0; j < V; j++) {
                if (i == j) {
                    dist[i][j] = 0;
                } else {
                    dist[i][j] = INF;
                }
            }
        }

        for (int i = 0; i < E; i++) {
            int s = sc.nextInt();
            int t = sc.nextInt();
            long d = sc.nextLong();
            dist[s][t] = d;
        }

        for (int k = 0; k < V; k++) {
            for (int i = 0; i < V; i++) {
                for (int j = 0; j < V; j++) {
                    if (dist[i][k] != INF && dist[k][j] != INF) {
                        dist[i][j] = Math.min(dist[i][j], dist[i][k] + dist[k][j]);
                    }
                }
            }
        }

        for (int i = 0; i < V; i++) {
            if (dist[i][i] < 0) {
                System.out.println("NEGATIVE CYCLE");
                return;
            }
        }

        for (int i = 0; i < V; i++) {
            for (int j = 0; j < V; j++) {
                if (dist[i][j] == INF) {
                    System.out.print("INF");
                } else {
                    System.out.print(dist[i][j]);
                }
                if (j < V - 1) {
                    System.out.print(" ");
                }
            }
            System.out.println();
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02363_4P.java" startline="1" endline="66" pcid="67047">
import java.util.Scanner;

public class Main {

  private static final long INF = Long.MAX_VALUE / 2;

  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);

    int V = sc.nextInt();
    int E = sc.nextInt();

    long[][] dist = new long[V][V];

    for (int i = 0; i < V; i++) {
      for (int j = 0; j < V; j++) {
        if (i == j) {
          dist[i][j] = 0;
        } else {
          dist[i][j] = INF;
        }
      }
    }

    for (int i = 0; i < E; i++) {
      int s = sc.nextInt();
      int t = sc.nextInt();
      long d = sc.nextLong();
      dist[s][t] = d;
    }

    for (int k = 0; k < V; k++) {
      for (int i = 0; i < V; i++) {
        for (int j = 0; j < V; j++) {
          if (dist[i][k] != INF && dist[k][j] != INF) {
            dist[i][j] = Math.min(dist[i][j], dist[i][k] + dist[k][j]);
          }
        }
      }
    }

    for (int i = 0; i < V; i++) {
      if (dist[i][i] < 0) {
        System.out.println("NEGATIVE CYCLE");
        return;
      }
    }

    for (int i = 0; i < V; i++) {
      for (int j = 0; j < V; j++) {
        if (dist[i][j] == INF) {
          System.out.print("INF");
        } else {
          System.out.print(dist[i][j]);
        }
        if (j < V - 1) {
          System.out.print(" ");
        }
      }
      System.out.println();
    }

    sc.close();
  }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02363_3P.java" startline="1" endline="66" pcid="55494">
import java.util.Scanner;

public class Main {

    private static final long INF = Long.MAX_VALUE / 2;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int V = sc.nextInt();
        int E = sc.nextInt();

        long[][] dist = new long[V][V];

        for (int i = 0; i < V; i++) {
            for (int j = 0; j < V; j++) {
                if (i == j) {
                    dist[i][j] = 0;
                } else {
                    dist[i][j] = INF;
                }
            }
        }

        for (int i = 0; i < E; i++) {
            int s = sc.nextInt();
            int t = sc.nextInt();
            long d = sc.nextLong();
            dist[s][t] = d;
        }

        for (int k = 0; k < V; k++) {
            for (int i = 0; i < V; i++) {
                for (int j = 0; j < V; j++) {
                    if (dist[i][k] != INF && dist[k][j] != INF) {
                        dist[i][j] = Math.min(dist[i][j], dist[i][k] + dist[k][j]);
                    }
                }
            }
        }

        for (int i = 0; i < V; i++) {
            if (dist[i][i] < 0) {
                System.out.println("NEGATIVE CYCLE");
                return;
            }
        }

        for (int i = 0; i < V; i++) {
            for (int j = 0; j < V; j++) {
                if (dist[i][j] == INF) {
                    System.out.print("INF");
                } else {
                    System.out.print(dist[i][j]);
                }
                if (j < V - 1) {
                    System.out.print(" ");
                }
            }
            System.out.println();
        }

        sc.close();
    }
}

</source>
</class>

<class classid="515" nclones="2" nlines="12" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02390_3P.java" startline="1" endline="17" pcid="55573">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int S = sc.nextInt();

        int h = S / 3600;
        S %= 3600;
        int m = S / 60;
        int s = S % 60;

        System.out.println(h + ":" + m + ":" + s);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02390_0P.java" startline="1" endline="17" pcid="67052">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int S = sc.nextInt();

        int h = S / 3600;
        S %= 3600;
        int m = S / 60;
        int s = S % 60;

        System.out.println(h + ":" + m + ":" + s);
    }
}

</source>
</class>

<class classid="516" nclones="4" nlines="18" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02391_2P.java" startline="1" endline="21" pcid="55576">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();

        if (a < b) {
            System.out.println("a < b");
        } else if (a > b) {
            System.out.println("a > b");
        } else {
            System.out.println("a == b");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02391_0P.java" startline="1" endline="20" pcid="67053">
import java.util.Scanner;

public class Main {

  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int a = sc.nextInt();
    int b = sc.nextInt();

    if (a < b) {
      System.out.println("a < b");
    } else if (a > b) {
      System.out.println("a > b");
    } else {
      System.out.println("a == b");
    }
    sc.close();
  }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02391_3P.java" startline="1" endline="19" pcid="55577">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();

        if (a < b) {
            System.out.println("a < b");
        } else if (a > b) {
            System.out.println("a > b");
        } else {
            System.out.println("a == b");
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02391_4P.java" startline="1" endline="20" pcid="55578">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();

        if (a < b) {
            System.out.println("a < b");
        } else if (a > b) {
            System.out.println("a > b");
        } else {
            System.out.println("a == b");
        }
        sc.close();
    }
}

</source>
</class>

<class classid="517" nclones="2" nlines="13" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02399_3P.java" startline="1" endline="18" pcid="55612">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();

        int d = a / b;
        int r = a % b;
        double f = (double) a / b;

        System.out.printf("%d %d %.5f%n", d, r, f);

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02399_3P.java" startline="1" endline="18" pcid="65368">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();

        int d = a / b;
        int r = a % b;
        double f = (double) a / b;

        System.out.printf("%d %d %.5f%n", d, r, f);

        sc.close();
    }
}

</source>
</class>

<class classid="518" nclones="3" nlines="26" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02406_2P.java" startline="1" endline="31" pcid="55639">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        call(n);
        sc.close();
    }

    public static void call(int n) {
        for (int i = 1; i <= n; i++) {
            int x = i;
            if (x % 3 == 0) {
                System.out.print(" " + i);
                continue;
            }

            while (x != 0) {
                if (x % 10 == 3) {
                    System.out.print(" " + i);
                    break;
                }
                x /= 10;
            }
        }
        System.out.println();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02406_0P.java" startline="1" endline="30" pcid="67057">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        call(n);
        sc.close();
    }

    public static void call(int n) {
        for (int i = 1; i <= n; i++) {
            int x = i;
            if (x % 3 == 0) {
                System.out.print(" " + i);
                continue;
            }
            while (x != 0) {
                if (x % 10 == 3) {
                    System.out.print(" " + i);
                    break;
                }
                x /= 10;
            }
        }
        System.out.println();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02406_4P.java" startline="1" endline="30" pcid="55642">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        call(n);
        sc.close();
    }

    public static void call(int n) {
        for (int i = 1; i <= n; i++) {
            int x = i;
            if (x % 3 == 0) {
                System.out.print(" " + i);
                continue;
            }
            while (x != 0) {
                if (x % 10 == 3) {
                    System.out.print(" " + i);
                    break;
                }
                x /= 10;
            }
        }
        System.out.println();
    }
}

</source>
</class>

<class classid="519" nclones="2" nlines="26" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02410_2P.java" startline="1" endline="33" pcid="55659">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        int m = sc.nextInt();

        int[][] a = new int[n][m];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                a[i][j] = sc.nextInt();
            }
        }

        int[] b = new int[m];
        for (int i = 0; i < m; i++) {
            b[i] = sc.nextInt();
        }

        for (int i = 0; i < n; i++) {
            int sum = 0;
            for (int j = 0; j < m; j++) {
                sum += a[i][j] * b[j];
            }
            System.out.println(sum);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02410_4P.java" startline="1" endline="33" pcid="67061">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        int m = sc.nextInt();

        int[][] a = new int[n][m];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                a[i][j] = sc.nextInt();
            }
        }

        int[] b = new int[m];
        for (int i = 0; i < m; i++) {
            b[i] = sc.nextInt();
        }

        for (int i = 0; i < n; i++) {
            int sum = 0;
            for (int j = 0; j < m; j++) {
                sum += a[i][j] * b[j];
            }
            System.out.println(sum);
        }

        sc.close();
    }
}

</source>
</class>

<class classid="520" nclones="2" nlines="25" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02412_2P.java" startline="1" endline="30" pcid="55666">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int n = sc.nextInt();
            int x = sc.nextInt();

            if (n == 0 && x == 0) {
                break;
            }

            int count = 0;
            for (int i = 1; i <= n; i++) {
                for (int j = i + 1; j <= n; j++) {
                    for (int k = j + 1; k <= n; k++) {
                        if (i + j + k == x) {
                            count++;
                        }
                    }
                }
            }
            System.out.println(count);
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02412_0P.java" startline="1" endline="31" pcid="67062">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            int n = sc.nextInt();
            int x = sc.nextInt();

            if (n == 0 && x == 0) {
                break;
            }

            int count = 0;
            for (int i = 1; i <= n; i++) {
                for (int j = i + 1; j <= n; j++) {
                    for (int k = j + 1; k <= n; k++) {
                        if (i + j + k == x) {
                            count++;
                        }
                    }
                }
            }
            System.out.println(count);
        }

        sc.close();
    }
}

</source>
</class>

<class classid="521" nclones="4" nlines="36" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02414_2P.java" startline="1" endline="45" pcid="55675">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        int m = sc.nextInt();
        int l = sc.nextInt();

        long[][] a = new long[n][m];
        long[][] b = new long[m][l];
        long[][] c = new long[n][l];

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                a[i][j] = sc.nextLong();
            }
        }

        for (int i = 0; i < m; i++) {
            for (int j = 0; j < l; j++) {
                b[i][j] = sc.nextLong();
            }
        }

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < l; j++) {
                for (int k = 0; k < m; k++) {
                    c[i][j] += a[i][k] * b[k][j];
                }
            }
        }

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < l; j++) {
                System.out.print(c[i][j] + (j == l - 1 ? "" : " "));
            }
            System.out.println();
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02414_4P.java" startline="1" endline="45" pcid="67063">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        int m = sc.nextInt();
        int l = sc.nextInt();

        long[][] a = new long[n][m];
        long[][] b = new long[m][l];
        long[][] c = new long[n][l];

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                a[i][j] = sc.nextLong();
            }
        }

        for (int i = 0; i < m; i++) {
            for (int j = 0; j < l; j++) {
                b[i][j] = sc.nextLong();
            }
        }

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < l; j++) {
                for (int k = 0; k < m; k++) {
                    c[i][j] += a[i][k] * b[k][j];
                }
            }
        }

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < l; j++) {
                System.out.print(c[i][j] + (j == l - 1 ? "" : " "));
            }
            System.out.println();
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02414_1P.java" startline="1" endline="45" pcid="55678">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        int m = sc.nextInt();
        int l = sc.nextInt();

        long[][] a = new long[n][m];
        long[][] b = new long[m][l];
        long[][] c = new long[n][l];

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                a[i][j] = sc.nextLong();
            }
        }

        for (int i = 0; i < m; i++) {
            for (int j = 0; j < l; j++) {
                b[i][j] = sc.nextLong();
            }
        }

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < l; j++) {
                for (int k = 0; k < m; k++) {
                    c[i][j] += a[i][k] * b[k][j];
                }
            }
        }

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < l; j++) {
                System.out.print(c[i][j] + (j == l - 1 ? "" : " "));
            }
            System.out.println();
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02414_3P.java" startline="1" endline="45" pcid="55677">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        int m = sc.nextInt();
        int l = sc.nextInt();

        long[][] a = new long[n][m];
        long[][] b = new long[m][l];
        long[][] c = new long[n][l];

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                a[i][j] = sc.nextLong();
            }
        }

        for (int i = 0; i < m; i++) {
            for (int j = 0; j < l; j++) {
                b[i][j] = sc.nextLong();
            }
        }

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < l; j++) {
                for (int k = 0; k < m; k++) {
                    c[i][j] += a[i][k] * b[k][j];
                }
            }
        }

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < l; j++) {
                System.out.print(c[i][j] + (j == l - 1 ? "" : " "));
            }
            System.out.println();
        }

        sc.close();
    }
}

</source>
</class>

<class classid="522" nclones="3" nlines="18" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02416_0P.java" startline="1" endline="24" pcid="55680">
import java.util.Scanner;

public class Main {

  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);

    while (true) {
      String x = sc.next();
      if (x.equals("0")) {
        break;
      }

      int sum = 0;
      for (char c : x.toCharArray()) {
        sum += Character.getNumericValue(c);
      }
      System.out.println(sum);
    }

    sc.close();
  }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02416_2P.java" startline="1" endline="24" pcid="67064">
import java.util.Scanner;

public class Main {

  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);

    while (true) {
      String x = sc.next();
      if (x.equals("0")) {
        break;
      }

      int sum = 0;
      for (char c : x.toCharArray()) {
        sum += Character.getNumericValue(c);
      }
      System.out.println(sum);
    }

    sc.close();
  }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02416_1P.java" startline="1" endline="24" pcid="55688">
import java.util.Scanner;

public class Main {

  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);

    while (true) {
      String x = sc.next();
      if (x.equals("0")) {
        break;
      }

      int sum = 0;
      for (char c : x.toCharArray()) {
        sum += Character.getNumericValue(c);
      }
      System.out.println(sum);
    }

    sc.close();
  }
}

</source>
</class>

<class classid="523" nclones="3" nlines="19" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02419_1P.java" startline="1" endline="22" pcid="55698">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String W = sc.next().toLowerCase();
        int count = 0;

        while (sc.hasNext()) {
            String T = sc.next();
            if (T.equals("END_OF_TEXT")) {
                break;
            }
            if (T.toLowerCase().equals(W)) {
                count++;
            }
        }
        System.out.println(count);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02419_0P.java" startline="1" endline="22" pcid="67065">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String W = sc.next().toLowerCase();
        int count = 0;

        while (sc.hasNext()) {
            String T = sc.next();
            if (T.equals("END_OF_TEXT")) {
                break;
            }
            if (T.toLowerCase().equals(W)) {
                count++;
            }
        }
        System.out.println(count);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02419_3P.java" startline="1" endline="22" pcid="55699">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String W = sc.next().toLowerCase();
        int count = 0;

        while (sc.hasNext()) {
            String T = sc.next();
            if (T.equals("END_OF_TEXT")) {
                break;
            }
            if (T.toLowerCase().equals(W)) {
                count++;
            }
        }
        System.out.println(count);
        sc.close();
    }
}

</source>
</class>

<class classid="524" nclones="2" nlines="33" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02442_3P.java" startline="1" endline="38" pcid="55764">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }

        int m = sc.nextInt();
        int[] b = new int[m];
        for (int i = 0; i < m; i++) {
            b[i] = sc.nextInt();
        }

        int minLen = Math.min(n, m);
        for (int i = 0; i < minLen; i++) {
            if (a[i] < b[i]) {
                System.out.println(1);
                return;
            } else if (a[i] > b[i]) {
                System.out.println(0);
                return;
            }
        }

        if (n < m) {
            System.out.println(1);
        } else {
            System.out.println(0);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02442_2P.java" startline="1" endline="38" pcid="65388">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }

        int m = sc.nextInt();
        int[] b = new int[m];
        for (int i = 0; i < m; i++) {
            b[i] = sc.nextInt();
        }

        int minLen = Math.min(n, m);

        for (int i = 0; i < minLen; i++) {
            if (a[i] < b[i]) {
                System.out.println(1);
                return;
            } else if (a[i] > b[i]) {
                System.out.println(0);
                return;
            }
        }

        if (n < m) {
            System.out.println(1);
        } else {
            System.out.println(0);
        }
    }
}

</source>
</class>

<class classid="525" nclones="3" nlines="19" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02467_2P.java" startline="1" endline="26" pcid="55777">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        System.out.print(n + ":");

        for (int i = 2; i * i <= n; i++) {
            while (n % i == 0) {
                System.out.print(" " + i);
                n /= i;
            }
        }

        if (n > 1) {
            System.out.print(" " + n);
        }
        System.out.println();

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02467_4P.java" startline="1" endline="23" pcid="67074">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        System.out.print(n + ":");

        for (int i = 2; i * i <= n; i++) {
            while (n % i == 0) {
                System.out.print(" " + i);
                n /= i;
            }
        }
        if (n > 1) {
            System.out.print(" " + n);
        }
        System.out.println();
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02467_3P.java" startline="1" endline="26" pcid="67073">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        System.out.print(n + ":");

        for (int i = 2; i * i <= n; i++) {
            while (n % i == 0) {
                System.out.print(" " + i);
                n /= i;
            }
        }

        if (n > 1) {
            System.out.print(" " + n);
        }
        System.out.println();

        sc.close();
    }
}

</source>
</class>

<class classid="526" nclones="2" nlines="20" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02468_3P.java" startline="1" endline="26" pcid="55782">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long m = sc.nextLong();
        long n = sc.nextLong();
        long mod = 1000000007;

        long result = 1;
        m %= mod;

        while (n > 0) {
            if (n % 2 == 1) {
                result = (result * m) % mod;
            }
            m = (m * m) % mod;
            n /= 2;
        }

        System.out.println(result);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02468_4P.java" startline="1" endline="26" pcid="67075">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long m = sc.nextLong();
        long n = sc.nextLong();
        long mod = 1000000007;

        long result = 1;
        m %= mod;

        while (n > 0) {
            if (n % 2 == 1) {
                result = (result * m) % mod;
            }
            m = (m * m) % mod;
            n /= 2;
        }

        System.out.println(result);
        sc.close();
    }
}

</source>
</class>

<class classid="527" nclones="3" nlines="22" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02469_0P.java" startline="1" endline="27" pcid="55784">
import java.util.Scanner;

public class Main {

    public static long gcd(long a, long b) {
        if (b == 0) {
            return a;
        }
        return gcd(b, a % b);
    }

    public static long lcm(long a, long b) {
        return (a * b) / gcd(a, b);
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        long result = sc.nextLong();
        for (int i = 1; i < n; i++) {
            result = lcm(result, sc.nextLong());
        }
        System.out.println(result);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02469_2P.java" startline="1" endline="27" pcid="67077">
import java.util.Scanner;

public class Main {

    public static long gcd(long a, long b) {
        if (b == 0) {
            return a;
        }
        return gcd(b, a % b);
    }

    public static long lcm(long a, long b) {
        return (a * b) / gcd(a, b);
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        long result = sc.nextLong();
        for (int i = 1; i < n; i++) {
            result = lcm(result, sc.nextLong());
        }
        System.out.println(result);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02469_4P.java" startline="1" endline="27" pcid="55786">
import java.util.Scanner;

public class Main {

    public static long gcd(long a, long b) {
        if (b == 0) {
            return a;
        }
        return gcd(b, a % b);
    }

    public static long lcm(long a, long b) {
        return (a * b) / gcd(a, b);
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        long result = sc.nextLong();
        for (int i = 1; i < n; i++) {
            result = lcm(result, sc.nextLong());
        }
        System.out.println(result);
        sc.close();
    }
}

</source>
</class>

<class classid="528" nclones="4" nlines="13" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02534_0P.java" startline="1" endline="15" pcid="55792">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int K = sc.nextInt();
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < K; i++) {
            sb.append("ACL");
        }
        System.out.println(sb.toString());
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p02534_0P.java" startline="1" endline="17" pcid="65394">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int K = sc.nextInt();

        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < K; i++) {
            sb.append("ACL");
        }

        System.out.println(sb.toString());
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02534_3P.java" startline="1" endline="15" pcid="55795">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int K = sc.nextInt();
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < K; i++) {
            sb.append("ACL");
        }
        System.out.println(sb.toString());
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02534_4P.java" startline="1" endline="15" pcid="55796">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int K = sc.nextInt();
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < K; i++) {
            sb.append("ACL");
        }
        System.out.println(sb.toString());
        sc.close();
    }
}

</source>
</class>

<class classid="529" nclones="4" nlines="18" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02577_0P.java" startline="1" endline="19" pcid="55925">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String N = sc.next();
        long sum = 0;
        for (char c : N.toCharArray()) {
            sum += Character.getNumericValue(c);
        }
        if (sum % 9 == 0) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02577_1P.java" startline="1" endline="19" pcid="67091">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String N = sc.next();
        long sum = 0;
        for (char c : N.toCharArray()) {
            sum += Character.getNumericValue(c);
        }
        if (sum % 9 == 0) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02577_2P.java" startline="1" endline="19" pcid="55926">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String N = sc.next();
        long sum = 0;
        for (char c : N.toCharArray()) {
            sum += Character.getNumericValue(c);
        }
        if (sum % 9 == 0) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02577_3P.java" startline="1" endline="19" pcid="55928">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String N = sc.next();
        long sum = 0;
        for (char c : N.toCharArray()) {
            sum += Character.getNumericValue(c);
        }
        if (sum % 9 == 0) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
        sc.close();
    }
}

</source>
</class>

<class classid="530" nclones="3" nlines="32" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02600_2P.java" startline="1" endline="28" pcid="56003">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int x = sc.nextInt();
        sc.close();

        if (x >= 400 && x <= 599) {
            System.out.println(8);
        } else if (x >= 600 && x <= 799) {
            System.out.println(7);
        } else if (x >= 800 && x <= 999) {
            System.out.println(6);
        } else if (x >= 1000 && x <= 1199) {
            System.out.println(5);
        } else if (x >= 1200 && x <= 1399) {
            System.out.println(4);
        } else if (x >= 1400 && x <= 1599) {
            System.out.println(3);
        } else if (x >= 1600 && x <= 1799) {
            System.out.println(2);
        } else if (x >= 1800 && x <= 1999) {
            System.out.println(1);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02600_0P.java" startline="1" endline="28" pcid="67099">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int x = sc.nextInt();
        sc.close();

        if (x >= 400 && x <= 599) {
            System.out.println(8);
        } else if (x >= 600 && x <= 799) {
            System.out.println(7);
        } else if (x >= 800 && x <= 999) {
            System.out.println(6);
        } else if (x >= 1000 && x <= 1199) {
            System.out.println(5);
        } else if (x >= 1200 && x <= 1399) {
            System.out.println(4);
        } else if (x >= 1400 && x <= 1599) {
            System.out.println(3);
        } else if (x >= 1600 && x <= 1799) {
            System.out.println(2);
        } else if (x >= 1800 && x <= 1999) {
            System.out.println(1);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02600_4P.java" startline="1" endline="28" pcid="56004">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int x = sc.nextInt();
        sc.close();

        if (x >= 400 && x <= 599) {
            System.out.println(8);
        } else if (x >= 600 && x <= 799) {
            System.out.println(7);
        } else if (x >= 800 && x <= 999) {
            System.out.println(6);
        } else if (x >= 1000 && x <= 1199) {
            System.out.println(5);
        } else if (x >= 1200 && x <= 1399) {
            System.out.println(4);
        } else if (x >= 1400 && x <= 1599) {
            System.out.println(3);
        } else if (x >= 1600 && x <= 1799) {
            System.out.println(2);
        } else if (x >= 1800 && x <= 1999) {
            System.out.println(1);
        }
    }
}

</source>
</class>

<class classid="531" nclones="3" nlines="16" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02607_3P.java" startline="1" endline="18" pcid="56034">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int count = 0;
        for (int i = 1; i <= N; i++) {
            int a_i = sc.nextInt();
            if ((i % 2 != 0) && (a_i % 2 != 0)) {
                count++;
            }
        }
        System.out.println(count);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02607_2P.java" startline="1" endline="18" pcid="67103">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int count = 0;
        for (int i = 1; i <= N; i++) {
            int a_i = sc.nextInt();
            if ((i % 2 != 0) && (a_i % 2 != 0)) {
                count++;
            }
        }
        System.out.println(count);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02607_4P.java" startline="1" endline="18" pcid="67104">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int count = 0;
        for (int i = 1; i <= N; i++) {
            int a_i = sc.nextInt();
            if ((i % 2 != 0) && (a_i % 2 != 0)) {
                count++;
            }
        }
        System.out.println(count);
        sc.close();
    }
}

</source>
</class>

<class classid="532" nclones="2" nlines="33" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02619_2P.java" startline="1" endline="38" pcid="56080">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int D = sc.nextInt();
        int[] c = new int[27];
        for (int i = 1; i <= 26; i++) {
            c[i] = sc.nextInt();
        }
        int[][] s = new int[D + 1][27];
        for (int i = 1; i <= D; i++) {
            for (int j = 1; j <= 26; j++) {
                s[i][j] = sc.nextInt();
            }
        }
        int[] t = new int[D + 1];
        for (int i = 1; i <= D; i++) {
            t[i] = sc.nextInt();
        }

        long totalSatisfaction = 0;
        int[] lastContestDay = new int[27];

        for (int d = 1; d <= D; d++) {
            int contestType = t[d];
            totalSatisfaction += s[d][contestType];
            lastContestDay[contestType] = d;

            for (int i = 1; i <= 26; i++) {
                totalSatisfaction -= c[i] * (d - lastContestDay[i]);
            }
            System.out.println(totalSatisfaction);
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02619_1P.java" startline="1" endline="42" pcid="67111">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int D = sc.nextInt();
        int[] c = new int[27];
        for (int i = 1; i <= 26; i++) {
            c[i] = sc.nextInt();
        }

        int[][] s = new int[D + 1][27];
        for (int i = 1; i <= D; i++) {
            for (int j = 1; j <= 26; j++) {
                s[i][j] = sc.nextInt();
            }
        }

        int[] t = new int[D + 1];
        for (int i = 1; i <= D; i++) {
            t[i] = sc.nextInt();
        }

        long totalSatisfaction = 0;
        int[] lastContestDay = new int[27];

        for (int d = 1; d <= D; d++) {
            int contestType = t[d];
            totalSatisfaction += s[d][contestType];
            lastContestDay[contestType] = d;

            for (int i = 1; i <= 26; i++) {
                totalSatisfaction -= c[i] * (d - lastContestDay[i]);
            }
            System.out.println(totalSatisfaction);
        }

        sc.close();
    }
}

</source>
</class>

<class classid="533" nclones="2" nlines="20" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02628_3P.java" startline="1" endline="22" pcid="56120">
import java.util.Arrays;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        int[] p = new int[N];
        for (int i = 0; i < N; i++) {
            p[i] = sc.nextInt();
        }
        Arrays.sort(p);
        int totalPrice = 0;
        for (int i = 0; i < K; i++) {
            totalPrice += p[i];
        }
        System.out.println(totalPrice);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02628_0P.java" startline="1" endline="22" pcid="67115">
import java.util.Arrays;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        int[] p = new int[N];
        for (int i = 0; i < N; i++) {
            p[i] = sc.nextInt();
        }
        Arrays.sort(p);
        int totalPrice = 0;
        for (int i = 0; i < K; i++) {
            totalPrice += p[i];
        }
        System.out.println(totalPrice);
        sc.close();
    }
}

</source>
</class>

<class classid="534" nclones="5" nlines="15" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02629_0P.java" startline="1" endline="20" pcid="56121">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long n = sc.nextLong();
        sc.close();

        StringBuilder sb = new StringBuilder();

        while (n > 0) {
            n--;
            sb.append((char) ('a' + (n % 26)));
            n /= 26;
        }

        System.out.println(sb.reverse().toString());
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02629_2P.java" startline="1" endline="20" pcid="67116">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long n = sc.nextLong();
        sc.close();

        StringBuilder sb = new StringBuilder();

        while (n > 0) {
            n--;
            sb.append((char) ('a' + (n % 26)));
            n /= 26;
        }

        System.out.println(sb.reverse().toString());
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02629_4P.java" startline="1" endline="20" pcid="56125">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long n = sc.nextLong();
        sc.close();

        StringBuilder sb = new StringBuilder();

        while (n > 0) {
            n--;
            sb.append((char) ('a' + (n % 26)));
            n /= 26;
        }

        System.out.println(sb.reverse().toString());
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02629_3P.java" startline="1" endline="20" pcid="56124">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long n = sc.nextLong();
        sc.close();

        StringBuilder sb = new StringBuilder();

        while (n > 0) {
            n--;
            sb.append((char) ('a' + (n % 26)));
            n /= 26;
        }

        System.out.println(sb.reverse().toString());
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02629_1P.java" startline="1" endline="20" pcid="56123">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long n = sc.nextLong();
        sc.close();

        StringBuilder sb = new StringBuilder();

        while (n > 0) {
            n--;
            sb.append((char) ('a' + (n % 26)));
            n /= 26;
        }

        System.out.println(sb.reverse().toString());
    }
}

</source>
</class>

<class classid="535" nclones="2" nlines="27" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02675_0P.java" startline="1" endline="30" pcid="56236">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int lastDigit = n % 10;

        switch (lastDigit) {
            case 2:
            case 4:
            case 5:
            case 7:
            case 9:
                System.out.println("hon");
                break;
            case 0:
            case 1:
            case 6:
            case 8:
                System.out.println("pon");
                break;
            case 3:
                System.out.println("bon");
                break;
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02675_3P.java" startline="1" endline="30" pcid="67134">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int lastDigit = n % 10;

        switch (lastDigit) {
            case 2:
            case 4:
            case 5:
            case 7:
            case 9:
                System.out.println("hon");
                break;
            case 0:
            case 1:
            case 6:
            case 8:
                System.out.println("pon");
                break;
            case 3:
                System.out.println("bon");
                break;
        }
        sc.close();
    }
}

</source>
</class>

<class classid="536" nclones="3" nlines="47" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02683_1P.java" startline="1" endline="58" pcid="56270">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        int M = sc.nextInt();
        int X = sc.nextInt();

        int[] C = new int[N];
        int[][] A = new int[N][M];

        for (int i = 0; i < N; i++) {
            C[i] = sc.nextInt();
            for (int j = 0; j < M; j++) {
                A[i][j] = sc.nextInt();
            }
        }

        long minCost = Long.MAX_VALUE;

        for (int i = 0; i < (1 << N); i++) {
            long currentCost = 0;
            int[] understandingLevels = new int[M];

            for (int j = 0; j < N; j++) {
                if (((i >> j) & 1) == 1) {
                    currentCost += C[j];
                    for (int k = 0; k < M; k++) {
                        understandingLevels[k] += A[j][k];
                    }
                }
            }

            boolean meetsRequirement = true;
            for (int j = 0; j < M; j++) {
                if (understandingLevels[j] < X) {
                    meetsRequirement = false;
                    break;
                }
            }

            if (meetsRequirement) {
                minCost = Math.min(minCost, currentCost);
            }
        }

        if (minCost == Long.MAX_VALUE) {
            System.out.println(-1);
        } else {
            System.out.println(minCost);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02683_0P.java" startline="1" endline="57" pcid="67139">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int M = sc.nextInt();
        int X = sc.nextInt();

        int[] C = new int[N];
        int[][] A = new int[N][M];

        for (int i = 0; i < N; i++) {
            C[i] = sc.nextInt();
            for (int j = 0; j < M; j++) {
                A[i][j] = sc.nextInt();
            }
        }

        long minCost = Long.MAX_VALUE;

        for (int i = 0; i < (1 << N); i++) {
            long currentCost = 0;
            int[] understandingLevels = new int[M];

            for (int j = 0; j < N; j++) {
                if (((i >> j) & 1) == 1) {
                    currentCost += C[j];
                    for (int k = 0; k < M; k++) {
                        understandingLevels[k] += A[j][k];
                    }
                }
            }

            boolean meetsRequirement = true;
            for (int j = 0; j < M; j++) {
                if (understandingLevels[j] < X) {
                    meetsRequirement = false;
                    break;
                }
            }

            if (meetsRequirement) {
                minCost = Math.min(minCost, currentCost);
            }
        }

        if (minCost == Long.MAX_VALUE) {
            System.out.println(-1);
        } else {
            System.out.println(minCost);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02683_4P.java" startline="1" endline="58" pcid="56274">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        int M = sc.nextInt();
        int X = sc.nextInt();

        int[] C = new int[N];
        int[][] A = new int[N][M];

        for (int i = 0; i < N; i++) {
            C[i] = sc.nextInt();
            for (int j = 0; j < M; j++) {
                A[i][j] = sc.nextInt();
            }
        }

        long minCost = Long.MAX_VALUE;

        for (int i = 0; i < (1 << N); i++) {
            long currentCost = 0;
            int[] understandingLevels = new int[M];

            for (int j = 0; j < N; j++) {
                if (((i >> j) & 1) == 1) {
                    currentCost += C[j];
                    for (int k = 0; k < M; k++) {
                        understandingLevels[k] += A[j][k];
                    }
                }
            }

            boolean meetsRequirement = true;
            for (int j = 0; j < M; j++) {
                if (understandingLevels[j] < X) {
                    meetsRequirement = false;
                    break;
                }
            }

            if (meetsRequirement) {
                minCost = Math.min(minCost, currentCost);
            }
        }

        if (minCost == Long.MAX_VALUE) {
            System.out.println(-1);
        } else {
            System.out.println(minCost);
        }

        sc.close();
    }
}

</source>
</class>

<class classid="537" nclones="3" nlines="20" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02688_4P.java" startline="1" endline="22" pcid="56295">
import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        Set<Integer> snukesWithSnacks = new HashSet<>();
        for (int i = 0; i < K; i++) {
            int d = sc.nextInt();
            for (int j = 0; j < d; j++) {
                snukesWithSnacks.add(sc.nextInt());
            }
        }
        sc.close();
        int victims = N - snukesWithSnacks.size();
        System.out.println(victims);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02688_3P.java" startline="1" endline="25" pcid="67142">
import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();

        Set<Integer> snukesWithSnacks = new HashSet<>();

        for (int i = 0; i < K; i++) {
            int d = sc.nextInt();
            for (int j = 0; j < d; j++) {
                snukesWithSnacks.add(sc.nextInt());
            }
        }
        sc.close();

        int victims = N - snukesWithSnacks.size();
        System.out.println(victims);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02688_2P.java" startline="1" endline="22" pcid="56296">
import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        Set<Integer> snukesWithSnacks = new HashSet<>();
        for (int i = 0; i < K; i++) {
            int d = sc.nextInt();
            for (int j = 0; j < d; j++) {
                snukesWithSnacks.add(sc.nextInt());
            }
        }
        sc.close();
        int victims = N - snukesWithSnacks.size();
        System.out.println(victims);
    }
}

</source>
</class>

<class classid="538" nclones="2" nlines="12" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02719_2P.java" startline="1" endline="16" pcid="56427">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long n = sc.nextLong();
        long k = sc.nextLong();
        sc.close();

        n %= k;
        long result = Math.min(n, k - n);

        System.out.println(result);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02719_3P.java" startline="1" endline="16" pcid="67152">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long n = sc.nextLong();
        long k = sc.nextLong();
        sc.close();

        n %= k;
        long result = Math.min(n, k - n);

        System.out.println(result);
    }
}

</source>
</class>

<class classid="539" nclones="2" nlines="43" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02727_2P.java" startline="1" endline="52" pcid="56465">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int X = sc.nextInt();
        int Y = sc.nextInt();
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();

        Integer[] p = new Integer[A];
        for (int i = 0; i < A; i++) {
            p[i] = sc.nextInt();
        }
        Integer[] q = new Integer[B];
        for (int i = 0; i < B; i++) {
            q[i] = sc.nextInt();
        }
        Integer[] r = new Integer[C];
        for (int i = 0; i < C; i++) {
            r[i] = sc.nextInt();
        }

        Arrays.sort(p, Collections.reverseOrder());
        Arrays.sort(q, Collections.reverseOrder());
        Arrays.sort(r, Collections.reverseOrder());

        List<Integer> allApples = new ArrayList<>();
        for (int i = 0; i < X; i++) {
            allApples.add(p[i]);
        }
        for (int i = 0; i < Y; i++) {
            allApples.add(q[i]);
        }
        for (int val : r) {
            allApples.add(val);
        }

        Collections.sort(allApples, Collections.reverseOrder());

        long sum = 0;
        for (int i = 0; i < X + Y; i++) {
            sum += allApples.get(i);
        }

        System.out.println(sum);

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02727_0P.java" startline="1" endline="52" pcid="67153">
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int X = sc.nextInt();
        int Y = sc.nextInt();
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();

        Integer[] p = new Integer[A];
        for (int i = 0; i < A; i++) {
            p[i] = sc.nextInt();
        }
        Integer[] q = new Integer[B];
        for (int i = 0; i < B; i++) {
            q[i] = sc.nextInt();
        }
        Integer[] r = new Integer[C];
        for (int i = 0; i < C; i++) {
            r[i] = sc.nextInt();
        }

        Arrays.sort(p, Collections.reverseOrder());
        Arrays.sort(q, Collections.reverseOrder());
        Arrays.sort(r, Collections.reverseOrder());

        List<Integer> allApples = new ArrayList<>();
        for (int i = 0; i < X; i++) {
            allApples.add(p[i]);
        }
        for (int i = 0; i < Y; i++) {
            allApples.add(q[i]);
        }
        for (int val : r) {
            allApples.add(val);
        }

        Collections.sort(allApples, Collections.reverseOrder());

        long sum = 0;
        for (int i = 0; i < X + Y; i++) {
            sum += allApples.get(i);
        }

        System.out.println(sum);

        sc.close();
    }
}

</source>
</class>

<class classid="540" nclones="2" nlines="18" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02730_1P.java" startline="1" endline="24" pcid="56479">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        int n = s.length();

        if (isPalindrome(s) &&
            isPalindrome(s.substring(0, (n - 1) / 2)) &&
            isPalindrome(s.substring((n + 3) / 2 - 1, n))) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }

    public static boolean isPalindrome(String str) {
        StringBuilder sb = new StringBuilder(str);
        return str.equals(sb.reverse().toString());
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02730_3P.java" startline="1" endline="24" pcid="67154">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        int n = s.length();

        if (isPalindrome(s) &&
            isPalindrome(s.substring(0, (n - 1) / 2)) &&
            isPalindrome(s.substring((n + 3) / 2 - 1, n))) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }

    public static boolean isPalindrome(String str) {
        StringBuilder sb = new StringBuilder(str);
        return str.equals(sb.reverse().toString());
    }
}

</source>
</class>

<class classid="541" nclones="5" nlines="10" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02741_2P.java" startline="1" endline="13" pcid="56507">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int K = sc.nextInt();
        sc.close();

        int[] sequence = {1, 1, 1, 2, 1, 2, 1, 5, 2, 2, 1, 5, 1, 2, 1, 14, 1, 5, 1, 5, 2, 2, 1, 15, 2, 2, 5, 4, 1, 4, 1, 51};
        System.out.println(sequence[K - 1]);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02741_1P.java" startline="1" endline="14" pcid="67158">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int K = sc.nextInt();
        sc.close();

        int[] sequence = {1, 1, 1, 2, 1, 2, 1, 5, 2, 2, 1, 5, 1, 2, 1, 14, 1, 5, 1, 5, 2, 2, 1, 15, 2, 2, 5, 4, 1, 4, 1, 51};

        System.out.println(sequence[K - 1]);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02741_4P.java" startline="1" endline="14" pcid="56509">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int K = sc.nextInt();
        sc.close();

        int[] sequence = {1, 1, 1, 2, 1, 2, 1, 5, 2, 2, 1, 5, 1, 2, 1, 14, 1, 5, 1, 5, 2, 2, 1, 15, 2, 2, 5, 4, 1, 4, 1, 51};

        System.out.println(sequence[K - 1]);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02741_3P.java" startline="1" endline="14" pcid="56508">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int K = sc.nextInt();
        sc.close();

        int[] sequence = {1, 1, 1, 2, 1, 2, 1, 5, 2, 2, 1, 5, 1, 2, 1, 14, 1, 5, 1, 5, 2, 2, 1, 15, 2, 2, 5, 4, 1, 4, 1, 51};

        System.out.println(sequence[K - 1]);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02741_0P.java" startline="1" endline="14" pcid="56512">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int K = sc.nextInt();
        sc.close();

        int[] sequence = {1, 1, 1, 2, 1, 2, 1, 5, 2, 2, 1, 5, 1, 2, 1, 14, 1, 5, 1, 5, 2, 2, 1, 15, 2, 2, 5, 4, 1, 4, 1, 51};

        System.out.println(sequence[K - 1]);
    }
}

</source>
</class>

<class classid="542" nclones="2" nlines="15" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02742_4P.java" startline="1" endline="17" pcid="56515">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long H = sc.nextLong();
        long W = sc.nextLong();
        sc.close();

        if (H == 1 || W == 1) {
            System.out.println(1);
        } else {
            System.out.println((H * W + 1) / 2);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02742_1P.java" startline="1" endline="17" pcid="67159">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long H = sc.nextLong();
        long W = sc.nextLong();
        sc.close();

        if (H == 1 || W == 1) {
            System.out.println(1);
        } else {
            System.out.println((H * W + 1) / 2);
        }
    }
}

</source>
</class>

<class classid="543" nclones="3" nlines="13" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02778_0P.java" startline="1" endline="15" pcid="56645">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.next();
        StringBuilder result = new StringBuilder();
        for (int i = 0; i < S.length(); i++) {
            result.append('x');
        }
        System.out.println(result.toString());
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02778_1P.java" startline="1" endline="15" pcid="67176">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.next();
        StringBuilder result = new StringBuilder();
        for (int i = 0; i < S.length(); i++) {
            result.append('x');
        }
        System.out.println(result.toString());
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02778_3P.java" startline="1" endline="15" pcid="56648">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String S = sc.next();
        StringBuilder result = new StringBuilder();
        for (int i = 0; i < S.length(); i++) {
            result.append('x');
        }
        System.out.println(result.toString());
        sc.close();
    }
}

</source>
</class>

<class classid="544" nclones="2" nlines="26" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02780_3P.java" startline="1" endline="32" pcid="56654">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        int[] p = new int[N];
        for (int i = 0; i < N; i++) {
            p[i] = sc.nextInt();
        }
        sc.close();

        double currentSum = 0;
        for (int i = 0; i < K; i++) {
            currentSum += (double) (p[i] + 1) / 2;
        }

        double maxSum = currentSum;

        for (int i = K; i < N; i++) {
            currentSum += (double) (p[i] + 1) / 2;
            currentSum -= (double) (p[i - K] + 1) / 2;
            if (currentSum > maxSum) {
                maxSum = currentSum;
            }
        }

        System.out.printf("%.12f\n", maxSum);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02780_1P.java" startline="1" endline="32" pcid="67178">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        int[] p = new int[N];
        for (int i = 0; i < N; i++) {
            p[i] = sc.nextInt();
        }
        sc.close();

        double currentSum = 0;
        for (int i = 0; i < K; i++) {
            currentSum += (double) (p[i] + 1) / 2;
        }

        double maxSum = currentSum;

        for (int i = K; i < N; i++) {
            currentSum += (double) (p[i] + 1) / 2;
            currentSum -= (double) (p[i - K] + 1) / 2;
            if (currentSum > maxSum) {
                maxSum = currentSum;
            }
        }

        System.out.printf("%.12f\n", maxSum);
    }
}

</source>
</class>

<class classid="545" nclones="4" nlines="11" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02783_0P.java" startline="1" endline="14" pcid="56667">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int H = sc.nextInt();
        int A = sc.nextInt();
        sc.close();

        int attacks = (H + A - 1) / A;
        System.out.println(attacks);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02783_2P.java" startline="1" endline="14" pcid="67179">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int H = sc.nextInt();
        int A = sc.nextInt();
        sc.close();

        int attacks = (H + A - 1) / A;
        System.out.println(attacks);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02783_1P.java" startline="1" endline="14" pcid="56668">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int H = sc.nextInt();
        int A = sc.nextInt();
        sc.close();

        int attacks = (H + A - 1) / A;
        System.out.println(attacks);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02783_3P.java" startline="1" endline="14" pcid="56669">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int H = sc.nextInt();
        int A = sc.nextInt();
        sc.close();

        int attacks = (H + A - 1) / A;
        System.out.println(attacks);
    }
}

</source>
</class>

<class classid="546" nclones="3" nlines="21" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02791_3P.java" startline="1" endline="25" pcid="56703">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] P = new int[N];
        for (int i = 0; i < N; i++) {
            P[i] = sc.nextInt();
        }
        sc.close();

        int count = 0;
        int minSoFar = Integer.MAX_VALUE;

        for (int i = 0; i < N; i++) {
            if (P[i] <= minSoFar) {
                count++;
                minSoFar = P[i];
            }
        }
        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02791_1P.java" startline="1" endline="24" pcid="67181">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] P = new int[N];
        for (int i = 0; i < N; i++) {
            P[i] = sc.nextInt();
        }
        sc.close();

        int count = 0;
        int minSoFar = Integer.MAX_VALUE;
        for (int i = 0; i < N; i++) {
            if (P[i] <= minSoFar) {
                count++;
                minSoFar = P[i];
            }
        }
        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02791_0P.java" startline="1" endline="24" pcid="56705">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] P = new int[N];
        for (int i = 0; i < N; i++) {
            P[i] = sc.nextInt();
        }
        sc.close();

        int count = 0;
        int minSoFar = Integer.MAX_VALUE;
        for (int i = 0; i < N; i++) {
            if (P[i] <= minSoFar) {
                count++;
                minSoFar = P[i];
            }
        }
        System.out.println(count);
    }
}

</source>
</class>

<class classid="547" nclones="4" nlines="16" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02812_0P.java" startline="1" endline="19" pcid="56776">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        String S = sc.next();
        sc.close();

        int count = 0;
        for (int i = 0; i <= N - 3; i++) {
            if (S.substring(i, i + 3).equals("ABC")) {
                count++;
            }
        }
        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02812_4P.java" startline="1" endline="19" pcid="67187">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        String S = sc.next();
        sc.close();

        int count = 0;
        for (int i = 0; i <= N - 3; i++) {
            if (S.substring(i, i + 3).equals("ABC")) {
                count++;
            }
        }
        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02812_3P.java" startline="1" endline="19" pcid="56780">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        String S = sc.next();
        sc.close();

        int count = 0;
        for (int i = 0; i <= N - 3; i++) {
            if (S.substring(i, i + 3).equals("ABC")) {
                count++;
            }
        }
        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02812_1P.java" startline="1" endline="19" pcid="56778">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        String S = sc.next();
        sc.close();

        int count = 0;
        for (int i = 0; i <= N - 3; i++) {
            if (S.substring(i, i + 3).equals("ABC")) {
                count++;
            }
        }
        System.out.println(count);
    }
}

</source>
</class>

<class classid="548" nclones="5" nlines="19" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02818_0P.java" startline="1" endline="23" pcid="56803">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long A = sc.nextLong();
        long B = sc.nextLong();
        long K = sc.nextLong();

        if (A >= K) {
            A -= K;
        } else {
            K -= A;
            A = 0;
            B = Math.max(0, B - K);
        }

        System.out.println(A + " " + B);

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02818_1P.java" startline="1" endline="23" pcid="67191">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long A = sc.nextLong();
        long B = sc.nextLong();
        long K = sc.nextLong();

        if (A >= K) {
            A -= K;
        } else {
            K -= A;
            A = 0;
            B = Math.max(0, B - K);
        }

        System.out.println(A + " " + B);

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02818_2P.java" startline="1" endline="22" pcid="56804">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long A = sc.nextLong();
        long B = sc.nextLong();
        long K = sc.nextLong();

        if (A >= K) {
            A -= K;
        } else {
            K -= A;
            A = 0;
            B = Math.max(0, B - K);
        }

        System.out.println(A + " " + B);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02818_4P.java" startline="1" endline="22" pcid="56807">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long A = sc.nextLong();
        long B = sc.nextLong();
        long K = sc.nextLong();

        if (A >= K) {
            A -= K;
        } else {
            K -= A;
            A = 0;
            B = Math.max(0, B - K);
        }

        System.out.println(A + " " + B);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02818_3P.java" startline="1" endline="23" pcid="56805">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long A = sc.nextLong();
        long B = sc.nextLong();
        long K = sc.nextLong();

        if (A >= K) {
            A -= K;
        } else {
            K -= A;
            A = 0;
            B = Math.max(0, B - K);
        }

        System.out.println(A + " " + B);

        sc.close();
    }
}

</source>
</class>

<class classid="549" nclones="2" nlines="18" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02829_4P.java" startline="1" endline="19" pcid="56829">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        sc.close();

        if (A != 1 && B != 1) {
            System.out.println(1);
        } else if (A != 2 && B != 2) {
            System.out.println(2);
        } else {
            System.out.println(3);
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02829_2P.java" startline="1" endline="19" pcid="67196">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        sc.close();

        if (A != 1 && B != 1) {
            System.out.println(1);
        } else if (A != 2 && B != 2) {
            System.out.println(2);
        } else {
            System.out.println(3);
        }
    }
}

</source>
</class>

<class classid="550" nclones="3" nlines="20" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02831_1P.java" startline="1" endline="25" pcid="56835">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long A = sc.nextLong();
        long B = sc.nextLong();
        sc.close();

        long gcd = gcd(A, B);
        long lcm = (A * B) / gcd;

        System.out.println(lcm);
    }

    private static long gcd(long a, long b) {
        while (b != 0) {
            long temp = b;
            b = a % b;
            a = temp;
        }
        return a;
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02831_0P.java" startline="1" endline="25" pcid="67198">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long A = sc.nextLong();
        long B = sc.nextLong();
        sc.close();

        long gcd = gcd(A, B);
        long lcm = (A * B) / gcd;

        System.out.println(lcm);
    }

    private static long gcd(long a, long b) {
        while (b != 0) {
            long temp = b;
            b = a % b;
            a = temp;
        }
        return a;
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02831_2P.java" startline="1" endline="24" pcid="56837">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long A = sc.nextLong();
        long B = sc.nextLong();
        sc.close();

        long gcd = gcd(A, B);
        long lcm = (A * B) / gcd;
        System.out.println(lcm);
    }

    private static long gcd(long a, long b) {
        while (b != 0) {
            long temp = b;
            b = a % b;
            a = temp;
        }
        return a;
    }
}

</source>
</class>

<class classid="551" nclones="5" nlines="24" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02844_1P.java" startline="1" endline="29" pcid="56890">
import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        String S = sc.next();
        sc.close();

        Set<String> pinCodes = new HashSet<>();

        for (int i = 0; i < N; i++) {
            for (int j = i + 1; j < N; j++) {
                for (int k = j + 1; k < N; k++) {
                    StringBuilder sb = new StringBuilder();
                    sb.append(S.charAt(i));
                    sb.append(S.charAt(j));
                    sb.append(S.charAt(k));
                    pinCodes.add(sb.toString());
                }
            }
        }

        System.out.println(pinCodes.size());
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02844_0P.java" startline="1" endline="29" pcid="67204">
import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        String S = sc.next();
        sc.close();

        Set<String> pinCodes = new HashSet<>();

        for (int i = 0; i < N; i++) {
            for (int j = i + 1; j < N; j++) {
                for (int k = j + 1; k < N; k++) {
                    StringBuilder sb = new StringBuilder();
                    sb.append(S.charAt(i));
                    sb.append(S.charAt(j));
                    sb.append(S.charAt(k));
                    pinCodes.add(sb.toString());
                }
            }
        }

        System.out.println(pinCodes.size());
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02844_3P.java" startline="1" endline="29" pcid="67205">
import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        String S = sc.next();
        sc.close();

        Set<String> pinCodes = new HashSet<>();

        for (int i = 0; i < N; i++) {
            for (int j = i + 1; j < N; j++) {
                for (int k = j + 1; k < N; k++) {
                    StringBuilder sb = new StringBuilder();
                    sb.append(S.charAt(i));
                    sb.append(S.charAt(j));
                    sb.append(S.charAt(k));
                    pinCodes.add(sb.toString());
                }
            }
        }

        System.out.println(pinCodes.size());
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02844_4P.java" startline="1" endline="29" pcid="56892">
import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        String S = sc.next();
        sc.close();

        Set<String> pinCodes = new HashSet<>();

        for (int i = 0; i < N; i++) {
            for (int j = i + 1; j < N; j++) {
                for (int k = j + 1; k < N; k++) {
                    StringBuilder sb = new StringBuilder();
                    sb.append(S.charAt(i));
                    sb.append(S.charAt(j));
                    sb.append(S.charAt(k));
                    pinCodes.add(sb.toString());
                }
            }
        }

        System.out.println(pinCodes.size());
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02844_2P.java" startline="1" endline="29" pcid="56891">
import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        String S = sc.next();
        sc.close();

        Set<String> pinCodes = new HashSet<>();

        for (int i = 0; i < N; i++) {
            for (int j = i + 1; j < N; j++) {
                for (int k = j + 1; k < N; k++) {
                    StringBuilder sb = new StringBuilder();
                    sb.append(S.charAt(i));
                    sb.append(S.charAt(j));
                    sb.append(S.charAt(k));
                    pinCodes.add(sb.toString());
                }
            }
        }

        System.out.println(pinCodes.size());
    }
}

</source>
</class>

<class classid="552" nclones="2" nlines="16" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02881_2P.java" startline="1" endline="19" pcid="57005">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long n = sc.nextLong();
        long minMoves = Long.MAX_VALUE;

        for (long i = 1; i * i <= n; i++) {
            if (n % i == 0) {
                long j = n / i;
                minMoves = Math.min(minMoves, (i - 1) + (j - 1));
            }
        }
        System.out.println(minMoves);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02881_1P.java" startline="1" endline="19" pcid="67221">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long n = sc.nextLong();
        long minMoves = Long.MAX_VALUE;

        for (long i = 1; i * i <= n; i++) {
            if (n % i == 0) {
                long j = n / i;
                minMoves = Math.min(minMoves, (i - 1) + (j - 1));
            }
        }
        System.out.println(minMoves);
        sc.close();
    }
}

</source>
</class>

<class classid="553" nclones="2" nlines="20" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02887_0P.java" startline="1" endline="24" pcid="57031">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        String S = sc.next();
        sc.close();

        if (N == 0) {
            System.out.println(0);
            return;
        }

        int distinctSlimes = 1;
        for (int i = 1; i < N; i++) {
            if (S.charAt(i) != S.charAt(i - 1)) {
                distinctSlimes++;
            }
        }
        System.out.println(distinctSlimes);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02887_1P.java" startline="1" endline="24" pcid="67224">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        String S = sc.next();
        sc.close();

        if (N == 0) {
            System.out.println(0);
            return;
        }

        int distinctSlimes = 1;
        for (int i = 1; i < N; i++) {
            if (S.charAt(i) != S.charAt(i - 1)) {
                distinctSlimes++;
            }
        }
        System.out.println(distinctSlimes);
    }
}

</source>
</class>

<class classid="554" nclones="5" nlines="17" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02898_2P.java" startline="1" endline="20" pcid="57064">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        int count = 0;
        for (int i = 0; i < N; i++) {
            int h = sc.nextInt();
            if (h >= K) {
                count++;
            }
        }
        System.out.println(count);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02898_1P.java" startline="1" endline="19" pcid="67227">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        int count = 0;
        for (int i = 0; i < N; i++) {
            int h = sc.nextInt();
            if (h >= K) {
                count++;
            }
        }
        System.out.println(count);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/deepseek_p02898_2P.java" startline="1" endline="21" pcid="66387">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        int count = 0;

        for (int i = 0; i < N; i++) {
            int h = sc.nextInt();
            if (h >= K) {
                count++;
            }
        }

        System.out.println(count);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02898_4P.java" startline="1" endline="19" pcid="57066">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        int count = 0;
        for (int i = 0; i < N; i++) {
            int h = sc.nextInt();
            if (h >= K) {
                count++;
            }
        }
        System.out.println(count);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02898_3P.java" startline="1" endline="19" pcid="57065">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        int count = 0;
        for (int i = 0; i < N; i++) {
            int h = sc.nextInt();
            if (h >= K) {
                count++;
            }
        }
        System.out.println(count);
        sc.close();
    }
}

</source>
</class>

<class classid="555" nclones="4" nlines="15" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02933_0P.java" startline="1" endline="16" pcid="57195">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        String s = sc.next();
        if (a >= 3200) {
            System.out.println(s);
        } else {
            System.out.println("red");
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02933_3P.java" startline="1" endline="16" pcid="67241">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        String s = sc.next();
        if (a >= 3200) {
            System.out.println(s);
        } else {
            System.out.println("red");
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02933_2P.java" startline="1" endline="16" pcid="57196">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        String s = sc.next();
        if (a >= 3200) {
            System.out.println(s);
        } else {
            System.out.println("red");
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02933_4P.java" startline="1" endline="16" pcid="57197">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        String s = sc.next();
        if (a >= 3200) {
            System.out.println(s);
        } else {
            System.out.println("red");
        }
        sc.close();
    }
}

</source>
</class>

<class classid="556" nclones="4" nlines="14" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02934_1P.java" startline="1" endline="16" pcid="57198">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        double sumOfInverses = 0.0;
        for (int i = 0; i < N; i++) {
            int A = sc.nextInt();
            sumOfInverses += 1.0 / A;
        }
        System.out.println(1.0 / sumOfInverses);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02934_3P.java" startline="1" endline="16" pcid="67243">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        double sumOfInverses = 0.0;
        for (int i = 0; i < N; i++) {
            int A = sc.nextInt();
            sumOfInverses += 1.0 / A;
        }
        System.out.println(1.0 / sumOfInverses);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02934_0P.java" startline="1" endline="16" pcid="67242">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        double sumOfInverses = 0.0;
        for (int i = 0; i < N; i++) {
            int A = sc.nextInt();
            sumOfInverses += 1.0 / A;
        }
        System.out.println(1.0 / sumOfInverses);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02934_4P.java" startline="1" endline="16" pcid="57199">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        double sumOfInverses = 0.0;
        for (int i = 0; i < N; i++) {
            int A = sc.nextInt();
            sumOfInverses += 1.0 / A;
        }
        System.out.println(1.0 / sumOfInverses);
        sc.close();
    }
}

</source>
</class>

<class classid="557" nclones="2" nlines="19" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02973_3P.java" startline="1" endline="23" pcid="57333">
import java.util.Scanner;
import java.util.TreeSet;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        TreeSet<Integer> tails = new TreeSet<>();

        for (int i = 0; i < N; i++) {
            int A_i = sc.nextInt();
            Integer higher = tails.higher(A_i);
            if (higher != null) {
                tails.remove(higher);
            }
            tails.add(A_i);
        }

        System.out.println(tails.size());
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02973_0P.java" startline="1" endline="21" pcid="67250">
import java.util.Scanner;
import java.util.TreeSet;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        TreeSet<Integer> tails = new TreeSet<>();
        for (int i = 0; i < N; i++) {
            int A_i = sc.nextInt();
            Integer higher = tails.higher(A_i);
            if (higher != null) {
                tails.remove(higher);
            }
            tails.add(A_i);
        }
        System.out.println(tails.size());
        sc.close();
    }
}

</source>
</class>

<class classid="558" nclones="3" nlines="13" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02981_0P.java" startline="1" endline="17" pcid="57351">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int A = sc.nextInt();
        int B = sc.nextInt();
        sc.close();

        int trainCost = N * A;
        int minCost = Math.min(trainCost, B);

        System.out.println(minCost);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02981_3P.java" startline="1" endline="17" pcid="67252">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int A = sc.nextInt();
        int B = sc.nextInt();
        sc.close();

        int trainCost = N * A;
        int minCost = Math.min(trainCost, B);

        System.out.println(minCost);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p02981_4P.java" startline="1" endline="17" pcid="57353">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int A = sc.nextInt();
        int B = sc.nextInt();
        sc.close();

        int trainCost = N * A;
        int minCost = Math.min(trainCost, B);

        System.out.println(minCost);
    }
}

</source>
</class>

<class classid="559" nclones="2" nlines="17" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02987_0P.java" startline="1" endline="19" pcid="57372">
import java.util.Arrays;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        char[] chars = s.toCharArray();
        Arrays.sort(chars);

        if (chars[0] == chars[1] && chars[2] == chars[3] && chars[0] != chars[2]) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02987_4P.java" startline="1" endline="20" pcid="67259">
import java.util.Arrays;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        char[] chars = s.toCharArray();
        Arrays.sort(chars);

        if (chars[0] == chars[1] && chars[2] == chars[3] && chars[0] != chars[2]) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }

        sc.close();
    }
}

</source>
</class>

<class classid="560" nclones="2" nlines="22" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02988_1P.java" startline="1" endline="26" pcid="57375">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] p = new int[n];
        for (int i = 0; i < n; i++) {
            p[i] = sc.nextInt();
        }
        sc.close();

        int count = 0;
        for (int i = 1; i < n - 1; i++) {
            int p_prev = p[i - 1];
            int p_curr = p[i];
            int p_next = p[i + 1];

            if ((p_curr > p_prev && p_curr < p_next) || (p_curr < p_prev && p_curr > p_next)) {
                count++;
            }
        }
        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02988_2P.java" startline="1" endline="26" pcid="67260">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] p = new int[n];
        for (int i = 0; i < n; i++) {
            p[i] = sc.nextInt();
        }
        sc.close();

        int count = 0;
        for (int i = 1; i < n - 1; i++) {
            int p_prev = p[i - 1];
            int p_curr = p[i];
            int p_next = p[i + 1];

            if ((p_curr > p_prev && p_curr < p_next) || (p_curr < p_prev && p_curr > p_next)) {
                count++;
            }
        }
        System.out.println(count);
    }
}

</source>
</class>

<class classid="561" nclones="2" nlines="21" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p02993_3P.java" startline="1" endline="26" pcid="57397">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();

        boolean isHardToEnter = false;
        for (int i = 0; i < s.length() - 1; i++) {
            if (s.charAt(i) == s.charAt(i + 1)) {
                isHardToEnter = true;
                break;
            }
        }

        if (isHardToEnter) {
            System.out.println("Bad");
        } else {
            System.out.println("Good");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p02993_4P.java" startline="1" endline="25" pcid="67264">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();

        boolean isHardToEnter = false;
        for (int i = 0; i < s.length() - 1; i++) {
            if (s.charAt(i) == s.charAt(i + 1)) {
                isHardToEnter = true;
                break;
            }
        }

        if (isHardToEnter) {
            System.out.println("Bad");
        } else {
            System.out.println("Good");
        }

        sc.close();
    }
}

</source>
</class>

<class classid="562" nclones="2" nlines="25" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p03012_0P.java" startline="1" endline="32" pcid="57472">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] W = new int[N];
        for (int i = 0; i < N; i++) {
            W[i] = sc.nextInt();
        }
        sc.close();

        int minDiff = Integer.MAX_VALUE;

        for (int T = 1; T < N; T++) {
            int S1 = 0;
            for (int i = 0; i < T; i++) {
                S1 += W[i];
            }

            int S2 = 0;
            for (int i = T; i < N; i++) {
                S2 += W[i];
            }

            minDiff = Math.min(minDiff, Math.abs(S1 - S2));
        }

        System.out.println(minDiff);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03012_3P.java" startline="1" endline="32" pcid="67269">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] W = new int[N];
        for (int i = 0; i < N; i++) {
            W[i] = sc.nextInt();
        }
        sc.close();

        int minDiff = Integer.MAX_VALUE;

        for (int T = 1; T < N; T++) {
            int S1 = 0;
            for (int i = 0; i < T; i++) {
                S1 += W[i];
            }

            int S2 = 0;
            for (int i = T; i < N; i++) {
                S2 += W[i];
            }

            minDiff = Math.min(minDiff, Math.abs(S1 - S2));
        }

        System.out.println(minDiff);
    }
}

</source>
</class>

<class classid="563" nclones="2" nlines="51" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p03014_4P.java" startline="1" endline="58" pcid="57482">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int H = sc.nextInt();
        int W = sc.nextInt();
        char[][] S = new char[H][W];
        for (int i = 0; i < H; i++) {
            S[i] = sc.next().toCharArray();
        }

        int[][] left = new int[H][W];
        int[][] right = new int[H][W];
        int[][] up = new int[H][W];
        int[][] down = new int[H][W];

        for (int i = 0; i < H; i++) {
            for (int j = 0; j < W; j++) {
                if (S[i][j] == '.') {
                    left[i][j] = 1 + (j > 0 ? left[i][j - 1] : 0);
                }
            }
            for (int j = W - 1; j >= 0; j--) {
                if (S[i][j] == '.') {
                    right[i][j] = 1 + (j < W - 1 ? right[i][j + 1] : 0);
                }
            }
        }

        for (int j = 0; j < W; j++) {
            for (int i = 0; i < H; i++) {
                if (S[i][j] == '.') {
                    up[i][j] = 1 + (i > 0 ? up[i - 1][j] : 0);
                }
            }
            for (int i = H - 1; i >= 0; i--) {
                if (S[i][j] == '.') {
                    down[i][j] = 1 + (i < H - 1 ? down[i + 1][j] : 0);
                }
            }
        }

        int maxLighted = 0;
        for (int i = 0; i < H; i++) {
            for (int j = 0; j < W; j++) {
                if (S[i][j] == '.') {
                    int currentLighted = left[i][j] + right[i][j] + up[i][j] + down[i][j] - 3;
                    maxLighted = Math.max(maxLighted, currentLighted);
                }
            }
        }

        System.out.println(maxLighted);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03014_2P.java" startline="1" endline="58" pcid="67271">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int H = sc.nextInt();
        int W = sc.nextInt();
        char[][] S = new char[H][W];
        for (int i = 0; i < H; i++) {
            S[i] = sc.next().toCharArray();
        }

        int[][] left = new int[H][W];
        int[][] right = new int[H][W];
        int[][] up = new int[H][W];
        int[][] down = new int[H][W];

        for (int i = 0; i < H; i++) {
            for (int j = 0; j < W; j++) {
                if (S[i][j] == '.') {
                    left[i][j] = 1 + (j > 0 ? left[i][j - 1] : 0);
                }
            }
            for (int j = W - 1; j >= 0; j--) {
                if (S[i][j] == '.') {
                    right[i][j] = 1 + (j < W - 1 ? right[i][j + 1] : 0);
                }
            }
        }

        for (int j = 0; j < W; j++) {
            for (int i = 0; i < H; i++) {
                if (S[i][j] == '.') {
                    up[i][j] = 1 + (i > 0 ? up[i - 1][j] : 0);
                }
            }
            for (int i = H - 1; i >= 0; i--) {
                if (S[i][j] == '.') {
                    down[i][j] = 1 + (i < H - 1 ? down[i + 1][j] : 0);
                }
            }
        }

        int maxLighted = 0;
        for (int i = 0; i < H; i++) {
            for (int j = 0; j < W; j++) {
                if (S[i][j] == '.') {
                    int currentLighted = left[i][j] + right[i][j] + up[i][j] + down[i][j] - 3;
                    maxLighted = Math.max(maxLighted, currentLighted);
                }
            }
        }

        System.out.println(maxLighted);
        sc.close();
    }
}

</source>
</class>

<class classid="564" nclones="2" nlines="14" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p03036_0P.java" startline="1" endline="17" pcid="57547">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int r = sc.nextInt();
        int D = sc.nextInt();
        int x = sc.nextInt();

        for (int i = 0; i < 10; i++) {
            x = r * x - D;
            System.out.println(x);
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03036_2P.java" startline="1" endline="18" pcid="67283">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int r = sc.nextInt();
        int D = sc.nextInt();
        int x = sc.nextInt();

        for (int i = 0; i < 10; i++) {
            x = r * x - D;
            System.out.println(x);
        }

        sc.close();
    }
}

</source>
</class>

<class classid="565" nclones="4" nlines="27" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p03042_2P.java" startline="1" endline="30" pcid="57575">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        sc.close();

        int firstTwo = Integer.parseInt(s.substring(0, 2));
        int lastTwo = Integer.parseInt(s.substring(2, 4));

        boolean isYYMM = isValidMonth(lastTwo);
        boolean isMMYY = isValidMonth(firstTwo);

        if (isYYMM && isMMYY) {
            System.out.println("AMBIGUOUS");
        } else if (isYYMM) {
            System.out.println("YYMM");
        } else if (isMMYY) {
            System.out.println("MMYY");
        } else {
            System.out.println("NA");
        }
    }

    private static boolean isValidMonth(int month) {
        return month >= 1 && month <= 12;
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03042_3P.java" startline="1" endline="30" pcid="67286">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        sc.close();

        int firstTwo = Integer.parseInt(s.substring(0, 2));
        int lastTwo = Integer.parseInt(s.substring(2, 4));

        boolean isYYMM = isValidMonth(lastTwo);
        boolean isMMYY = isValidMonth(firstTwo);

        if (isYYMM && isMMYY) {
            System.out.println("AMBIGUOUS");
        } else if (isYYMM) {
            System.out.println("YYMM");
        } else if (isMMYY) {
            System.out.println("MMYY");
        } else {
            System.out.println("NA");
        }
    }

    private static boolean isValidMonth(int month) {
        return month >= 1 && month <= 12;
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03042_4P.java" startline="1" endline="30" pcid="57578">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        sc.close();

        int firstTwo = Integer.parseInt(s.substring(0, 2));
        int lastTwo = Integer.parseInt(s.substring(2, 4));

        boolean isYYMM = isValidMonth(lastTwo);
        boolean isMMYY = isValidMonth(firstTwo);

        if (isYYMM && isMMYY) {
            System.out.println("AMBIGUOUS");
        } else if (isYYMM) {
            System.out.println("YYMM");
        } else if (isMMYY) {
            System.out.println("MMYY");
        } else {
            System.out.println("NA");
        }
    }

    private static boolean isValidMonth(int month) {
        return month >= 1 && month <= 12;
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03042_1P.java" startline="1" endline="30" pcid="57577">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        sc.close();

        int firstTwo = Integer.parseInt(s.substring(0, 2));
        int lastTwo = Integer.parseInt(s.substring(2, 4));

        boolean isYYMM = isValidMonth(lastTwo);
        boolean isMMYY = isValidMonth(firstTwo);

        if (isYYMM && isMMYY) {
            System.out.println("AMBIGUOUS");
        } else if (isYYMM) {
            System.out.println("YYMM");
        } else if (isMMYY) {
            System.out.println("MMYY");
        } else {
            System.out.println("NA");
        }
    }

    private static boolean isValidMonth(int month) {
        return month >= 1 && month <= 12;
    }
}

</source>
</class>

<class classid="566" nclones="4" nlines="21" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p03048_3P.java" startline="1" endline="24" pcid="57605">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int R = sc.nextInt();
        int G = sc.nextInt();
        int B = sc.nextInt();
        int N = sc.nextInt();
        sc.close();

        long count = 0;
        for (int r = 0; r * R <= N; r++) {
            for (int g = 0; r * R + g * G <= N; g++) {
                int remaining = N - (r * R + g * G);
                if (remaining % B == 0) {
                    count++;
                }
            }
        }
        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03048_2P.java" startline="1" endline="25" pcid="67288">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int R = sc.nextInt();
        int G = sc.nextInt();
        int B = sc.nextInt();
        int N = sc.nextInt();
        sc.close();

        long count = 0;

        for (int r = 0; r * R <= N; r++) {
            for (int g = 0; r * R + g * G <= N; g++) {
                int remaining = N - (r * R + g * G);
                if (remaining % B == 0) {
                    count++;
                }
            }
        }
        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03048_1P.java" startline="1" endline="24" pcid="67287">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int R = sc.nextInt();
        int G = sc.nextInt();
        int B = sc.nextInt();
        int N = sc.nextInt();
        sc.close();

        long count = 0;
        for (int r = 0; r * R <= N; r++) {
            for (int g = 0; r * R + g * G <= N; g++) {
                int remaining = N - (r * R + g * G);
                if (remaining % B == 0) {
                    count++;
                }
            }
        }
        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03048_4P.java" startline="1" endline="25" pcid="57607">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int R = sc.nextInt();
        int G = sc.nextInt();
        int B = sc.nextInt();
        int N = sc.nextInt();
        sc.close();

        long count = 0;

        for (int r = 0; r * R <= N; r++) {
            for (int g = 0; r * R + g * G <= N; g++) {
                int remaining = N - (r * R + g * G);
                if (remaining % B == 0) {
                    count++;
                }
            }
        }
        System.out.println(count);
    }
}

</source>
</class>

<class classid="567" nclones="3" nlines="23" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p03060_1P.java" startline="1" endline="28" pcid="57632">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] V = new int[N];
        int[] C = new int[N];

        for (int i = 0; i < N; i++) {
            V[i] = sc.nextInt();
        }

        for (int i = 0; i < N; i++) {
            C[i] = sc.nextInt();
        }

        int maxProfit = 0;
        for (int i = 0; i < N; i++) {
            if (V[i] - C[i] > 0) {
                maxProfit += (V[i] - C[i]);
            }
        }
        System.out.println(maxProfit);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03060_0P.java" startline="1" endline="30" pcid="67293">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] V = new int[N];
        int[] C = new int[N];

        for (int i = 0; i < N; i++) {
            V[i] = sc.nextInt();
        }

        for (int i = 0; i < N; i++) {
            C[i] = sc.nextInt();
        }

        int maxProfit = 0;

        for (int i = 0; i < N; i++) {
            if (V[i] - C[i] > 0) {
                maxProfit += (V[i] - C[i]);
            }
        }

        System.out.println(maxProfit);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03060_3P.java" startline="1" endline="30" pcid="67294">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] V = new int[N];
        int[] C = new int[N];

        for (int i = 0; i < N; i++) {
            V[i] = sc.nextInt();
        }

        for (int i = 0; i < N; i++) {
            C[i] = sc.nextInt();
        }

        int maxProfit = 0;

        for (int i = 0; i < N; i++) {
            if (V[i] - C[i] > 0) {
                maxProfit += (V[i] - C[i]);
            }
        }

        System.out.println(maxProfit);
        sc.close();
    }
}

</source>
</class>

<class classid="568" nclones="3" nlines="13" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p03105_1P.java" startline="1" endline="19" pcid="57787">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();

        int timesFromMoney = B / A;

        int result = Math.min(timesFromMoney, C);

        System.out.println(result);

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03105_4P.java" startline="1" endline="19" pcid="67303">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();

        int timesFromMoney = B / A;

        int result = Math.min(timesFromMoney, C);

        System.out.println(result);

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03105_2P.java" startline="1" endline="19" pcid="57788">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();

        int timesFromMoney = B / A;

        int result = Math.min(timesFromMoney, C);

        System.out.println(result);

        sc.close();
    }
}

</source>
</class>

<class classid="569" nclones="2" nlines="19" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p03107_1P.java" startline="1" endline="23" pcid="57795">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        int redCount = 0;
        int blueCount = 0;

        for (char c : s.toCharArray()) {
            if (c == '0') {
                redCount++;
            } else {
                blueCount++;
            }
        }

        System.out.println(Math.min(redCount, blueCount) * 2);

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03107_2P.java" startline="1" endline="25" pcid="67304">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();

        int redCount = 0;
        int blueCount = 0;

        for (char c : s.toCharArray()) {
            if (c == '0') {
                redCount++;
            } else {
                blueCount++;
            }
        }

        System.out.println(Math.min(redCount, blueCount) * 2);

        sc.close();
    }
}

</source>
</class>

<class classid="570" nclones="3" nlines="24" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p03126_2P.java" startline="1" endline="29" pcid="57828">
import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int M = sc.nextInt();

        Set<Integer> commonLikedFoods = new HashSet<>();
        for (int i = 1; i <= M; i++) {
            commonLikedFoods.add(i);
        }

        for (int i = 0; i < N; i++) {
            int K = sc.nextInt();
            Set<Integer> currentPersonLikedFoods = new HashSet<>();
            for (int j = 0; j < K; j++) {
                currentPersonLikedFoods.add(sc.nextInt());
            }
            commonLikedFoods.retainAll(currentPersonLikedFoods);
        }

        System.out.println(commonLikedFoods.size());
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03126_1P.java" startline="1" endline="30" pcid="67307">
import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int M = sc.nextInt();

        Set<Integer> commonLikedFoods = new HashSet<>();
        for (int i = 1; i <= M; i++) {
            commonLikedFoods.add(i);
        }

        for (int i = 0; i < N; i++) {
            int K = sc.nextInt();
            Set<Integer> currentPersonLikedFoods = new HashSet<>();
            for (int j = 0; j < K; j++) {
                currentPersonLikedFoods.add(sc.nextInt());
            }
            commonLikedFoods.retainAll(currentPersonLikedFoods);
        }

        System.out.println(commonLikedFoods.size());

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03126_4P.java" startline="1" endline="30" pcid="57831">
import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int M = sc.nextInt();

        Set<Integer> commonLikedFoods = new HashSet<>();
        for (int i = 1; i <= M; i++) {
            commonLikedFoods.add(i);
        }

        for (int i = 0; i < N; i++) {
            int K = sc.nextInt();
            Set<Integer> currentPersonLikedFoods = new HashSet<>();
            for (int j = 0; j < K; j++) {
                currentPersonLikedFoods.add(sc.nextInt());
            }
            commonLikedFoods.retainAll(currentPersonLikedFoods);
        }

        System.out.println(commonLikedFoods.size());

        sc.close();
    }
}

</source>
</class>

<class classid="571" nclones="2" nlines="13" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p03139_1P.java" startline="1" endline="19" pcid="57880">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int A = sc.nextInt();
        int B = sc.nextInt();

        int maxBoth = Math.min(A, B);

        int minBoth = Math.max(0, A + B - N);

        System.out.println(maxBoth + " " + minBoth);

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03139_4P.java" startline="1" endline="19" pcid="67313">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int A = sc.nextInt();
        int B = sc.nextInt();

        int maxBoth = Math.min(A, B);

        int minBoth = Math.max(0, A + B - N);

        System.out.println(maxBoth + " " + minBoth);

        sc.close();
    }
}

</source>
</class>

<class classid="572" nclones="3" nlines="14" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p03155_1P.java" startline="1" endline="20" pcid="57939">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int H = sc.nextInt();
        int W = sc.nextInt();
        sc.close();

        int possibleRows = N - H + 1;

        int possibleCols = N - W + 1;

        long totalWays = (long) possibleRows * possibleCols;

        System.out.println(totalWays);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03155_4P.java" startline="1" endline="20" pcid="67316">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int H = sc.nextInt();
        int W = sc.nextInt();
        sc.close();

        int possibleRows = N - H + 1;

        int possibleCols = N - W + 1;

        long totalWays = (long) possibleRows * possibleCols;

        System.out.println(totalWays);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03155_0P.java" startline="1" endline="20" pcid="57940">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int H = sc.nextInt();
        int W = sc.nextInt();
        sc.close();

        int possibleRows = N - H + 1;

        int possibleCols = N - W + 1;

        long totalWays = (long) possibleRows * possibleCols;

        System.out.println(totalWays);
    }
}

</source>
</class>

<class classid="573" nclones="2" nlines="11" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p03280_0P.java" startline="1" endline="14" pcid="58378">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        sc.close();

        long area = (long) (A - 1) * (B - 1);
        System.out.println(area);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03280_2P.java" startline="1" endline="14" pcid="67369">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        sc.close();

        long area = (long) (A - 1) * (B - 1);
        System.out.println(area);
    }
}

</source>
</class>

<class classid="574" nclones="4" nlines="20" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p03296_1P.java" startline="1" endline="23" pcid="58451">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] a = new int[N];
        for (int i = 0; i < N; i++) {
            a[i] = sc.nextInt();
        }
        sc.close();

        int spells = 0;
        for (int i = 0; i < N - 1; i++) {
            if (a[i] == a[i + 1]) {
                spells++;
                i++;
            }
        }
        System.out.println(spells);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03296_0P.java" startline="1" endline="23" pcid="67377">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] a = new int[N];
        for (int i = 0; i < N; i++) {
            a[i] = sc.nextInt();
        }
        sc.close();

        int spells = 0;
        for (int i = 0; i < N - 1; i++) {
            if (a[i] == a[i + 1]) {
                spells++;
                i++;
            }
        }
        System.out.println(spells);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03296_3P.java" startline="1" endline="23" pcid="58455">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] a = new int[N];
        for (int i = 0; i < N; i++) {
            a[i] = sc.nextInt();
        }
        sc.close();

        int spells = 0;
        for (int i = 0; i < N - 1; i++) {
            if (a[i] == a[i + 1]) {
                spells++;
                i++;
            }
        }
        System.out.println(spells);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03296_4P.java" startline="1" endline="23" pcid="58454">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] a = new int[N];
        for (int i = 0; i < N; i++) {
            a[i] = sc.nextInt();
        }
        sc.close();

        int spells = 0;
        for (int i = 0; i < N - 1; i++) {
            if (a[i] == a[i + 1]) {
                spells++;
                i++;
            }
        }
        System.out.println(spells);
    }
}

</source>
</class>

<class classid="575" nclones="3" nlines="27" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p03309_2P.java" startline="1" endline="32" pcid="58491">
import java.util.Arrays;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        long[] B = new long[N];
        for (int i = 0; i < N; i++) {
            long A_i = sc.nextLong();
            B[i] = A_i - (i + 1);
        }

        Arrays.sort(B);

        long median;
        if (N % 2 == 1) {
            median = B[N / 2];
        } else {
            median = B[N / 2 - 1];
        }

        long sadness = 0;
        for (int i = 0; i < N; i++) {
            sadness += Math.abs(B[i] - median);
        }

        System.out.println(sadness);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03311_0P.java" startline="1" endline="33" pcid="67388">
import java.util.Arrays;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        long[] B = new long[N];
        for (int i = 0; i < N; i++) {
            long A_i = sc.nextLong();
            B[i] = A_i - (i + 1);
        }

        Arrays.sort(B);

        long median;
        if (N % 2 == 1) {
            median = B[N / 2];
        } else {
            median = B[N / 2 - 1];
        }

        long sadness = 0;
        for (int i = 0; i < N; i++) {
            sadness += Math.abs(B[i] - median);
        }

        System.out.println(sadness);

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03309_3P.java" startline="1" endline="32" pcid="58492">
import java.util.Arrays;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        long[] B = new long[N];
        for (int i = 0; i < N; i++) {
            long A_i = sc.nextLong();
            B[i] = A_i - (i + 1);
        }

        Arrays.sort(B);

        long median;
        if (N % 2 == 1) {
            median = B[N / 2];
        } else {
            median = B[N / 2 - 1];
        }

        long sadness = 0;
        for (int i = 0; i < N; i++) {
            sadness += Math.abs(B[i] - median);
        }

        System.out.println(sadness);
        sc.close();
    }
}

</source>
</class>

<class classid="576" nclones="2" nlines="25" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p03331_4P.java" startline="1" endline="31" pcid="58573">
import java.util.Scanner;

public class Main {
    public static int sumDigits(int n) {
        int sum = 0;
        String s = String.valueOf(n);
        for (char c : s.toCharArray()) {
            sum += Character.getNumericValue(c);
        }
        return sum;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        sc.close();

        int minSumOfDigits = Integer.MAX_VALUE;

        for (int A = 1; A < N; A++) {
            int B = N - A;
            int currentSum = sumDigits(A) + sumDigits(B);
            if (currentSum < minSumOfDigits) {
                minSumOfDigits = currentSum;
            }
        }

        System.out.println(minSumOfDigits);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03331_2P.java" startline="1" endline="32" pcid="67396">
import java.util.Scanner;

public class Main {

    public static int sumDigits(int n) {
        int sum = 0;
        String s = String.valueOf(n);
        for (char c : s.toCharArray()) {
            sum += Character.getNumericValue(c);
        }
        return sum;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        sc.close();

        int minSumOfDigits = Integer.MAX_VALUE;

        for (int A = 1; A < N; A++) {
            int B = N - A;
            int currentSum = sumDigits(A) + sumDigits(B);
            if (currentSum < minSumOfDigits) {
                minSumOfDigits = currentSum;
            }
        }

        System.out.println(minSumOfDigits);
    }
}

</source>
</class>

<class classid="577" nclones="2" nlines="14" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p03337_1P.java" startline="1" endline="18" pcid="58587">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        sc.close();

        int sum = A + B;
        int difference = A - B;
        int product = A * B;

        int maxVal = Math.max(sum, Math.max(difference, product));
        System.out.println(maxVal);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03337_4P.java" startline="1" endline="18" pcid="67397">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        sc.close();

        int sum = A + B;
        int difference = A - B;
        int product = A * B;

        int maxVal = Math.max(sum, Math.max(difference, product));
        System.out.println(maxVal);
    }
}

</source>
</class>

<class classid="578" nclones="2" nlines="19" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p03351_3P.java" startline="1" endline="23" pcid="58635">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int c = sc.nextInt();
        int d = sc.nextInt();

        boolean directAC = Math.abs(a - c) <= d;
        boolean indirectABC = Math.abs(a - b) <= d && Math.abs(b - c) <= d;

        if (directAC || indirectABC) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03351_0P.java" startline="1" endline="25" pcid="67403">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int a = sc.nextInt();
        int b = sc.nextInt();
        int c = sc.nextInt();
        int d = sc.nextInt();

        boolean directAC = Math.abs(a - c) <= d;

        boolean indirectABC = Math.abs(a - b) <= d && Math.abs(b - c) <= d;

        if (directAC || indirectABC) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }

        sc.close();
    }
}

</source>
</class>

<class classid="579" nclones="2" nlines="24" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p03359_1P.java" startline="1" endline="27" pcid="58665">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        sc.close();

        int count = 0;
        int[] daysInMonth = {0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};

        for (int month = 1; month <= a; month++) {
            if (month <= daysInMonth[month]) {
                if (month < a) {
                    count++;
                } else if (month == a) {
                    if (month <= b) {
                        count++;
                    }
                }
            }
        }
        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03359_4P.java" startline="1" endline="27" pcid="67405">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        sc.close();

        int count = 0;
        int[] daysInMonth = {0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};

        for (int month = 1; month <= a; month++) {
            if (month <= daysInMonth[month]) {
                if (month < a) {
                    count++;
                } else if (month == a) {
                    if (month <= b) {
                        count++;
                    }
                }
            }
        }
        System.out.println(count);
    }
}

</source>
</class>

<class classid="580" nclones="2" nlines="16" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p03377_0P.java" startline="1" endline="19" pcid="58716">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int X = sc.nextInt();

        if (X >= A && X <= A + B) {
            System.out.println("YES");
        } else {
            System.out.println("NO");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/claude_p03377_3P.java" startline="1" endline="19" pcid="65708">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int X = sc.nextInt();

        if (X >= A && X <= A + B) {
            System.out.println("YES");
        } else {
            System.out.println("NO");
        }

        sc.close();
    }
}

</source>
</class>

<class classid="581" nclones="2" nlines="26" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p03379_2P.java" startline="1" endline="32" pcid="58727">
import java.util.Arrays;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] X = new int[N];
        int[] sortedX = new int[N];

        for (int i = 0; i < N; i++) {
            X[i] = sc.nextInt();
            sortedX[i] = X[i];
        }

        Arrays.sort(sortedX);

        int median1 = sortedX[N / 2 - 1];
        int median2 = sortedX[N / 2];

        for (int i = 0; i < N; i++) {
            if (X[i] <= median1) {
                System.out.println(median2);
            } else {
                System.out.println(median1);
            }
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03379_4P.java" startline="1" endline="33" pcid="67417">
import java.util.Arrays;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] X = new int[N];
        int[] sortedX = new int[N];

        for (int i = 0; i < N; i++) {
            X[i] = sc.nextInt();
            sortedX[i] = X[i];
        }

        Arrays.sort(sortedX);

        int median1 = sortedX[N / 2 - 1];
        int median2 = sortedX[N / 2];

        for (int i = 0; i < N; i++) {
            if (X[i] <= median1) {
                System.out.println(median2);
            } else {
                System.out.println(median1);
            }
        }

        sc.close();
    }
}

</source>
</class>

<class classid="582" nclones="4" nlines="15" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p03399_2P.java" startline="1" endline="23" pcid="58788">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();
        int D = sc.nextInt();

        int minTrainFare = Math.min(A, B);

        int minBusFare = Math.min(C, D);

        int totalMinFare = minTrainFare + minBusFare;

        System.out.println(totalMinFare);

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03399_0P.java" startline="1" endline="22" pcid="67422">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();
        int D = sc.nextInt();

        int minTrainFare = Math.min(A, B);
        int minBusFare = Math.min(C, D);

        int totalMinFare = minTrainFare + minBusFare;

        System.out.println(totalMinFare);

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03399_3P.java" startline="1" endline="22" pcid="58790">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();
        int D = sc.nextInt();

        int minTrainFare = Math.min(A, B);
        int minBusFare = Math.min(C, D);

        int totalMinFare = minTrainFare + minBusFare;

        System.out.println(totalMinFare);

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03399_4P.java" startline="1" endline="24" pcid="58789">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();
        int D = sc.nextInt();

        int minTrainFare = Math.min(A, B);

        int minBusFare = Math.min(C, D);

        int totalMinFare = minTrainFare + minBusFare;

        System.out.println(totalMinFare);

        sc.close();
    }
}

</source>
</class>

<class classid="583" nclones="3" nlines="26" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p03434_3P.java" startline="1" endline="32" pcid="58909">
import java.util.Arrays;
import java.util.Collections;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        Integer[] a = new Integer[N];
        for (int i = 0; i < N; i++) {
            a[i] = sc.nextInt();
        }

        Arrays.sort(a, Collections.reverseOrder());

        int aliceScore = 0;
        int bobScore = 0;

        for (int i = 0; i < N; i++) {
            if (i % 2 == 0) {
                aliceScore += a[i];
            } else {
                bobScore += a[i];
            }
        }

        System.out.println(aliceScore - bobScore);

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03434_2P.java" startline="1" endline="32" pcid="67429">
import java.util.Arrays;
import java.util.Collections;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        Integer[] a = new Integer[N];
        for (int i = 0; i < N; i++) {
            a[i] = sc.nextInt();
        }

        Arrays.sort(a, Collections.reverseOrder());

        int aliceScore = 0;
        int bobScore = 0;

        for (int i = 0; i < N; i++) {
            if (i % 2 == 0) {
                aliceScore += a[i];
            } else {
                bobScore += a[i];
            }
        }

        System.out.println(aliceScore - bobScore);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03434_4P.java" startline="1" endline="32" pcid="58912">
import java.util.Arrays;
import java.util.Collections;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        Integer[] a = new Integer[N];
        for (int i = 0; i < N; i++) {
            a[i] = sc.nextInt();
        }

        Arrays.sort(a, Collections.reverseOrder());

        int aliceScore = 0;
        int bobScore = 0;

        for (int i = 0; i < N; i++) {
            if (i % 2 == 0) {
                aliceScore += a[i];
            } else {
                bobScore += a[i];
            }
        }

        System.out.println(aliceScore - bobScore);

        sc.close();
    }
}

</source>
</class>

<class classid="584" nclones="2" nlines="15" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p03455_0P.java" startline="1" endline="19" pcid="58977">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();

        if ((a % 2 != 0) && (b % 2 != 0)) {
            System.out.println("Odd");
        } else {
            System.out.println("Even");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03455_3P.java" startline="1" endline="17" pcid="67432">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();

        if ((a % 2 != 0) && (b % 2 != 0)) {
            System.out.println("Odd");
        } else {
            System.out.println("Even");
        }
        sc.close();
    }
}

</source>
</class>

<class classid="585" nclones="2" nlines="19" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p03481_0P.java" startline="1" endline="22" pcid="59072">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long x = sc.nextLong();
        long y = sc.nextLong();
        sc.close();

        int count = 0;
        long current = x;
        while (current <= y) {
            count++;
            if (y / 2 < current) {
                break;
            }
            current *= 2;
        }
        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03479_2P.java" startline="1" endline="23" pcid="67439">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long x = sc.nextLong();
        long y = sc.nextLong();
        sc.close();

        int count = 0;
        long current = x;
        while (current <= y) {
            count++;
            if (y / 2 < current) {
                break;
            }
            current *= 2;
        }

        System.out.println(count);
    }
}

</source>
</class>

<class classid="586" nclones="7" nlines="17" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p03523_3P.java" startline="1" endline="21" pcid="59157">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        String target = "AKIHABARA";

        String sWithoutA = s.replace("A", "");

        String targetWithoutA = target.replace("A", "");

        if (sWithoutA.equals(targetWithoutA)) {
            System.out.println("YES");
        } else {
            System.out.println("NO");
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03523_4P.java" startline="1" endline="21" pcid="67449">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        String target = "AKIHABARA";

        String sWithoutA = s.replace("A", "");
        String targetWithoutA = target.replace("A", "");

        if (sWithoutA.equals(targetWithoutA)) {
            System.out.println("YES");
        } else {
            System.out.println("NO");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03533_3P.java" startline="1" endline="22" pcid="59169">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        String target = "AKIHABARA";

        String sWithoutA = s.replace("A", "");

        String targetWithoutA = target.replace("A", "");

        if (sWithoutA.equals(targetWithoutA)) {
            System.out.println("YES");
        } else {
            System.out.println("NO");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03533_4P.java" startline="1" endline="22" pcid="59167">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        String target = "AKIHABARA";

        String sWithoutA = s.replace("A", "");

        String targetWithoutA = target.replace("A", "");

        if (sWithoutA.equals(targetWithoutA)) {
            System.out.println("YES");
        } else {
            System.out.println("NO");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03523_2P.java" startline="1" endline="22" pcid="59159">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        String target = "AKIHABARA";

        String sWithoutA = s.replace("A", "");

        String targetWithoutA = target.replace("A", "");

        if (sWithoutA.equals(targetWithoutA)) {
            System.out.println("YES");
        } else {
            System.out.println("NO");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03533_1P.java" startline="1" endline="23" pcid="59166">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        String target = "AKIHABARA";

        String sWithoutA = s.replace("A", "");

        String targetWithoutA = target.replace("A", "");

        if (sWithoutA.equals(targetWithoutA)) {
            System.out.println("YES");
        } else {
            System.out.println("NO");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03533_2P.java" startline="1" endline="21" pcid="59171">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        String target = "AKIHABARA";

        String sWithoutA = s.replace("A", "");
        String targetWithoutA = target.replace("A", "");

        if (sWithoutA.equals(targetWithoutA)) {
            System.out.println("YES");
        } else {
            System.out.println("NO");
        }
        sc.close();
    }
}

</source>
</class>

<class classid="587" nclones="2" nlines="13" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p03610_4P.java" startline="1" endline="18" pcid="59412">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        StringBuilder sb = new StringBuilder();

        for (int i = 0; i < s.length(); i += 2) {
            sb.append(s.charAt(i));
        }

        System.out.println(sb.toString());
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03610_3P.java" startline="1" endline="19" pcid="67473">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        StringBuilder sb = new StringBuilder();

        for (int i = 0; i < s.length(); i += 2) {
            sb.append(s.charAt(i));
        }

        System.out.println(sb.toString());

        sc.close();
    }
}

</source>
</class>

<class classid="588" nclones="6" nlines="22" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p03612_1P.java" startline="1" endline="25" pcid="59419">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] p = new int[N];
        for (int i = 0; i < N; i++) {
            p[i] = sc.nextInt();
        }
        sc.close();

        int operations = 0;
        for (int i = 0; i < N; i++) {
            if (p[i] == i + 1) {
                operations++;
                if (i + 1 < N) {
                    i++;
                }
            }
        }
        System.out.println(operations);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03614_1P.java" startline="1" endline="25" pcid="67477">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] p = new int[N];
        for (int i = 0; i < N; i++) {
            p[i] = sc.nextInt();
        }
        sc.close();

        int operations = 0;
        for (int i = 0; i < N; i++) {
            if (p[i] == i + 1) {
                operations++;
                if (i + 1 < N) {
                    i++;
                }
            }
        }
        System.out.println(operations);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03612_3P.java" startline="1" endline="25" pcid="67474">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] p = new int[N];
        for (int i = 0; i < N; i++) {
            p[i] = sc.nextInt();
        }
        sc.close();

        int operations = 0;
        for (int i = 0; i < N; i++) {
            if (p[i] == i + 1) {
                operations++;
                if (i + 1 < N) {
                    i++;
                }
            }
        }
        System.out.println(operations);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03614_3P.java" startline="1" endline="25" pcid="67478">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] p = new int[N];
        for (int i = 0; i < N; i++) {
            p[i] = sc.nextInt();
        }
        sc.close();

        int operations = 0;
        for (int i = 0; i < N; i++) {
            if (p[i] == i + 1) {
                operations++;
                if (i + 1 < N) {
                    i++;
                }
            }
        }
        System.out.println(operations);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03614_4P.java" startline="1" endline="26" pcid="59425">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] p = new int[N];
        for (int i = 0; i < N; i++) {
            p[i] = sc.nextInt();
        }
        sc.close();

        int operations = 0;
        for (int i = 0; i < N; i++) {
            if (p[i] == i + 1) {
                operations++;
                if (i + 1 < N) {
                    i++;
                }
            }
        }

        System.out.println(operations);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03614_0P.java" startline="1" endline="25" pcid="59423">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] p = new int[N];
        for (int i = 0; i < N; i++) {
            p[i] = sc.nextInt();
        }
        sc.close();

        int operations = 0;
        for (int i = 0; i < N; i++) {
            if (p[i] == i + 1) {
                operations++;
                if (i + 1 < N) {
                    i++;
                }
            }
        }
        System.out.println(operations);
    }
}

</source>
</class>

<class classid="589" nclones="4" nlines="18" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p03623_1P.java" startline="1" endline="22" pcid="59453">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int x = sc.nextInt();
        int a = sc.nextInt();
        int b = sc.nextInt();

        int distA = Math.abs(x - a);
        int distB = Math.abs(x - b);

        if (distA < distB) {
            System.out.println("A");
        } else {
            System.out.println("B");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03623_0P.java" startline="1" endline="22" pcid="67480">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int x = sc.nextInt();
        int a = sc.nextInt();
        int b = sc.nextInt();

        int distA = Math.abs(x - a);
        int distB = Math.abs(x - b);

        if (distA < distB) {
            System.out.println("A");
        } else {
            System.out.println("B");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03623_3P.java" startline="1" endline="24" pcid="59454">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int x = sc.nextInt();
        int a = sc.nextInt();
        int b = sc.nextInt();

        int distA = Math.abs(x - a);

        int distB = Math.abs(x - b);

        if (distA < distB) {
            System.out.println("A");
        } else {
            System.out.println("B");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03623_4P.java" startline="1" endline="21" pcid="59455">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int x = sc.nextInt();
        int a = sc.nextInt();
        int b = sc.nextInt();

        int distA = Math.abs(x - a);
        int distB = Math.abs(x - b);

        if (distA < distB) {
            System.out.println("A");
        } else {
            System.out.println("B");
        }
        sc.close();
    }
}

</source>
</class>

<class classid="590" nclones="3" nlines="26" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p03633_2P.java" startline="1" endline="35" pcid="59493">
import java.util.Scanner;

public class Main {

    private static long gcd(long a, long b) {
        while (b != 0) {
            long temp = b;
            b = a % b;
            a = temp;
        }
        return a;
    }

    private static long lcm(long a, long b) {
        if (a == 0 || b == 0) return 0;
        return (a / gcd(a, b)) * b;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();

        long resultLcm = 1;

        for (int i = 0; i < N; i++) {
            long Ti = sc.nextLong();
            resultLcm = lcm(resultLcm, Ti);
        }

        System.out.println(resultLcm);

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03633_0P.java" startline="1" endline="36" pcid="67485">
import java.util.Scanner;

public class Main {

    private static long gcd(long a, long b) {
        while (b != 0) {
            long temp = b;
            b = a % b;
            a = temp;
        }
        return a;
    }

    private static long lcm(long a, long b) {
        if (a == 0 || b == 0) return 0;
        return (a / gcd(a, b)) * b;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();

        long resultLcm = 1;

        for (int i = 0; i < N; i++) {
            long Ti = sc.nextLong();
            resultLcm = lcm(resultLcm, Ti);

        }

        System.out.println(resultLcm);

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03633_4P.java" startline="1" endline="34" pcid="59495">
import java.util.Scanner;

public class Main {

    private static long gcd(long a, long b) {
        while (b != 0) {
            long temp = b;
            b = a % b;
            a = temp;
        }
        return a;
    }

    private static long lcm(long a, long b) {
        if (a == 0 || b == 0) return 0;
        return (a / gcd(a, b)) * b;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();

        long resultLcm = 1;

        for (int i = 0; i < N; i++) {
            long Ti = sc.nextLong();
            resultLcm = lcm(resultLcm, Ti);
        }

        System.out.println(resultLcm);
        sc.close();
    }
}

</source>
</class>

<class classid="591" nclones="2" nlines="45" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p03640_4P.java" startline="1" endline="49" pcid="59525">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int H = sc.nextInt();
        int W = sc.nextInt();
        int N = sc.nextInt();
        int[] a = new int[N];
        for (int i = 0; i < N; i++) {
            a[i] = sc.nextInt();
        }
        sc.close();

        int[][] grid = new int[H][W];
        int colorIndex = 0;
        int count = 0;

        for (int i = 0; i < H; i++) {
            if (i % 2 == 0) {
                for (int j = 0; j < W; j++) {
                    grid[i][j] = colorIndex + 1;
                    count++;
                    if (count == a[colorIndex]) {
                        colorIndex++;
                        count = 0;
                    }
                }
            } else {
                for (int j = W - 1; j >= 0; j--) {
                    grid[i][j] = colorIndex + 1;
                    count++;
                    if (count == a[colorIndex]) {
                        colorIndex++;
                        count = 0;
                    }
                }
            }
        }

        for (int i = 0; i < H; i++) {
            for (int j = 0; j < W; j++) {
                System.out.print(grid[i][j] + (j == W - 1 ? "" : " "));
            }
            System.out.println();
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03638_0P.java" startline="1" endline="49" pcid="67488">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int H = sc.nextInt();
        int W = sc.nextInt();
        int N = sc.nextInt();
        int[] a = new int[N];
        for (int i = 0; i < N; i++) {
            a[i] = sc.nextInt();
        }
        sc.close();

        int[][] grid = new int[H][W];
        int colorIndex = 0;
        int count = 0;

        for (int i = 0; i < H; i++) {
            if (i % 2 == 0) {
                for (int j = 0; j < W; j++) {
                    grid[i][j] = colorIndex + 1;
                    count++;
                    if (count == a[colorIndex]) {
                        colorIndex++;
                        count = 0;
                    }
                }
            } else {
                for (int j = W - 1; j >= 0; j--) {
                    grid[i][j] = colorIndex + 1;
                    count++;
                    if (count == a[colorIndex]) {
                        colorIndex++;
                        count = 0;
                    }
                }
            }
        }

        for (int i = 0; i < H; i++) {
            for (int j = 0; j < W; j++) {
                System.out.print(grid[i][j] + (j == W - 1 ? "" : " "));
            }
            System.out.println();
        }
    }
}

</source>
</class>

<class classid="592" nclones="4" nlines="21" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p03657_0P.java" startline="1" endline="25" pcid="59573">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();

        if (A % 3 == 0) {
            System.out.println("Possible");
        }
        else if (B % 3 == 0) {
            System.out.println("Possible");
        }
        else if ((A + B) % 3 == 0) {
            System.out.println("Possible");
        }
        else {
            System.out.println("Impossible");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03657_3P.java" startline="1" endline="25" pcid="67491">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();

        if (A % 3 == 0) {
            System.out.println("Possible");
        }
        else if (B % 3 == 0) {
            System.out.println("Possible");
        }
        else if ((A + B) % 3 == 0) {
            System.out.println("Possible");
        }
        else {
            System.out.println("Impossible");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03657_2P.java" startline="1" endline="25" pcid="59576">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();

        if (A % 3 == 0) {
            System.out.println("Possible");
        }
        else if (B % 3 == 0) {
            System.out.println("Possible");
        }
        else if ((A + B) % 3 == 0) {
            System.out.println("Possible");
        }
        else {
            System.out.println("Impossible");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03657_1P.java" startline="1" endline="26" pcid="59575">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();

        if (A % 3 == 0) {
            System.out.println("Possible");
        }
        else if (B % 3 == 0) {
            System.out.println("Possible");
        }
        else if ((A + B) % 3 == 0) {
            System.out.println("Possible");
        }
        else {
            System.out.println("Impossible");
        }

        sc.close();
    }
}

</source>
</class>

<class classid="593" nclones="2" nlines="36" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p03699_0P.java" startline="1" endline="38" pcid="59721">
import java.util.Scanner;
import java.util.Arrays;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] s = new int[N];
        int totalSum = 0;
        for (int i = 0; i < N; i++) {
            s[i] = sc.nextInt();
            totalSum += s[i];
        }

        if (totalSum % 10 != 0) {
            System.out.println(totalSum);
        } else {
            Arrays.sort(s);
            int maxDisplayedScore = 0;
            boolean foundNonMultipleOf10 = false;
            for (int i = 0; i < N; i++) {
                if (s[i] % 10 != 0) {
                    maxDisplayedScore = totalSum - s[i];
                    foundNonMultipleOf10 = true;
                    break;
                }
            }

            if (foundNonMultipleOf10) {
                System.out.println(maxDisplayedScore);
            } else {
                System.out.println(0);
            }
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03701_2P.java" startline="1" endline="39" pcid="67504">
import java.util.Scanner;
import java.util.Arrays;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] s = new int[N];
        int totalSum = 0;
        for (int i = 0; i < N; i++) {
            s[i] = sc.nextInt();
            totalSum += s[i];
        }

        if (totalSum % 10 != 0) {
            System.out.println(totalSum);
        } else {
            Arrays.sort(s);
            int maxDisplayedScore = 0;
            boolean foundNonMultipleOf10 = false;
            for (int i = 0; i < N; i++) {
                if (s[i] % 10 != 0) {
                    maxDisplayedScore = totalSum - s[i];
                    foundNonMultipleOf10 = true;
                    break;
                }
            }

            if (foundNonMultipleOf10) {
                System.out.println(maxDisplayedScore);
            } else {
                System.out.println(0);
            }
        }

        sc.close();
    }
}

</source>
</class>

<class classid="594" nclones="2" nlines="18" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p03729_4P.java" startline="1" endline="23" pcid="59819">
import java.util.Scanner;

public class WordChain {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String A = sc.next();
        String B = sc.next();
        String C = sc.next();
        sc.close();

        boolean condition1 = A.charAt(A.length() - 1) == B.charAt(0);

        boolean condition2 = B.charAt(B.length() - 1) == C.charAt(0);

        if (condition1 && condition2) {
            System.out.println("YES");
        } else {
            System.out.println("NO");
        }
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03729_1P.java" startline="1" endline="23" pcid="67515">
import java.util.Scanner;

public class WordChain {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String A = sc.next();
        String B = sc.next();
        String C = sc.next();
        sc.close();

        boolean condition1 = A.charAt(A.length() - 1) == B.charAt(0);

        boolean condition2 = B.charAt(B.length() - 1) == C.charAt(0);

        if (condition1 && condition2) {
            System.out.println("YES");
        } else {
            System.out.println("NO");
        }
    }
}

</source>
</class>

<class classid="595" nclones="2" nlines="18" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p03729_3P.java" startline="1" endline="22" pcid="59820">
import java.util.Scanner;

public class WordChain {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String A = sc.next();
        String B = sc.next();
        String C = sc.next();

        boolean condition1 = A.charAt(A.length() - 1) == B.charAt(0);
        boolean condition2 = B.charAt(B.length() - 1) == C.charAt(0);

        if (condition1 && condition2) {
            System.out.println("YES");
        } else {
            System.out.println("NO");
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03729_2P.java" startline="1" endline="24" pcid="67516">
import java.util.Scanner;

public class WordChain {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String A = sc.next();
        String B = sc.next();
        String C = sc.next();

        boolean condition1 = A.charAt(A.length() - 1) == B.charAt(0);

        boolean condition2 = B.charAt(B.length() - 1) == C.charAt(0);

        if (condition1 && condition2) {
            System.out.println("YES");
        } else {
            System.out.println("NO");
        }

        sc.close();
    }
}

</source>
</class>

<class classid="596" nclones="2" nlines="19" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p03767_4P.java" startline="1" endline="25" pcid="59923">
import java.util.Arrays;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] a = new int[3 * N];
        for (int i = 0; i < 3 * N; i++) {
            a[i] = sc.nextInt();
        }
        sc.close();

        Arrays.sort(a);

        long totalStrength = 0;

        for (int i = 3 * N - 2; i >= N; i -= 2) {
            totalStrength += a[i];
        }

        System.out.println(totalStrength);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03767_2P.java" startline="1" endline="24" pcid="67531">
import java.util.Arrays;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] a = new int[3 * N];
        for (int i = 0; i < 3 * N; i++) {
            a[i] = sc.nextInt();
        }
        sc.close();

        Arrays.sort(a);

        long totalStrength = 0;
        for (int i = 3 * N - 2; i >= N; i -= 2) {
            totalStrength += a[i];
        }

        System.out.println(totalStrength);
    }
}

</source>
</class>

<class classid="597" nclones="2" nlines="23" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p03814_2P.java" startline="1" endline="29" pcid="60067">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        sc.close();

        int firstA = -1;
        int lastZ = -1;

        for (int i = 0; i < s.length(); i++) {
            if (s.charAt(i) == 'A') {
                firstA = i;
                break;
            }
        }

        for (int i = s.length() - 1; i >= 0; i--) {
            if (s.charAt(i) == 'Z') {
                lastZ = i;
                break;
            }
        }

        System.out.println(lastZ - firstA + 1);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03814_1P.java" startline="1" endline="29" pcid="67545">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        sc.close();

        int firstA = -1;
        int lastZ = -1;

        for (int i = 0; i < s.length(); i++) {
            if (s.charAt(i) == 'A') {
                firstA = i;
                break;
            }
        }

        for (int i = s.length() - 1; i >= 0; i--) {
            if (s.charAt(i) == 'Z') {
                lastZ = i;
                break;
            }
        }

        System.out.println(lastZ - firstA + 1);
    }
}

</source>
</class>

<class classid="598" nclones="5" nlines="22" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p03829_1P.java" startline="1" endline="31" pcid="60122">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        long A = sc.nextLong();
        long B = sc.nextLong();

        long[] X = new long[N];
        for (int i = 0; i < N; i++) {
            X[i] = sc.nextLong();
        }

        long totalFatigue = 0;
        for (int i = 0; i < N - 1; i++) {
            long distance = X[i + 1] - X[i];
            long walkCost = distance * A;
            long teleportCost = B;

            totalFatigue += Math.min(walkCost, teleportCost);
        }

        System.out.println(totalFatigue);

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03829_2P.java" startline="1" endline="26" pcid="67551">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        long A = sc.nextLong();
        long B = sc.nextLong();
        long[] X = new long[N];
        for (int i = 0; i < N; i++) {
            X[i] = sc.nextLong();
        }

        long totalFatigue = 0;
        for (int i = 0; i < N - 1; i++) {
            long distance = X[i + 1] - X[i];
            long walkCost = distance * A;
            long teleportCost = B;
            totalFatigue += Math.min(walkCost, teleportCost);
        }

        System.out.println(totalFatigue);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03831_4P.java" startline="1" endline="26" pcid="60132">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        long A = sc.nextLong();
        long B = sc.nextLong();
        long[] X = new long[N];
        for (int i = 0; i < N; i++) {
            X[i] = sc.nextLong();
        }

        long totalFatigue = 0;
        for (int i = 0; i < N - 1; i++) {
            long distance = X[i + 1] - X[i];
            long walkCost = distance * A;
            long teleportCost = B;
            totalFatigue += Math.min(walkCost, teleportCost);
        }

        System.out.println(totalFatigue);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03831_1P.java" startline="1" endline="27" pcid="60130">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        long A = sc.nextLong();
        long B = sc.nextLong();
        long[] X = new long[N];
        for (int i = 0; i < N; i++) {
            X[i] = sc.nextLong();
        }

        long totalFatigue = 0;
        for (int i = 0; i < N - 1; i++) {
            long distance = X[i + 1] - X[i];
            long walkCost = distance * A;
            long teleportCost = B;

            totalFatigue += Math.min(walkCost, teleportCost);
        }

        System.out.println(totalFatigue);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03831_0P.java" startline="1" endline="28" pcid="60129">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        long A = sc.nextLong();
        long B = sc.nextLong();

        long[] X = new long[N];
        for (int i = 0; i < N; i++) {
            X[i] = sc.nextLong();
        }

        long totalFatigue = 0;
        for (int i = 0; i < N - 1; i++) {
            long distance = X[i + 1] - X[i];
            long walkCost = distance * A;
            long teleportCost = B;
            totalFatigue += Math.min(walkCost, teleportCost);
        }

        System.out.println(totalFatigue);

        sc.close();
    }
}

</source>
</class>

<class classid="599" nclones="5" nlines="10" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p03834_0P.java" startline="1" endline="12" pcid="60137">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        String result = s.replace(',', ' ');
        System.out.println(result);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03834_3P.java" startline="1" endline="13" pcid="67553">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        String result = s.replace(',', ' ');
        System.out.println(result);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03834_2P.java" startline="1" endline="13" pcid="60139">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        String result = s.replace(',', ' ');
        System.out.println(result);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03834_1P.java" startline="1" endline="12" pcid="60140">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        String result = s.replace(',', ' ');
        System.out.println(result);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03834_4P.java" startline="1" endline="12" pcid="60142">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        String result = s.replace(',', ' ');
        System.out.println(result);
        sc.close();
    }
}

</source>
</class>

<class classid="600" nclones="3" nlines="19" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p03835_0P.java" startline="1" endline="22" pcid="60141">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int K = sc.nextInt();
        int S = sc.nextInt();
        sc.close();

        int count = 0;
        for (int X = 0; X <= K; X++) {
            for (int Y = 0; Y <= K; Y++) {
                int Z = S - X - Y;
                if (Z >= 0 && Z <= K) {
                    count++;
                }
            }
        }
        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03835_4P.java" startline="1" endline="22" pcid="67554">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int K = sc.nextInt();
        int S = sc.nextInt();
        sc.close();

        int count = 0;
        for (int X = 0; X <= K; X++) {
            for (int Y = 0; Y <= K; Y++) {
                int Z = S - X - Y;
                if (Z >= 0 && Z <= K) {
                    count++;
                }
            }
        }
        System.out.println(count);
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03835_2P.java" startline="1" endline="23" pcid="60145">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int K = sc.nextInt();
        int S = sc.nextInt();
        sc.close();

        int count = 0;
        for (int X = 0; X <= K; X++) {
            for (int Y = 0; Y <= K; Y++) {
                int Z = S - X - Y;

                if (Z >= 0 && Z <= K) {
                    count++;
                }
            }
        }
        System.out.println(count);
    }
}

</source>
</class>

<class classid="601" nclones="2" nlines="21" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p03845_3P.java" startline="1" endline="27" pcid="60179">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        int[] T = new int[N];
        long totalTime = 0;
        for (int i = 0; i < N; i++) {
            T[i] = sc.nextInt();
            totalTime += T[i];
        }

        int M = sc.nextInt();
        for (int i = 0; i < M; i++) {
            int P = sc.nextInt();
            int X = sc.nextInt();

            long currentTotal = totalTime - T[P - 1] + X;
            System.out.println(currentTotal);
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03845_1P.java" startline="1" endline="27" pcid="67560">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        int[] T = new int[N];
        long totalTime = 0;
        for (int i = 0; i < N; i++) {
            T[i] = sc.nextInt();
            totalTime += T[i];
        }

        int M = sc.nextInt();
        for (int i = 0; i < M; i++) {
            int P = sc.nextInt();
            int X = sc.nextInt();

            long currentTotal = totalTime - T[P - 1] + X;
            System.out.println(currentTotal);
        }

        sc.close();
    }
}

</source>
</class>

<class classid="602" nclones="5" nlines="27" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p03862_1P.java" startline="1" endline="33" pcid="60236">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        long x = sc.nextLong();
        long[] a = new long[N];
        for (int i = 0; i < N; i++) {
            a[i] = sc.nextLong();
        }

        long operations = 0;

        if (a[0] + a[1] > x) {
            long diff = (a[0] + a[1]) - x;
            operations += diff;
            a[1] = Math.max(0, a[1] - diff);
        }

        for (int i = 1; i < N - 1; i++) {
            if (a[i] + a[i + 1] > x) {
                long diff = (a[i] + a[i + 1]) - x;
                operations += diff;
                a[i + 1] = Math.max(0, a[i + 1] - diff);
            }
        }

        System.out.println(operations);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03864_2P.java" startline="1" endline="37" pcid="67565">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        long x = sc.nextLong();
        long[] a = new long[N];

        for (int i = 0; i < N; i++) {
            a[i] = sc.nextLong();
        }

        long operations = 0;

        if (a[0] + a[1] > x) {
            long diff = (a[0] + a[1]) - x;
            operations += diff;
            a[1] = Math.max(0, a[1] - diff);
        }

        for (int i = 1; i < N - 1; i++) {
            if (a[i] + a[i + 1] > x) {
                long diff = (a[i] + a[i + 1]) - x;
                operations += diff;
                a[i + 1] = Math.max(0, a[i + 1] - diff);
            }
        }

        System.out.println(operations);

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03864_4P.java" startline="1" endline="33" pcid="60247">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        long x = sc.nextLong();
        long[] a = new long[N];
        for (int i = 0; i < N; i++) {
            a[i] = sc.nextLong();
        }

        long operations = 0;

        if (a[0] + a[1] > x) {
            long diff = (a[0] + a[1]) - x;
            operations += diff;
            a[1] = Math.max(0, a[1] - diff);
        }

        for (int i = 1; i < N - 1; i++) {
            if (a[i] + a[i + 1] > x) {
                long diff = (a[i] + a[i + 1]) - x;
                operations += diff;
                a[i + 1] = Math.max(0, a[i + 1] - diff);
            }
        }

        System.out.println(operations);
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03862_4P.java" startline="1" endline="34" pcid="60239">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        long x = sc.nextLong();
        long[] a = new long[N];
        for (int i = 0; i < N; i++) {
            a[i] = sc.nextLong();
        }

        long operations = 0;

        if (a[0] + a[1] > x) {
            long diff = (a[0] + a[1]) - x;
            operations += diff;
            a[1] = Math.max(0, a[1] - diff);
        }

        for (int i = 1; i < N - 1; i++) {
            if (a[i] + a[i + 1] > x) {
                long diff = (a[i] + a[i + 1]) - x;
                operations += diff;
                a[i + 1] = Math.max(0, a[i + 1] - diff);
            }
        }

        System.out.println(operations);

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03862_2P.java" startline="1" endline="34" pcid="60237">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        long x = sc.nextLong();
        long[] a = new long[N];
        for (int i = 0; i < N; i++) {
            a[i] = sc.nextLong();
        }

        long operations = 0;

        if (a[0] + a[1] > x) {
            long diff = (a[0] + a[1]) - x;
            operations += diff;
            a[1] = Math.max(0, a[1] - diff);
        }

        for (int i = 1; i < N - 1; i++) {
            if (a[i] + a[i + 1] > x) {
                long diff = (a[i] + a[i + 1]) - x;
                operations += diff;
                a[i + 1] = Math.max(0, a[i + 1] - diff);
            }
        }

        System.out.println(operations);
        sc.close();
    }
}

</source>
</class>

<class classid="603" nclones="4" nlines="21" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p03909_0P.java" startline="1" endline="27" pcid="60262">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int H = sc.nextInt();
        int W = sc.nextInt();

        for (int i = 0; i < H; i++) {
            for (int j = 0; j < W; j++) {
                String s = sc.next();
                if (s.equals("snuke")) {
                    char colChar = (char) ('A' + j);
                    int rowNum = i + 1;
                    System.out.println(colChar + "" + rowNum);
                    sc.close();
                    return;
                }
            }
        }

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03919_3P.java" startline="1" endline="25" pcid="67571">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int H = sc.nextInt();
        int W = sc.nextInt();

        for (int i = 0; i < H; i++) {
            for (int j = 0; j < W; j++) {
                String s = sc.next();
                if (s.equals("snuke")) {
                    char colChar = (char) ('A' + j);
                    int rowNum = i + 1;
                    System.out.println(colChar + "" + rowNum);
                    sc.close();
                    return;
                }
            }
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03909_2P.java" startline="1" endline="24" pcid="60264">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int H = sc.nextInt();
        int W = sc.nextInt();

        for (int i = 0; i < H; i++) {
            for (int j = 0; j < W; j++) {
                String s = sc.next();
                if (s.equals("snuke")) {
                    char colChar = (char) ('A' + j);
                    int rowNum = i + 1;
                    System.out.println(colChar + "" + rowNum);
                    sc.close();
                    return;
                }
            }
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/train/1/gemini_p03919_4P.java" startline="1" endline="24" pcid="60282">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int H = sc.nextInt();
        int W = sc.nextInt();

        for (int i = 0; i < H; i++) {
            for (int j = 0; j < W; j++) {
                String s = sc.next();
                if (s.equals("snuke")) {
                    char colChar = (char) ('A' + j);
                    int rowNum = i + 1;
                    System.out.println(colChar + "" + rowNum);
                    sc.close();
                    return;
                }
            }
        }
        sc.close();
    }
}

</source>
</class>

<class classid="604" nclones="2" nlines="28" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p03946_1P.java" startline="1" endline="35" pcid="60313">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        long T = sc.nextLong();
        long[] A = new long[N];
        for (int i = 0; i < N; i++) {
            A[i] = sc.nextLong();
        }

        long maxProfit = 0;
        long minPrice = A[0];

        for (int i = 1; i < N; i++) {
            maxProfit = Math.max(maxProfit, A[i] - minPrice);
            minPrice = Math.min(minPrice, A[i]);
        }

        long countMaxProfitPairs = 0;
        minPrice = A[0];
        for (int i = 1; i < N; i++) {
            if (A[i] - minPrice == maxProfit) {
                countMaxProfitPairs++;
            }
            minPrice = Math.min(minPrice, A[i]);
        }

        System.out.println(countMaxProfitPairs);

        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03946_2P.java" startline="1" endline="34" pcid="67578">
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        long T = sc.nextLong();
        long[] A = new long[N];
        for (int i = 0; i < N; i++) {
            A[i] = sc.nextLong();
        }

        long maxProfit = 0;
        long minPrice = A[0];
        for (int i = 1; i < N; i++) {
            maxProfit = Math.max(maxProfit, A[i] - minPrice);
            minPrice = Math.min(minPrice, A[i]);
        }

        long countMaxProfitPairs = 0;
        minPrice = A[0];
        for (int i = 1; i < N; i++) {
            if (A[i] - minPrice == maxProfit) {
                countMaxProfitPairs++;
            }
            minPrice = Math.min(minPrice, A[i]);
        }

        System.out.println(countMaxProfitPairs);

        sc.close();
    }
}

</source>
</class>

<class classid="605" nclones="2" nlines="38" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p03971_2P.java" startline="1" endline="40" pcid="60396">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int A = sc.nextInt();
        int B = sc.nextInt();
        String S = sc.next();

        int passedCount = 0;
        int overseasPassedCount = 0;

        for (int i = 0; i < N; i++) {
            char participantType = S.charAt(i);

            if (participantType == 'a') {
                if (passedCount < A + B) {
                    System.out.println("Yes");
                    passedCount++;
                } else {
                    System.out.println("No");
                }
            } else if (participantType == 'b') {
                if (passedCount < A + B && overseasPassedCount < B) {
                    System.out.println("Yes");
                    passedCount++;
                    overseasPassedCount++;
                } else {
                    System.out.println("No");
                }
            } else {
                System.out.println("No");
            }
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p03971_0P.java" startline="1" endline="40" pcid="67583">
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int A = sc.nextInt();
        int B = sc.nextInt();
        String S = sc.next();

        int passedCount = 0;
        int overseasPassedCount = 0;

        for (int i = 0; i < N; i++) {
            char participantType = S.charAt(i);

            if (participantType == 'a') {
                if (passedCount < A + B) {
                    System.out.println("Yes");
                    passedCount++;
                } else {
                    System.out.println("No");
                }
            } else if (participantType == 'b') {
                if (passedCount < A + B && overseasPassedCount < B) {
                    System.out.println("Yes");
                    passedCount++;
                    overseasPassedCount++;
                } else {
                    System.out.println("No");
                }
            } else {
                System.out.println("No");
            }
        }
        sc.close();
    }
}

</source>
</class>

<class classid="606" nclones="2" nlines="38" similarity="100">
<source file="../preprocessed_Datasplit/train/1/gemini_p04035_0P.java" startline="1" endline="42" pcid="60595">
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        long L = sc.nextLong();
        long[] a = new long[N];
        for (int i = 0; i < N; i++) {
            a[i] = sc.nextLong();
        }

        int targetKnot = -1;
        for (int i = 0; i < N - 1; i++) {
            if (a[i] + a[i + 1] >= L) {
                targetKnot = i;
                break;
            }
        }

        if (targetKnot == -1) {
            System.out.println("Impossible");
        } else {
            System.out.println("Possible");
            List<Integer> result = new ArrayList<>();
            for (int i = 0; i < targetKnot; i++) {
                result.add(i + 1);
            }
            for (int i = N - 2; i >= targetKnot; i--) {
                result.add(i + 1);
            }

            for (int knot : result) {
                System.out.println(knot);
            }
        }
        sc.close();
    }
}

</source>
<source file="../preprocessed_Datasplit/test/1/gemini_p04035_4P.java" startline="1" endline="43" pcid="67601">
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        long L = sc.nextLong();
        long[] a = new long[N];
        for (int i = 0; i < N; i++) {
            a[i] = sc.nextLong();
        }

        int targetKnot = -1;
        for (int i = 0; i < N - 1; i++) {
            if (a[i] + a[i + 1] >= L) {
                targetKnot = i;
                break;
            }
        }

        if (targetKnot == -1) {
            System.out.println("Impossible");
        } else {
            System.out.println("Possible");
            List<Integer> result = new ArrayList<>();
            for (int i = 0; i < targetKnot; i++) {
                result.add(i + 1);
            }
            for (int i = N - 2; i >= targetKnot; i--) {
                result.add(i + 1);
            }

            for (int knot : result) {
                System.out.println(knot);
            }
        }

        sc.close();
    }
}

</source>
</class>

</clones>
